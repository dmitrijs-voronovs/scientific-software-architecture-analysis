id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/16028:410,deployability,fail,fails,410,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:759,deployability,log,logxmin,759,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:806,deployability,log,logxmax,806,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:863,deployability,log,logxmax-logxmin,863,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:942,deployability,log,logxmin,942,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1830,deployability,version,version,1830,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1857,deployability,Instal,Installation,1857,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:931,energy efficiency,Power,Power,931,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1420,energy efficiency,Draw,Draw,1420,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1433,energy efficiency,Draw,Draw,1433,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1785,energy efficiency,Draw,Draw,1785,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1798,energy efficiency,Draw,Draw,1798,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1830,integrability,version,version,1830,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:24,modifiability,variab,variable,24,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:373,modifiability,variab,variable,373,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1830,modifiability,version,version,1830,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:78,performance,content,content,78,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:539,performance,content,content,539,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:410,reliability,fail,fails,410,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:759,safety,log,logxmin,759,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:806,safety,log,logxmax,806,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:863,safety,log,logxmax-logxmin,863,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:942,safety,log,logxmin,942,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:759,security,log,logxmin,759,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:806,security,log,logxmax,806,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:863,security,log,logxmax-logxmin,863,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:942,security,log,logxmin,942,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:759,testability,log,logxmin,759,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:806,testability,log,logxmax,806,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:863,testability,log,logxmax-logxmin,863,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:942,testability,log,logxmin,942,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/issues/16028:1942,testability,context,context,1942,"[RF] RooDataHist from a variable binning TH1D: different shape, different bin content; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. This problem has been already mentioned here [0] but no solution has been proposed. When you compare a RooDataHist obtained from a TH1 with fixed size binning everything looks ok but when you do the same from a variable size binning the comparison fails. See code below to reproduce the comparison. [0] https://root-forum.cern.ch/t/roodatahist-and-th1d-why-different-shape-bin-content/56971. ### Reproducer. just run root mytest.cpp. ```. using namespace RooFit;. void mytest() {. const int nBin=100;. double xbins[nBin+1];. const float left_Val = 150;. const float rightVal = 1150; . const float logxmin = TMath::Log10(left_Val);. const float logxmax = TMath::Log10(rightVal);. const double dxLog = (logxmax-logxmin)/nBin;. for (int i=0;i<=nBin;i++) xbins[i] = TMath::Power(10., logxmin + i * dxLog);. TF1 *f1 = new TF1(""f1"",""expo(0)"",left_Val,rightVal);. f1->SetParameters(1e2,-1e-2);. TH1D *h1 = new TH1D(""h1"","""",nBin,xbins);. h1->FillRandom(""f1"",10000000);. RooRealVar mInv(""mInv"",""m [GeV]"",150,1150);. RooDataHist hist_test1(""hist_test1"",""hist_test1"",mInv,Import(*h1,false));. TCanvas *cExpo1 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test1 = mInv.frame();. hist_test1.plotOn(plot_test1,DataError(RooAbsData::SumW2));. plot_test1->Draw();. h1->Draw(""same"");. TH1D *h2 = new TH1D(""h2"","""",nBin,left_Val,rightVal);. h2->FillRandom(""f1"",10000000);. RooDataHist hist_test2(""hist_test2"",""hist_test2"",mInv,Import(*h2,false));. TCanvas *cExpo2 = new TCanvas();. gPad->SetLogx();. gPad->SetLogy();. auto plot_test2 = mInv.frame();. hist_test2.plotOn(plot_test2,DataError(RooAbsData::SumW2));. plot_test2->Draw();. h2->Draw(""same"");. }. ```. ### ROOT version. ROOT 6.30/06. ### Installation method. homebrew. ### Operating system. OSX Sonoma 14.5. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16028
https://github.com/root-project/root/pull/16029:337,deployability,updat,updated,337,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:19,integrability,translat,translated,19,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:87,integrability,translat,translation,87,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:19,interoperability,translat,translated,19,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:87,interoperability,translat,translation,87,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:202,reliability,doe,doesn,202,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:305,safety,test,tested,305,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:337,safety,updat,updated,337,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:337,security,updat,updated,337,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16029:305,testability,test,tested,305,Graphics tutorials translated into Python.; # This Pull request:. Incorporates a total translation of graphics-tutorials into Python language for the. `IPython[]:` interpreter. ## Changes or fixes:. It doesn't change or fix anything but adds new ways to re-read graphics-tutorials. ## Checklist:. - [yes] tested changes locally. - [yes] updated the docs (if necessary). - [yes] branch up to date with 'origin/master'.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16029
https://github.com/root-project/root/pull/16030:77,deployability,configurat,configuration,77,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:77,integrability,configur,configuration,77,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:77,modifiability,configur,configuration,77,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:9,safety,Isol,Isolate,9,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:49,safety,test,test,49,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:98,safety,test,test,98,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:9,security,Iso,Isolate,9,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:77,security,configur,configuration,77,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:9,testability,Isol,Isolate,9,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:49,testability,test,test,49,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/pull/16030:98,testability,test,test,98,[pyroot] Isolate potentially leaking function in test; Let's see if this new configuration of the test still shows issues on some CI runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16030
https://github.com/root-project/root/issues/16031:1009,availability,Operat,Operating,1009,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:960,deployability,version,version,960,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:979,deployability,Instal,Installation,979,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:795,integrability,transform,transform,795,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:960,integrability,version,version,960,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:795,interoperability,transform,transform,795,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:960,modifiability,version,version,960,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/issues/16031:1047,testability,context,context,1047,"VecOps binary functions not using the right types; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Binary functions in VecOps are not always using the right types, as reported [here](https://root-forum.cern.ch/t/std-pow-x-vecops-rvec/60211). ### Reproducer. ```. auto v = ROOT::RVec<double>{3.4};. cout << ROOT::VecOps::pow(v, 2) << endl; // output: { 9 }. cout << ROOT::VecOps::pow(v, 2.0) << endl; // output: { 11.56 }. cout << std::pow(3.4, 2) << endl; // output: 11.56 . cout << std::pow(3.4, 2.0) << endl; //output: 11.56 . ```. See RVec.hxx. ```. template <typename T0, typename T1> \. RVec<PromoteTypes<T0, T1>> NAME(const RVec<T0> &v, const T1 &y) \. { \. RVec<PromoteTypes<T0, T1>> ret(v.size()); \. auto f = [&y](const T1 &x) { return FUNC(x, y); }; \. std::transform(v.begin(), v.end(), ret.begin(), f); \. return ret; \. } . ```. There it should be. ```. auto f = [&y](const T0 &x) { return FUNC(x, y); };. ```. ### ROOT version. 6.32. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16031
https://github.com/root-project/root/pull/16032:16,safety,Isol,Isolate,16,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:56,safety,test,test,56,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:68,safety,test,test,68,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:16,security,Iso,Isolate,16,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:16,testability,Isol,Isolate,16,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:56,testability,test,test,56,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16032:68,testability,test,test,68,[6.32] [pyroot] Isolate potentially leaking function in test ; Also test 6.32 CI,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16032
https://github.com/root-project/root/pull/16033:213,performance,memor,memory,213,"Revert ""[ntuple] add debug output to RVectorField""; This reverts commit b5d751c069df2725dbc0d96bb1a6a677addc3895. The problem that lead to adding additional debug output is understood and turned out to be a CMSSW memory issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16033
https://github.com/root-project/root/pull/16033:213,usability,memor,memory,213,"Revert ""[ntuple] add debug output to RVectorField""; This reverts commit b5d751c069df2725dbc0d96bb1a6a677addc3895. The problem that lead to adding additional debug output is understood and turned out to be a CMSSW memory issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16033
https://github.com/root-project/root/issues/16034:1705,availability,fault,fault,1705,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1918,availability,Operat,Operating,1918,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1862,deployability,version,version,1862,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1888,deployability,Instal,Installation,1888,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:171,energy efficiency,current,currently,171,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1022,energy efficiency,model,model,1022,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1072,energy efficiency,model,model,1072,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1163,energy efficiency,model,model,1163,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1705,energy efficiency,fault,fault,1705,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:283,integrability,event,event,283,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1862,integrability,version,version,1862,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:209,interoperability,specif,specified,209,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:248,interoperability,compatib,compatibility,248,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1862,modifiability,version,version,1862,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1705,performance,fault,fault,1705,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1705,reliability,fault,fault,1705,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1705,safety,fault,fault,1705,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1022,security,model,model,1022,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1072,security,model,model,1072,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1163,security,model,model,1163,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1730,security,sign,signature,1730,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/issues/16034:1956,testability,context,context,1956,"[ntuple] Unable to use `std::vector` in RDF; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Reading vector fields in an RNTuple through RDF is currently only possible when they are specified as `ROOT::RVec`. This breaks compatibility with TTree-based RDF event loops, where both `std::vector` and `ROOT::RVec` can be used for branches that hold collections. ### Reproducer. ```cpp. using ROOT::Experimental::RNTupleModel;. using ROOT::Experimental::RNTupleWriter;. const std::string kTreeName = ""T"";. const std::string kTreeFileName = ""ttree_rdf_stdvector.root"";. const std::string kNTupleName = ""N"";. const std::string kNTupleFileName = ""ntuple_rdf_stdvector.root"";. void write_tree() {. auto file = std::unique_ptr<TFile>(TFile::Open(kTreeFileName.c_str(), ""RECREATE""));. auto tree = std::make_unique<TTree>(kTreeName.c_str(), kTreeName.c_str());. std::vector<int> brVector;. tree->Branch(""V"", &brVector);. brVector = {1, 2, 3};. tree->Fill();. tree->Write();. }. void write_ntuple() {. auto model = RNTupleModel::Create();. auto fldVector = model->MakeField<std::vector<int>>(""V"");. auto ntuple =. RNTupleWriter::Recreate(std::move(model), kNTupleName, kNTupleFileName);. *fldVector = {1, 2, 3};. ntuple->Fill();. }. void read(std::string_view name, std::string_view path) {. ROOT::RDataFrame df(name, path);. auto dfRes = df.Define(""V_size"", [](std::vector<int> vs) { return vs.size(); }, {""V""}). .Display();. dfRes->Print();. }. void rdf_stdvector() {. write_tree();. read(kTreeName, kTreeFileName);. write_ntuple();. read(kNTupleName, kNTupleFileName);. }. ```. Running this as a ROOT macro will show that it works for TTree, but for RNTuple it results in a segmentation fault. Changing the type signature of the `Define` lambda to `ROOT::RVec<int>` will run and produce the expected output for both TTree and RNTuple. ### ROOT version. master, any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16034
https://github.com/root-project/root/pull/16036:45,interoperability,specif,specification,45,[skip-ci][NFC][ntuple] minor style change in specification; Follow-up of https://github.com/root-project/root/pull/16006#discussion_r1670655733.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16036
https://github.com/root-project/root/pull/16037:110,deployability,version,version,110,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:245,deployability,updat,updated,245,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:110,integrability,version,version,110,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:110,modifiability,version,version,110,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:215,safety,test,tested,215,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:245,safety,updat,updated,245,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:245,security,updat,updated,245,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/pull/16037:215,testability,test,tested,215,"[ntuple] remove RPageSource::fDecompressor; RPageSource and all its children are using exclusively the static version of RNTupleDecompressor::Unzip, so there's no need to keep it there for now. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16037
https://github.com/root-project/root/issues/16038:19,availability,error,error,19,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:312,availability,Error,Error,312,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:973,availability,error,error,973,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2736,availability,echo,echo,2736,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3415,availability,Operat,Operating,3415,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:148,deployability,build,build,148,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:228,deployability,build,build,228,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:282,deployability,fail,fails,282,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:343,deployability,Modul,Modules,343,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:479,deployability,Stack,Stack,479,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:540,deployability,Modul,Modules,540,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:636,deployability,modul,modules,636,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:726,deployability,Modul,Modules,726,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:952,deployability,fail,failed,952,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:990,deployability,configurat,configuration,990,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1140,deployability,build,build,1140,"g to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1250,deployability,updat,update,1250,"on which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1270,deployability,instal,install,1270,"oot, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1330,deployability,build,build,1330,"make-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1386,deployability,instal,install,1386," (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1426,deployability,instal,install,1426,"issing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1457,deployability,instal,install,1457,"RARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2202,deployability,contain,container,2202,"ive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2307,deployability,contain,container,2307,"t cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 --------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2353,deployability,contain,container,2353,"clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2372,deployability,build,build,2372,"\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2430,deployability,contain,container,2430,"y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2639,deployability,contain,container,2639,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2680,deployability,build,build,2680,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2706,deployability,build,build,2706,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2723,deployability,instal,install,2723,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2763,deployability,version,version,2763,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3339,deployability,Instal,Installation,3339,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3464,deployability,Updat,Update,3464,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1903,energy efficiency,draw,draw-dev,1903,"rent packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:392,integrability,messag,message,392,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:990,integrability,configur,configuration,990,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2763,integrability,version,version,2763,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:326,interoperability,share,share,326,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:392,interoperability,messag,message,392,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:523,interoperability,share,share,523,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:709,interoperability,share,share,709,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1939,interoperability,exchang,exchange-dev,1939," - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 |",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:343,modifiability,Modul,Modules,343,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:540,modifiability,Modul,Modules,540,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:636,modifiability,modul,modules,636,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:726,modifiability,Modul,Modules,726,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:912,modifiability,pac,packages,912,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:990,modifiability,configur,configuration,990,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2763,modifiability,version,version,2763,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:19,performance,error,error,19,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:312,performance,Error,Error,312,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:973,performance,error,error,973,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:282,reliability,fail,fails,282,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:952,reliability,fail,failed,952,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:19,safety,error,error,19,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:312,safety,Error,Error,312,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:343,safety,Modul,Modules,343,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:540,safety,Modul,Modules,540,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:636,safety,modul,modules,636,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:726,safety,Modul,Modules,726,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:973,safety,error,error,973,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1250,safety,updat,update,1250,"on which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1886,safety,test,test-dev,1886,". I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3464,safety,Updat,Update,3464,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:990,security,configur,configuration,990,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1242,security,apt,apt-get,1242,"plication which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1250,security,updat,update,1250,"on which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --dep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1262,security,apt,apt-get,1262,"rences root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1336,security,apt,apt-utils,1336,"8/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1378,security,apt,apt-get,1378,"make:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1404,security,apt,apt-utils,1404,"Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1418,security,apt,apt-get,1418,"d Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1449,security,apt,apt-get,1449," VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2137,security,apt,apt,2137," build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:2970,security,Team,Team,2970,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3464,security,Updat,Update,3464,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1886,testability,test,test-dev,1886,". I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3455,testability,context,context,3455,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:19,usability,error,error,19,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:312,usability,Error,Error,312,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:973,usability,error,error,973,"Could NOT find Vdt error when using 6.32.02 docker image; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build any image based on `rootproject/root:6.32.02-ubuntu24.04` docker file and build any cmake application which references root, it fails with . ```. 9.604 CMake Error at /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:230 (message):. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:1397,usability,dialog,dialog,1397,":. 9.604 Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY). 9.604 Call Stack (most recent call first):. 9.604 /usr/share/cmake-3.28/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE). 9.604 /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args). 9.604 /usr/share/cmake-3.28/Modules/CMakeFindDependencyMacro.cmake:76 (find_package). 9.604 /opt/root/cmake/ROOTConfig.cmake:167 (find_dependency). 9.604 CMakeLists.txt:363 (find_package). ```. I tried 3 different packages `ACTS`, `PODIO`, `JANA2` - all failed with the same error during the configuration. . ### Reproducer. Reproducer, where ACTS is taken as an example. ```Dockerfile. FROM rootproject/root:6.32.02-ubuntu24.04. # Number of build threads. ARG BUILD_THREADS=8. ARG DEBIAN_FRONTEND=noninteractive. RUN root-config --cflags. RUN apt-get update &&\. apt-get install -y python3-pip python3-dev sudo git cmake gdb ninja-build apt-utils bash ccache clang valgrind &&\. apt-get install -y dialog apt-utils&&\. apt-get install -y tzdata &&\. apt-get install -y libmsgsl-dev libftgl-dev libxml2-dev libldap2-dev libgsl0-dev libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/issues/16038:3192,usability,help,help,3192,"v libfftw3-dev libmysqlclient-dev libavahi-compat-libdnssd-dev libssl-dev python3-dev libcfitsio-dev xlibmesa-glu-dev libkrb5-dev gfortran graphviz-dev libpcre3-dev libglew-dev libxmu-dev libexpat-dev python3-jinja2 libtbb-dev libxerces-c-dev cmake libboost-filesystem-dev dpkg-dev libspdlog-dev libxext-dev qtbase5-dev libqt5opengl5-dev libx11-dev libboost-test-dev libocct-draw-dev libeigen3-dev libocct-data-exchange-dev python3-dev libocct-foundation-dev libfmt-dev libxft-dev libboost-program-options-dev libboost-dev binutils libxpm-dev curl libxerces-c3-dev occt-misc python3-yaml &&\. rm -rf /var/lib/apt/lists/*. ENV LC_ALL=C.UTF-8. ENV LANG=C.UTF-8. RUN mkdir -p /container/app/acts/src/v35.2.0 &&\. git clone --depth 1 -b v35.2.0 https://github.com/acts-project/acts /container/app/acts/src/v35.2.0 &&\. mkdir -p /container/app/acts/build/v35.2.0 &&\. cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/container/app/acts/acts-v35.2.0 -DCMAKE_CXX_STANDARD=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DACTS_BUILD_PLUGIN_TGEO=ON -DACTS_BUILD_PLUGIN_DD4HEP=OFF -DACTS_BUILD_PLUGIN_JSON=ON -DACTS_BUILD_PLUGIN_ACTSVG=OFF /container/app/acts/src/v35.2.0&& cmake --build . -- -j 4&& cmake --build . --target install. RUN echo ""done"". ```. ### ROOT version. ```. #7 [4/6] RUN root -b -q. #7 0.544 ------------------------------------------------------------------. #7 0.544 | Welcome to ROOT 6.32.02 https://root.cern |. #7 0.544 | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. #7 0.544 | Built for linuxx8664gcc on Jun 18 2024, 04:46:14 |. #7 0.544 | From tags/v6-32-02@v6-32-02 |. #7 0.544 | With c++ (Ubuntu 13.2.0-23ubuntu4) 13.2.0 |. #7 0.544 | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. #7 0.544 ------------------------------------------------------------------. ```. ### Installation method. Docker image rootproject/root:6.32.02-ubuntu24.04. ### Operating system. Linux. ### Additional context. Update: everything works on rootproject/root:6.28.00-ubuntu22.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16038
https://github.com/root-project/root/pull/16039:13,deployability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,integrability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,interoperability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:256,interoperability,standard,standard,256,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,modifiability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,reliability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,security,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:13,testability,integr,integral,13,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16039:307,usability,support,support,307,"[ntuple] Map integral types to fixed width equivalents; This already used to work for some types, such as `int`, which happen to have the same underlying storage as a fixed width type. This change adds a general `RIntegralTypeMap` with specializations for standard integer types. As a result, RNTuple gains support for `(unsigned) long long` on Linux, which is now mapped to `[u]int64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16039
https://github.com/root-project/root/pull/16040:1,energy efficiency,core,core,1,"[core] Simplify typedef of `[U]Long64_t`; C++ guarantees that `long long` has at least 64 bits, so we don't need the extra code for Windows. FYI @jblomer @enirolf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16040
https://github.com/root-project/root/pull/16040:7,testability,Simpl,Simplify,7,"[core] Simplify typedef of `[U]Long64_t`; C++ guarantees that `long long` has at least 64 bits, so we don't need the extra code for Windows. FYI @jblomer @enirolf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16040
https://github.com/root-project/root/pull/16040:7,usability,Simpl,Simplify,7,"[core] Simplify typedef of `[U]Long64_t`; C++ guarantees that `long long` has at least 64 bits, so we don't need the extra code for Windows. FYI @jblomer @enirolf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16040
https://github.com/root-project/root/pull/16041:53,deployability,API,API,53,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:127,deployability,version,version,127,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:166,deployability,API,API,166,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:53,integrability,API,API,53,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:127,integrability,version,version,127,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:166,integrability,API,API,166,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:53,interoperability,API,API,53,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:166,interoperability,API,API,166,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16041:127,modifiability,version,version,127,"[PyROOT] Implement TPython::ExecScript with CPyCppyy API; Now that the CPyCppyy::ExecScript method is synced with the TPython. version, we can just call the CPyCppyy API in TPython::ExecScript.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16041
https://github.com/root-project/root/pull/16042:71,deployability,modul,modules,71,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:128,deployability,modul,modules,128,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:327,deployability,modul,modules,327,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:512,deployability,modul,modules,512,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:560,deployability,modul,modules,560,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:606,deployability,modul,modules,606,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:756,deployability,modul,modules,756,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:825,deployability,automat,automatically,825,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1075,deployability,version,versions,1075,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1202,deployability,version,version,1202,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1360,deployability,modul,modules,1360,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1574,deployability,modul,modules,1574,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1734,deployability,modul,modules,1734,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1773,deployability,Updat,Update,1773,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1807,deployability,modul,modules,1807,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1869,deployability,modul,modules,1869,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:84,energy efficiency,load,loaded,84,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:136,energy efficiency,core,core,136,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:540,energy efficiency,draw,draw,540,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:568,energy efficiency,draw,draw,568,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:695,energy efficiency,draw,draw,695,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1815,energy efficiency,load,loading,1815,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:202,integrability,sub,sub-directory,202,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1075,integrability,version,versions,1075,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1202,integrability,version,version,1202,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1557,integrability,configur,configure,1557,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1637,integrability,batch,batch,1637,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:71,modifiability,modul,modules,71,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:128,modifiability,modul,modules,128,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:327,modifiability,modul,modules,327,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:512,modifiability,modul,modules,512,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:560,modifiability,modul,modules,560,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:606,modifiability,modul,modules,606,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:756,modifiability,modul,modules,756,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1075,modifiability,version,versions,1075,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1202,modifiability,version,version,1202,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1360,modifiability,modul,modules,1360,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1557,modifiability,configur,configure,1557,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1574,modifiability,modul,modules,1574,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1734,modifiability,modul,modules,1734,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1807,modifiability,modul,modules,1807,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1869,modifiability,modul,modules,1869,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:84,performance,load,loaded,84,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1637,performance,batch,batch,1637,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1815,performance,load,loading,1815,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:274,reliability,doe,does,274,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1210,reliability,doe,does,1210,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:71,safety,modul,modules,71,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:128,safety,modul,modules,128,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:327,safety,modul,modules,327,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:512,safety,modul,modules,512,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:560,safety,modul,modules,560,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:606,safety,modul,modules,606,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:756,safety,modul,modules,756,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1360,safety,modul,modules,1360,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1574,safety,modul,modules,1574,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1734,safety,modul,modules,1734,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1773,safety,Updat,Update,1773,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1807,safety,modul,modules,1807,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1869,safety,modul,modules,1869,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1557,security,configur,configure,1557,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1773,security,Updat,Update,1773,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:825,testability,automat,automatically,825,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:44,usability,widget,widgets,44,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:779,usability,support,support,779,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1219,usability,support,support,1219,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1269,usability,widget,widgets,1269,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1320,usability,custom,custom,1320,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1347,usability,user,user-defined,1347,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1372,usability,support,support,1372,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1383,usability,custom,custom,1383,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1390,usability,user,user,1390,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1567,usability,custom,custom,1567,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1601,usability,custom,custom,1601,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16042:1792,usability,support,support,1792,"[webgui] enable usage of `importmap` in web widgets; Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. . This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`. But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:. ```. <script type=""importmap"">. {. ""imports"": {. ""jsroot"": ""./jsrootsys/modules/main.mjs"",. ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",. ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",. ""jsrootsys/"" :: ""./jsrootsys/"". }. }. ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. . But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. . Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes. Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16042
https://github.com/root-project/root/pull/16043:243,availability,error,error,243,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:243,performance,error,error,243,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:45,safety,test,tests,45,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:213,safety,test,test,213,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:218,safety,test,testGradient,218,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:243,safety,error,error,243,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:45,testability,test,tests,45,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:213,testability,test,test,213,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:218,testability,test,testGradient,218,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16043:243,usability,error,error,243,[math][roofit] Include missing header in two tests; Found by the conda nightly . ```. 2024-07-17T04:49:33.5552609Z /home/conda/feedstock_root/build_artifacts/root_base_1721190805440/work/root-source/math/mathcore/test/testGradient.cxx:467:36: error: 'setprecision' is not a member of 'std'. 2024-07-17T04:49:33.5632853Z 467 | std::cout << std::fixed << std::setprecision(4);. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16043
https://github.com/root-project/root/pull/16044:22,testability,simul,simulation,22,[RF] Add tutorial for simulation based inference; - created new tutorial for simulation based inference (SBI),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16044
https://github.com/root-project/root/pull/16044:77,testability,simul,simulation,77,[RF] Add tutorial for simulation based inference; - created new tutorial for simulation based inference (SBI),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16044
https://github.com/root-project/root/pull/16045:28,deployability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,deployability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:455,deployability,version,version,455,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:481,deployability,updat,updated,481,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:447,energy efficiency,current,current,447,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,integrability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,integrability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:455,integrability,version,version,455,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,interoperability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,interoperability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,modifiability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,modifiability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:455,modifiability,version,version,455,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,reliability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,reliability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:216,safety,except,except,216,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:277,safety,test,tested,277,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:316,safety,test,test,316,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:481,safety,updat,updated,481,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,security,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,security,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:481,security,updat,updated,481,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:28,testability,integr,integrals,28,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:172,testability,integr,integrals,172,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:277,testability,test,tested,277,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:316,testability,test,test,316,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16045:359,usability,user,user-attachments,359,"[RF] Turn on the Analytical integrals for Hypatia2; # This Pull request:. To address https://github.com/root-project/root/issues/7254. ## Changes or fixes:. The analytical integrals code in Hypatia2 is un-commented, except a few lines that are not needed. ## Checklist:. - [x] tested changes locally (the script for test: [test_script.zip](https://github.com/user-attachments/files/16266457/test_script.zip), where the `RooHypatia2O` class is the current version in master). - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16045
https://github.com/root-project/root/pull/16046:95,deployability,Continu,Continue,95,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:289,deployability,build,building,289,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:339,deployability,build,builds,339,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:444,deployability,artifact,artifact,444,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:487,deployability,build,build,487,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:545,deployability,Instal,Install,545,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:560,deployability,version,version,560,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:752,deployability,releas,releases,752,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:786,deployability,build,build,786,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:806,deployability,build,build,806,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:833,deployability,build,building,833,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:928,deployability,build,builds,928,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1013,deployability,depend,dependencies,1013,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:313,energy efficiency,core,core,313,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:768,energy efficiency,OPTIM,OPTIMIZATION,768,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:560,integrability,version,version,560,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1013,integrability,depend,dependencies,1013,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:560,modifiability,version,version,560,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:618,modifiability,pac,packages,618,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1013,modifiability,depend,dependencies,1013,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:768,performance,OPTIMIZ,OPTIMIZATION,768,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:135,safety,test,testing,135,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:361,safety,test,tests,361,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:477,safety,Test,Test,477,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1013,safety,depend,dependencies,1013,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:135,testability,test,testing,135,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:361,testability,test,tests,361,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:477,testability,Test,Test,477,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1013,testability,depend,dependencies,1013,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:266,usability,Statu,Status,266,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:324,usability,workflow,workflow,324,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:394,usability,document,documentation,394,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:514,usability,document,documentation,514,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:812,usability,workflow,workflows,812,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:856,usability,workflow,workflow,856,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:935,usability,document,documentation,935,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:995,usability,support,supports,995,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/pull/16046:1102,usability,workflow,workflow,1102,"[skip-ci] [docu] Generate Doxygen docs with Makefile + GitHub Actions 2; # This Pull request:. Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners. Uses our existing Makefile setup. Initial PR #15337. ## Status. Succeeded with building only docs for `core`. The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:. - [x] **Test with build from scratch and all documentation folders**. - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images. - [ ] Upload result to website/S3. - [ ] Nightlies for different releases. - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16046
https://github.com/root-project/root/issues/16047:451,availability,Operat,Operating,451,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:386,deployability,version,version,386,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:407,deployability,Instal,Installation,407,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:428,deployability,build,build,428,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:386,integrability,version,version,386,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:124,modifiability,variab,variable,124,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:386,modifiability,version,version,386,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:489,testability,context,context,489,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/issues/16047:281,usability,user,user-attachments,281,"TMVA SOFIE shadow declaration; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There is a shadow variable declaration as highlighted by the linter in PRs, see for example https://github.com/root-project/root/pull/16042/files. ![image](https://github.com/user-attachments/assets/8b4df9b7-42a3-4676-a862-725299f61ad7). ### Reproducer. See description. ### ROOT version. Master. ### Installation method. build from source. ### Operating system. All. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16047
https://github.com/root-project/root/pull/16048:237,deployability,version,versions,237,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:271,deployability,modul,modules,271,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:237,integrability,version,versions,237,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:237,modifiability,version,versions,237,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:271,modifiability,modul,modules,271,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:271,safety,modul,modules,271,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16048:9,usability,support,support,9,[webgui] support importmap in `THttpServer` [6.32]; Only backport functionality to insert `importmap` script into HTML files. If no magic string appears in HTML code - old functionality will be used. Let use newer JSROOT with older ROOT versions. Also let use jsroot ES6 modules directly in HTML files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16048
https://github.com/root-project/root/pull/16049:19,deployability,version,version,19,[skip-ci] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16049
https://github.com/root-project/root/pull/16049:130,deployability,fail,failed-to-materialize-symbols,130,[skip-ci] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16049
https://github.com/root-project/root/pull/16049:19,integrability,version,version,19,[skip-ci] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16049
https://github.com/root-project/root/pull/16049:19,modifiability,version,version,19,[skip-ci] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16049
https://github.com/root-project/root/pull/16049:130,reliability,fail,failed-to-materialize-symbols,130,[skip-ci] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16049
https://github.com/root-project/root/pull/16050:58,deployability,API,API,58,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:179,deployability,updat,updated,179,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:58,integrability,API,API,58,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:58,interoperability,API,API,58,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:149,safety,test,tested,149,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:179,safety,updat,updated,179,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:179,security,updat,updated,179,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/pull/16050:149,testability,test,tested,149,[ntuple] replace pointers with references in some factory API; - RNTupleInspector::Create. - RNTupleReader::Open (2 overloads). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16050
https://github.com/root-project/root/issues/16051:603,availability,Down,Download,603,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1371,availability,Operat,Operating,1371,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:747,deployability,releas,releases,747,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1309,deployability,version,version,1309,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1328,deployability,Instal,Installation,1328,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:363,energy efficiency,load,load,363,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:932,energy efficiency,Green,Green,932,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1147,energy efficiency,Green,Green,1147,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:159,integrability,sub,subtle,159,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1309,integrability,version,version,1309,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1309,modifiability,version,version,1309,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:363,performance,load,load,363,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:874,safety,test,test,874,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1070,safety,test,test,1070,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:443,security,session,session,443,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:874,testability,test,test,874,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1070,testability,test,test,1070,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1411,testability,context,context,1411,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:321,usability,user,user-defined,321,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:612,usability,minim,minimal,612,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/issues/16051:1212,usability,behavi,behavior,1212,"TColor::GetFreeColorIndex() returns index that is already used; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022. 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`. 3. `python3 ./TColorBug.py`. 4. Output. 	```. 	Creating test file in a separate process. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created. 	Reading test file. 	ROOT.TColor.GetFreeColorIndex() = 1179. 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor. 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used. 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16051
https://github.com/root-project/root/pull/16052:11,deployability,Updat,Update,11,[v632][RF] Update RooFit AD to support ATLAS and CMS Higgs combinations; Backport of #15616.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16052
https://github.com/root-project/root/pull/16052:11,safety,Updat,Update,11,[v632][RF] Update RooFit AD to support ATLAS and CMS Higgs combinations; Backport of #15616.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16052
https://github.com/root-project/root/pull/16052:11,security,Updat,Update,11,[v632][RF] Update RooFit AD to support ATLAS and CMS Higgs combinations; Backport of #15616.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16052
https://github.com/root-project/root/pull/16052:31,usability,support,support,31,[v632][RF] Update RooFit AD to support ATLAS and CMS Higgs combinations; Backport of #15616.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16052
https://github.com/root-project/root/pull/16054:166,interoperability,format,format,166,"[ntuple] Multiple column representations: foundation; Provides the foundations for multiple, alternative column representations of a single field. Extends the binary format to store multiple sets of columns per field and handles (de-)serialization and the descriptor representation (backwards compatible). A follow-up PR will use this capability from the RField/RColumn classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16054
https://github.com/root-project/root/pull/16054:293,interoperability,compatib,compatible,293,"[ntuple] Multiple column representations: foundation; Provides the foundations for multiple, alternative column representations of a single field. Extends the binary format to store multiple sets of columns per field and handles (de-)serialization and the descriptor representation (backwards compatible). A follow-up PR will use this capability from the RField/RColumn classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16054
https://github.com/root-project/root/pull/16054:147,modifiability,Exten,Extends,147,"[ntuple] Multiple column representations: foundation; Provides the foundations for multiple, alternative column representations of a single field. Extends the binary format to store multiple sets of columns per field and handles (de-)serialization and the descriptor representation (backwards compatible). A follow-up PR will use this capability from the RField/RColumn classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16054
https://github.com/root-project/root/pull/16056:13,usability,widget,widgets,13,"[webgui] fix widgets embeding; Fix URL handling when widgets are embed and many connections must be established from same browser tab. Now any widget URL must include connection key therefore workaround with relative URL like `../win2/root.websocket` no longer works. Remove duplicated entry in ""importmap"", Use ""importmap"" in `RBrowser`. Generate new connection key only by direct request from client",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16056
https://github.com/root-project/root/pull/16056:53,usability,widget,widgets,53,"[webgui] fix widgets embeding; Fix URL handling when widgets are embed and many connections must be established from same browser tab. Now any widget URL must include connection key therefore workaround with relative URL like `../win2/root.websocket` no longer works. Remove duplicated entry in ""importmap"", Use ""importmap"" in `RBrowser`. Generate new connection key only by direct request from client",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16056
https://github.com/root-project/root/pull/16056:143,usability,widget,widget,143,"[webgui] fix widgets embeding; Fix URL handling when widgets are embed and many connections must be established from same browser tab. Now any widget URL must include connection key therefore workaround with relative URL like `../win2/root.websocket` no longer works. Remove duplicated entry in ""importmap"", Use ""importmap"" in `RBrowser`. Generate new connection key only by direct request from client",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16056
https://github.com/root-project/root/pull/16057:126,interoperability,format,formatting,126,"[http] exclude duplicated entry from generated importmap [6.32]; ""jsrootsys/"" appears two times which was not correct Improve formatting. Backport from #16056",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16057
https://github.com/root-project/root/pull/16057:90,performance,time,times,90,"[http] exclude duplicated entry from generated importmap [6.32]; ""jsrootsys/"" appears two times which was not correct Improve formatting. Backport from #16056",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16057
https://github.com/root-project/root/pull/16060:36,availability,avail,available,36,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:36,reliability,availab,available,36,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:36,safety,avail,available,36,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:24,security,checksum,checksum,24,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:36,security,availab,available,36,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:104,security,checksum,checksum,104,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:140,security,checksum,checksum,140,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:186,security,checksum,checksums,186,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:199,security,ident,identify,199,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16060:51,usability,custom,custom,51,"[ntuple] Store streamer checksum if available; For custom classes with dictionaries, store the streamer checksum in the field metadata. The checksum is used to apply read rules that use checksums to identify the source class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16060
https://github.com/root-project/root/pull/16061:18,safety,Prevent,Prevent,18,[BP][632][graf2d] Prevent int overflow when computing squared distance; BP of https://github.com/root-project/root/pull/15983.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16061
https://github.com/root-project/root/pull/16061:18,security,Preven,Prevent,18,[BP][632][graf2d] Prevent int overflow when computing squared distance; BP of https://github.com/root-project/root/pull/15983.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16061
https://github.com/root-project/root/issues/16062:3213,availability,Operat,Operating,3213,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1004,deployability,VERSION,VERSION,1004," Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1229,deployability,MODUL,MODULE,1229,"g to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1646,deployability,fail,fail,1646,"rojectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2623,deployability,build,build,2623,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2635,deployability,build,build,2635,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2697,deployability,version,version,2697,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:3169,deployability,Instal,Installation,3169,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:3190,deployability,build,build,3190,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1004,integrability,VERSION,VERSION,1004," Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2697,integrability,version,version,2697,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:70,interoperability,Bind,Bindings,70,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:492,interoperability,specif,specific,492,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:816,interoperability,bind,bindings,816,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:883,interoperability,convers,conversion,883,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1276,interoperability,SHARE,SHARED,1276,"m C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = his",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:9,modifiability,Polymorph,Polymorphic,9,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:70,modifiability,Bind,Bindings,70,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:723,modifiability,polymorph,polymorphic,723,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:816,modifiability,bind,bindings,816,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1004,modifiability,VERSION,VERSION,1004," Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1229,modifiability,MODUL,MODULE,1229,"g to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2697,modifiability,version,version,2697,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:583,reliability,doe,does,583,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1646,reliability,fail,fail,1646,"rojectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2488,reliability,pra,pragma,2488,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2542,reliability,pra,pragma,2542,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1229,safety,MODUL,MODULE,1229,"g to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:1718,safety,except,except,1718,"r polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ----------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:2852,security,Team,Team,2852,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:3257,testability,context,context,3257,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:556,usability,indicat,indicating,556,"[PyROOT] Polymorphic Type Handling Issue in std::map with ROOT Python Bindings; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. Using the latest ROOT master on Arch Linux, I encountered an issue when trying to return a `std::map<std::string, TH1*>` from C++ to Python using cppyy and ROOT. The function populates the map with a mix of TH1* and TH2*. . When converting the map into a python `dict` and retrieving one of the `TH2*` instances, trying to call a method specific to TH2, such as ProjectionY, causes an AttributeError, indicating that the method does not exist. However, cloning the histogram and then calling ProjectionY works as expected, which suggests that the type information for polymorphic classes is not correctly handled in the `value_type` of `std::map` in the Python bindings. Note: The issue seems to go away when getting rid of the conversion from `std::map` to `dict` in the example script. ### Reproducer. CMakeLists.txt:. ```. cmake_minimum_required(VERSION 3.10). project(ROOTHistMapExample). find_package(ROOT REQUIRED). include(${ROOT_USE_FILE}). set(SOURCES ${CMAKE_SOURCE_DIR}/mwe.cpp). set(HEADERS ${CMAKE_SOURCE_DIR}/mwe.h). ROOT_GENERATE_DICTIONARY(G__mwe ${HEADERS} MODULE mwe LINKDEF LinkDef.h). add_library(mwe SHARED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/issues/16062:3031,usability,help,help,3031,"RED ${SOURCES} G__mwe.cxx). target_include_directories(mwe PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}). target_link_libraries(mwe ${ROOT_LIBRARIES}). ```. myscript.py:. ```. import cppyy. import ROOT. cppyy.load_library('libmwe.so'). createHistMap = cppyy.gbl.createHistMap. hist_map = dict(createHistMap()). hist = hist_map[""hist2""]. try:. hist.ProjectionY() # This should fail if the type is not correctly handled. print(""something is wrong""). except AttributeError as e:. print(f""I just encountered the AttributeError: {e}""). cloned_hist = hist.Clone(). cloned_hist.ProjectionY() # This should succeed. print(f""ProjectX called successfully on cloned histogram: {cloned_hist.GetName()}""). ```. mwe.cpp:. ```. #include <mwe.h>. #include <TH1.h>. #include <TH2.h>. std::map<std::string, TH1*> createHistMap() {. std::map<std::string, TH1*> histMap;. TH1* hist1 = new TH1F(""hist1"", ""Histogram 1"", 100, 0, 100);. TH2* hist2 = new TH2F(""hist2"", ""Histogram 2"", 100, 0, 100, 100, 0, 100);. histMap[""hist1""] = hist1;. histMap[""hist2""] = hist2;. return histMap;. }. ```. mwe.h:. ```. #include <string>. #include <TH1.h>. #include <map>. std::map<std::string, TH1*> createHistMap();. ```. LinkDef.h:. ```. #ifdef __CINT__. #pragma link C++ class std::map<std::string, TH1*>+;. #pragma link C++ function createHistMap;. #endif. ```. Steps to Reproduce: `mkdir build && cd build && cmake .. && make && python ../myscript.py`. ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.32.02 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 22 2024, 18:26:29 |. | From heads/master@tags/v6-32-02 |. | With c++ (GCC) 14.1.1 20240522 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source. ### Operating system. ArchLinux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16062
https://github.com/root-project/root/pull/16063:717,availability,restor,restored,717,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:801,availability,down,downside,801,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:76,energy efficiency,profil,profiling,76,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:159,energy efficiency,alloc,allocated,159,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:257,energy efficiency,Load,LoadTree,257,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:296,energy efficiency,alloc,allocating,296,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:530,energy efficiency,Load,LoadTreeWithOptions,530,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:675,energy efficiency,Load,LoadTree,675,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:76,performance,profil,profiling,76,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:187,performance,memor,memory,187,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:257,performance,Load,LoadTree,257,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:403,performance,memor,memory,403,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:410,performance,overhead,overhead,410,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:451,performance,cach,cache,451,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:530,performance,Load,LoadTreeWithOptions,530,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:617,performance,cach,cache,617,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:636,performance,cach,cache,636,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:660,performance,perform,performing,660,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:675,performance,Load,LoadTree,675,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:698,performance,cach,cache,698,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:754,performance,memor,memory,754,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:250,reliability,doe,does,250,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:717,reliability,restor,restored,717,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:187,usability,memor,memory,187,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:403,usability,memor,memory,403,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:660,usability,perform,performing,660,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/pull/16063:754,usability,memor,memory,754,"[tree] TChain: disable creating TTreeCache when querying branch list; While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead. Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored. This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16063
https://github.com/root-project/root/issues/16064:1298,availability,Operat,Operating,1298,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:240,deployability,upgrad,upgrade,240,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:759,deployability,version,version-,759,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:799,deployability,modul,module,799,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:974,deployability,instal,install,974,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1231,deployability,version,version,1231,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1254,deployability,Instal,Installation,1254,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1275,deployability,build,build,1275,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1427,deployability,version,version-,1427,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:759,integrability,version,version-,759,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1231,integrability,version,version,1231,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1427,integrability,version,version-,1427,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:240,modifiability,upgrad,upgrade,240,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:759,modifiability,version,version-,759,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:799,modifiability,modul,module,799,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1231,modifiability,version,version,1231,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1427,modifiability,version,version-,1427,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:586,reliability,doe,doesn,586,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:868,reliability,doe,doesn,868,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:799,safety,modul,module,799,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:177,testability,regress,regression,177,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:637,testability,Trace,Traceback,637,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:775,testability,simpl,simple,775,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:1343,testability,context,context,1343,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:699,usability,support,support,699,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/issues/16064:775,usability,simpl,simple,775,"[PyROOT] Type `UInt64_t`/`unsigned long long` can cause problems in template resolutions; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There was a regression in using unsigned longs in ROOT 6.32 with the cppyy upgrade. I open the issue here because it can't be reproduced with upstream cppyy, so this is definitely a PyROOT issue. ### Reproducer. ```python. import cppyy. import ROOT. cppyy.gbl.std.pair[""int"", ""unsigned long long""]() # works! cppyy.gbl.std.function[""void(int, int)""]() # works! cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ```. Gives you this output:. ```txt. Traceback (most recent call last):. File ""/home/rembserj/root-support/forum/problems-with-onpartialresultslot-in-new-root-version-6-32-02/simple.py"", line 6, in <module>. cppyy.gbl.std.function[""void(int, unsigned long long)""]() # doesn't work! ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/home/rembserj/spaces/master/install/lib/root/cppyy/_cpython_cppyy.py"", line 88, in __getitem__. pyclass = _backend.MakeCppTemplateClass(*newargs). ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. TypeError: 'std::function<void(int,unsigned long long)>' is not a known C++ class. ```. ### ROOT version. `master`. ### Installation method. build from source. ### Operating system. Arch Linux. ### Additional context. https://root-forum.cern.ch/t/problems-with-onpartialresultslot-in-new-root-version-6-32-02/60257",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16064
https://github.com/root-project/root/pull/16065:371,deployability,build,build-from-source-with-option-dbuiltin-cfitsio,371,"[CMake] Always use `lib` as library directory in builtin CFITSIO prefix; Like this, we make sure the static library is where we expect it to be: `CFITSIO-prefix/lib/libcfitsio.a`, and not for example in the `lib64` directory. This is already done for other builtins, like `xrootd` and `zeromq`. Inspired by this forum post:. https://root-forum.cern.ch/t/6-32-02-will-not-build-from-source-with-option-dbuiltin-cfitsio/60270",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16065
https://github.com/root-project/root/pull/16066:26,deployability,version,version,26,[skip-ci][v6-32] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16066
https://github.com/root-project/root/pull/16066:137,deployability,fail,failed-to-materialize-symbols,137,[skip-ci][v6-32] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16066
https://github.com/root-project/root/pull/16066:26,integrability,version,version,26,[skip-ci][v6-32] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16066
https://github.com/root-project/root/pull/16066:26,modifiability,version,version,26,[skip-ci][v6-32] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16066
https://github.com/root-project/root/pull/16066:137,reliability,fail,failed-to-materialize-symbols,137,[skip-ci][v6-32] Fix MSVC version for exporting symbols; Fix an issue reported on the forum: https://root-forum.cern.ch/t/windows-stream-failed-to-materialize-symbols.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16066
https://github.com/root-project/root/pull/16067:172,deployability,log,logging,172,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:184,interoperability,format,format,184,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:9,performance,memor,memory,9,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:49,performance,memor,memory,49,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:25,safety,test,testRooCrystalBall,25,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:97,safety,test,test,97,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:172,safety,log,logging,172,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:172,security,log,logging,172,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:25,testability,test,testRooCrystalBall,25,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:97,testability,test,test,97,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:172,testability,log,logging,172,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:9,usability,memor,memory,9,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16067:49,usability,memor,memory,49,"[RF] Fix memory leaks in testRooCrystalBall; The memory leaks were introduced on purpose in that test, but they are probably not necessary anymore. Also, suppress unneeded logging and format code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16067
https://github.com/root-project/root/pull/16068:32,energy efficiency,draw,draw,32,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16068:53,energy efficiency,draw,draw,53,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16068:65,energy efficiency,draw,draw,65,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16068:15,usability,support,support,15,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16068:206,usability,support,supported,206,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16068:332,usability,user,user-attachments,332,"[web graphics] support of haxis draw option; ""haxis"" draw option draw histogram axis as for hbar - with swapped X/Y. . Swapped axis must be specially handled by painters. Therefore only limited options are supported for TH1. These are: B - bar, P - marker, L - line, TEXT. Provide demo macro ""haxis.C"". ![Canvas](https://github.com/user-attachments/assets/213e42a4-4bd9-4444-bac0-9eab19dc748a).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16068
https://github.com/root-project/root/pull/16069:238,deployability,contain,contains,238,"[ntuple] Remove incorrect std::vector::reserve; This was added in commit d950e9903a (""[ntuple] use RClusterPool in RNTupleMerger"") with no explicit mention, and I believe it's wrong because every column yields exactly one page group that contains all pages for that column.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16069
https://github.com/root-project/root/issues/16070:30,availability,error,error,30,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:242,availability,error,errors,242,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:422,availability,error,error,422,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:527,availability,error,errors,527,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:619,availability,error,error,619,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:707,availability,error,error,707,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:800,availability,error,error,800,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1354,availability,error,error,1354,"tErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2529,availability,error,errors,2529,"e `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2729,availability,error,error,2729,"etBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2896,availability,down,down,2896,"in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2901,availability,error,errors,2901," two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2925,availability,error,error,2925," ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3996,availability,error,error,3996,"ints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4210,availability,down,down,4210,"1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4215,availability,error,errors,4215,"v = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4239,availability,error,error,4239,"). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5424,availability,Operat,Operating,5424,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:205,deployability,observ,observed,205,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4082,deployability,log,log,4082,"('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4086,deployability,scale,scale,4086," [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4688,deployability,observ,observe,4688,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5282,deployability,version,version,5282,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5303,deployability,version,versions,5303,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5380,deployability,Instal,Installation,5380,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5401,deployability,Build,Build,5401,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3311,energy efficiency,Draw,Draw,3311,"ry hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3430,energy efficiency,draw,drawframe,3430,"I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3446,energy efficiency,Draw,DrawFrame,3446,". Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3745,energy efficiency,Draw,Draw,3745,"be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4086,energy efficiency,scale,scale,4086," [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4596,energy efficiency,Draw,Draw,4596,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4900,energy efficiency,draw,drawframe,4900,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4916,energy efficiency,Draw,DrawFrame,4916,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5213,energy efficiency,Draw,Draw,5213,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5282,integrability,version,version,5282,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5303,integrability,version,versions,5303,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4086,modifiability,scal,scale,4086," [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5282,modifiability,version,version,5282,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5303,modifiability,version,versions,5303,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:30,performance,error,error,30,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:242,performance,error,errors,242,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:422,performance,error,error,422,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:527,performance,error,errors,527,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:619,performance,error,error,619,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:707,performance,error,error,707,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:800,performance,error,error,800,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1354,performance,error,error,1354,"tErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2529,performance,error,errors,2529,"e `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2729,performance,error,error,2729,"etBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2901,performance,error,errors,2901," two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2925,performance,error,error,2925," ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3996,performance,error,error,3996,"ints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4086,performance,scale,scale,4086," [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4215,performance,error,errors,4215,"v = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4239,performance,error,error,4239,"). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:30,safety,error,error,30,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:242,safety,error,errors,242,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:422,safety,error,error,422,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:527,safety,error,errors,527,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:619,safety,error,error,619,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:707,safety,error,error,707,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:800,safety,error,error,800,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1354,safety,error,error,1354,"tErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2529,safety,error,errors,2529,"e `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2729,safety,error,error,2729,"etBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2901,safety,error,errors,2901," two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2925,safety,error,error,2925," ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3996,safety,error,error,3996,"ints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4082,safety,log,log,4082,"('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4215,safety,error,errors,4215,"v = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4239,safety,error,error,4239,"). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5331,safety,test,tested,5331,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:432,security,control,controling,432,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2316,security,hack,hacky,2316,"0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4082,security,log,log,4082,"('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:205,testability,observ,observed,205,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:432,testability,control,controling,432,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4082,testability,log,log,4082,"('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4688,testability,observ,observe,4688,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5331,testability,test,tested,5331,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:5471,testability,context,context,5471,"Frame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v2.pdf""). ```. ### ROOT version. I think all versions are affected but I tested it with ROOT `6.30/02` and `6.30/00`. ### Installation method. Build from source. ### Operating system. Linux, MacOs. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:30,usability,error,error,30,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:242,usability,error,errors,242,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:422,usability,error,error,422,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:527,usability,error,errors,527,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:619,usability,error,error,619,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:707,usability,error,error,707,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:800,usability,error,error,800,"Graph: non correct display of error bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1024,usability,user,user-attachments,1024,"ror bars when exceeding y-range; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Dear ROOT developpers, . I would like to report some bugs that I observed when displaying some TGraph errors (please find the reproducers code provided below). Here I used `TGraphAsymmErrors`. . * The first issue `testErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1354,usability,error,error,1354,"tErrorGraph_v1` is I am creating a frame to display a graph with error but controling the y-range for the display (see screen shot below). . * The points have increasing errors bars and some should go beyond that y-range (starting from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1579,usability,user,user-attachments,1579," from `x=4`) however the end of error bars are displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not. . It would be nice to not have those vertical lines if the error bars exceed the y-range used for the plot. . * For the rightest most point (`x=9`) I have put the data point on purpose to be below the ymin value and you can see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:1957,usability,user,user-attachments,1957,"see the weird display too. . . ![image](https://github.com/user-attachments/assets/704af159-998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2049,usability,user,user-attachments,2049,"998f-49c7-b665-811a1401f769). * The second issue `testErrorGraph_v2` is related to a very weird interplay between `TPad::SetBottomMargin()` function and using `TPad::SetLogy()` function . . * If one sets the bottom margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2266,usability,help,helpful,2266,"m margin **to be `0`** with `pad.SetBottomMargin(0)` here is the plot . * Again the error bars starting from `x>=3` should go beyond `ymin=0.1`. . * The last point which I set to be negative is displayed on the x-axis while it should indeed not be displayed since `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2529,usability,error,errors,2529,"e `ymin= 0.1`. . . ![image](https://github.com/user-attachments/assets/703969d0-2c8b-455e-beb4-afe1f4205c42). . * If one sets the bottom margin of the pad to be **different from `0`** with e.g. `pad.SetBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2729,usability,error,error,2729,"etBottomMargin(0.1)`, notice the last point at `x=9` disappear with a white space. If I increase the marker size you can see that this white space increases as shown in the two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2901,usability,error,errors,2901," two screen shots below. ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:2925,usability,error,error,2925," ![image](https://github.com/user-attachments/assets/029dfcd3-01f5-4370-b786-e4212eada025) . ![image](https://github.com/user-attachments/assets/9b124faf-2a50-4f24-a525-5f80a5a74797). **--> I believe the best would be to not have that point or white space displayed in any case**. . Many thanks in advance for the fix that would be super helpful, . In the meantime I have found some very hacky workaround (not very useful here I just played with several ways of displaying the information to arrive to what I want),. Best, . Romain . ### Reproducer. Below are the two codes that allow reprocuding the errors . **testErrorGraph_v1**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. ymin = 0. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndError",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:3996,usability,error,error,3996,"ints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point be out of range w.r.t to the zoom . data_y[-1] = ymin-1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4215,usability,error,errors,4215,"v = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/issues/16070:4239,usability,error,error,4239,"). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(1.5). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(""testErrorGraph_v1.pdf""). ```. **testErrorGraph_v2**. ```Python. import ROOT . from array import array. ROOT.gROOT.SetBatch(True). ROOT.gStyle.SetEndErrorSize(10). nPoints = 10. # Set ymin and ymax on purpose so that some error bars should be go beyon this range . ymax = 4. # Set ymin > 0 since here we use log scale . ymin = 0.1. # Data x, y. data_x = array('d', list(range(nPoints))). data_y = array('d', [2.]*nPoints). # x and y up/down errors . # Increasing y-error for each points. unc_y_lo = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_y_hi = array('d', [0.5*(i+1) for i in range(nPoints)]). unc_x_lo = array('d', [0]*nPoints). unc_x_hi = array('d', [0]*nPoints). # Make last point negative . data_y[-1] = -1. canv = ROOT.TCanvas(""c"",""c""). canv.cd(). pad = ROOT.TPad(""pad"", ""pad"", 0.1, 0.1, 0.9, 0.9). pad.Draw(). pad.cd(). # Make the plot with bottom margin = 0 and something different than 0 . # observe the difference for the last point . pad.SetBottomMargin(0.). #pad.SetBottomMargin(0.1). pad.SetLogy(). xminFrame = min(data_x) - 0.5 . xmaxFrame = max(data_x) + 0.5 . yminFrame = ymin. ymaxFrame = ymax . drawframe = pad.DrawFrame(xminFrame, yminFrame, xmaxFrame, ymaxFrame). gr = ROOT.TGraphAsymmErrors(nPoints, data_x, data_y, unc_x_lo, unc_x_hi, unc_y_lo, unc_y_hi). gr.SetMarkerColor(2). gr.SetLineColor(ROOT.kRed). gr.SetMarkerStyle(20). gr.SetMarkerColor(ROOT.kBlue). gr.SetMarkerSize(3). gr.SetLineWidth(3). gr.Draw(""same PE0""). canv.Print(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16070
https://github.com/root-project/root/pull/16071:109,deployability,patch,patch,109,[v632] Backport of recent fixes and improvements; Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16071:115,deployability,releas,release,115,[v632] Backport of recent fixes and improvements; Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16071:109,safety,patch,patch,109,[v632] Backport of recent fixes and improvements; Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16071:109,security,patch,patch,109,[v632] Backport of recent fixes and improvements; Backport of recent fixes and improvements for the upcoming patch release.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16071
https://github.com/root-project/root/pull/16072:18,availability,error,error,18,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:63,availability,error,error,63,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:189,availability,error,error,189,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1194,availability,error,error,1194,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:290,energy efficiency,core,core,290,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:540,energy efficiency,core,core,540,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:766,energy efficiency,core,core,766,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:977,energy efficiency,core,core,977,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1343,energy efficiency,core,core,1343,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:18,performance,error,error,18,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:63,performance,error,error,63,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:189,performance,error,error,189,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1194,performance,error,error,1194,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:18,safety,error,error,18,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:63,safety,error,error,63,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:189,safety,error,error,189,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1194,safety,error,error,1194,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:18,usability,error,error,18,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:63,usability,error,error,63,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:189,usability,error,error,189,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1194,usability,error,error,1194,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16072:1269,usability,behavi,behavior,1269,"[gui] fix compile error in RWebWindowsManager.cxx; Fix compile error (happening with `DEV=on` due to missing include):. ```. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:215:13: error: no matching constructor for initialization of 'TIter'. TIter next(arr);. ^ ~~~. /home/jp/root/core/cont/inc/TCollection.h:244:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TCollection *' for 1st argument. TIter(const TCollection *col, Bool_t dir = kIterForward). ^. /home/jp/root/core/cont/inc/TCollection.h:246:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'TIterator *' for 1st argument. TIter(TIterator *it) : fIterator(it) { }. ^. /home/jp/root/core/cont/inc/TCollection.h:247:4: note: candidate constructor not viable: cannot convert argument of incomplete type 'TObjArray *' to 'const TIter' for 1st argument. TIter(const TIter &iter);. ^. /home/jp/root/core/cont/inc/TCollection.h:241:4: note: candidate constructor not viable: requires 0 arguments, but 1 was provided. TIter() : fIterator(nullptr) { }. ^. /home/jp/root/gui/webdisplay/src/RWebWindowsManager.cxx:229:7: error: deleting pointer to incomplete type 'TObjArray' may cause undefined behavior [-Werror,-Wdelete-incomplete]. delete arr;. ^ ~~~. /home/jp/root/core/base/inc/TObject.h:32:7: note: forward declaration of 'TObjArray'. class TObjArray;. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16072
https://github.com/root-project/root/pull/16073:353,deployability,updat,updated,353,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:70,performance,parallel,parallel,70,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:165,performance,parallel,parallelizable,165,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:210,performance,parallel,parallel,210,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:190,safety,avoid,avoids,190,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:323,safety,test,tested,323,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:353,safety,updat,updated,353,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:353,security,updat,updated,353,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16073:323,testability,test,tested,323,"Ntuple merger fixes; # This Pull request:. Moves some code out of the parallel tasks in RNTupleMerger (particularly, `ThrowOnError` which is not necessarily happily parallelizable). It also avoids spawning the parallel tasks if not needed, i.e. if we don't need to change the compression of the pages. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16073
https://github.com/root-project/root/pull/16074:74,usability,document,documentation,74,[skip-ci][tree] Mark TEntryList and TEventList legacy; and reorganise the documentation of TEntryList. Fixes #14544.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16074
https://github.com/root-project/root/pull/16075:0,deployability,Updat,Update,0,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:232,deployability,modul,module,232,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:384,deployability,updat,updated,384,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:285,energy efficiency,adapt,adapts,285,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:16,integrability,interfac,interface,16,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:285,integrability,adapt,adapts,285,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:301,integrability,interfac,interface,301,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:16,interoperability,interfac,interface,16,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:285,interoperability,adapt,adapts,285,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:301,interoperability,interfac,interface,301,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:16,modifiability,interfac,interface,16,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:232,modifiability,modul,module,232,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:285,modifiability,adapt,adapts,285,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:301,modifiability,interfac,interface,301,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:0,safety,Updat,Update,0,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:232,safety,modul,module,232,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:354,safety,test,tested,354,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:384,safety,updat,updated,384,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:0,security,Updat,Update,0,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:384,security,updat,updated,384,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16075:354,testability,test,tested,354,"Update ROOT's R interface for Rcpp 1.0.13; # This Pull request:. ## Changes or fixes:. From the Rcpp changelog:. * inst/include/Rcpp/: Added variadic templates to be used instead of. the generated code in `Rcpp/generated` and `Rcpp/module` when. compiling with C++11 or later. This PR adapts ROOT's R interface code to this change,. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16075
https://github.com/root-project/root/pull/16076:18,deployability,build,builds,18,[ci] Remove mac12 builds for the 6.28 branch; And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16076:61,deployability,configurat,configuration,61,[ci] Remove mac12 builds for the 6.28 branch; And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16076:61,integrability,configur,configuration,61,[ci] Remove mac12 builds for the 6.28 branch; And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16076:61,modifiability,configur,configuration,61,[ci] Remove mac12 builds for the 6.28 branch; And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16076:61,security,configur,configuration,61,[ci] Remove mac12 builds for the 6.28 branch; And clean some configuration remnants,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16076
https://github.com/root-project/root/pull/16078:130,deployability,updat,updated,130,Random change to trigger roottest; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16078:100,safety,test,tested,100,Random change to trigger roottest; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16078:130,safety,updat,updated,130,Random change to trigger roottest; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16078:130,security,updat,updated,130,Random change to trigger roottest; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16078:100,testability,test,tested,100,Random change to trigger roottest; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16078
https://github.com/root-project/root/pull/16079:102,deployability,releas,release,102,[v632] Backport recent fixes and improvements; Backports of recent fixes and improvements to the 6.32 release series.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16079
https://github.com/root-project/root/pull/16080:860,availability,error,error,860,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:560,deployability,log,logic,560,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:978,deployability,updat,updated,978,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:9,energy efficiency,model,model,9,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:114,energy efficiency,model,model,114,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:194,energy efficiency,model,model-extend,194,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:325,energy efficiency,model,models,325,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:487,integrability,Filter,Filter,487,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:714,integrability,messag,messages,714,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:714,interoperability,messag,messages,714,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:743,interoperability,mismatch,mismatch,743,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:15,modifiability,extens,extension,15,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:65,modifiability,refact,refactors,65,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:120,modifiability,extens,extension,120,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:200,modifiability,exten,extend,200,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:65,performance,refactor,refactors,65,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:860,performance,error,error,860,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:256,safety,input,input,256,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:308,safety,compl,complaining,308,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:412,safety,input,inputs,412,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:560,safety,log,logic,560,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:618,safety,input,input,618,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:846,safety,except,exceptions,846,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:860,safety,error,error,860,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:948,safety,test,tested,948,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:978,safety,updat,updated,978,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:9,security,model,model,9,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:114,security,model,model,114,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:194,security,model,model-extend,194,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:308,security,compl,complaining,308,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:325,security,model,models,325,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:560,security,log,logic,560,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:910,security,expos,exposed,910,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:978,security,updat,updated,978,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:560,testability,log,logic,560,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:948,testability,test,tested,948,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:101,usability,support,support,101,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:256,usability,input,input,256,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:412,usability,input,inputs,412,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:470,usability,behavi,behavior,470,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:618,usability,input,input,618,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:730,usability,user,user,730,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16080:860,usability,error,error,860,"Add late model extension to RNTupleMerger; # This Pull request:. refactors RNTupleMerger to properly support late model extension. The ""Union"" merging mode is added, allowing the merger to late-model-extend the destination to include all the fields of the input ntuples (instead of ignoring unknown fields / complaining when models don't match). Likewise, the ""Strict"" merging mode is added that checks that all inputs have the exact same structure. By default, the old behavior (named ""Filter"") is used. To better compare the RNTuples structures, the merging logic is now more properly considering the fields of each input, rather than just the columns as it was previously. This also allows for more descriptive messages to the user if some mismatch is found. NOTE: the `RNTupleMerger::Merge` function now returns a RResult instead of throwing exceptions on error. ## TODO. - the new merging modes should be exposed to hadd. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16080
https://github.com/root-project/root/pull/16081:154,deployability,updat,updated,154,Graphs Python Tutorials; # This Pull request:. Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally. - [ yes ] updated the docs (if necessary). - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16081:120,safety,test,tested,120,Graphs Python Tutorials; # This Pull request:. Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally. - [ yes ] updated the docs (if necessary). - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16081:154,safety,updat,updated,154,Graphs Python Tutorials; # This Pull request:. Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally. - [ yes ] updated the docs (if necessary). - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16081:154,security,updat,updated,154,Graphs Python Tutorials; # This Pull request:. Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally. - [ yes ] updated the docs (if necessary). - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16081:120,testability,test,tested,120,Graphs Python Tutorials; # This Pull request:. Adds all graphs tutorials into Python Language. ## Checklist:. - [ yes ] tested changes locally. - [ yes ] updated the docs (if necessary). - [ yes ] Fork is up to date with master.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16081
https://github.com/root-project/root/pull/16082:435,deployability,updat,updated,435,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:61,energy efficiency,Current,Currently,61,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:405,safety,test,tested,405,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:435,safety,updat,updated,435,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:435,security,updat,updated,435,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16082:405,testability,test,tested,405,"[hadd] properly change compression when levels are the same; Currently hadd is only checking the compression levels to determine whether fast merging should be used or not. This is wrong, as it will incorrectly skip compression change when a file is changed from e.g. 101 to 201. With this commit, hadd (actually, TFileMerger) will check for equality of compression settings instead. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11245 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16082
https://github.com/root-project/root/pull/16084:34,deployability,manag,management,34,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:94,deployability,manag,management,94,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:34,energy efficiency,manag,management,34,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:94,energy efficiency,manag,management,94,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:27,performance,memor,memory,27,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:87,performance,memor,memory,87,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:34,safety,manag,management,34,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:94,safety,manag,management,94,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:27,usability,memor,memory,27,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16084:87,usability,memor,memory,87,[RF] Fix typos and improve memory management in RooFit; Fix reported typos and improve memory management in RooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16084
https://github.com/root-project/root/pull/16085:10,availability,consist,consistent,10,[RF] More consistent RooPlot constructors; Closes #7782. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16085
https://github.com/root-project/root/pull/16085:10,usability,consist,consistent,10,[RF] More consistent RooPlot constructors; Closes #7782. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16085
https://github.com/root-project/root/pull/16085:43,usability,Close,Closes,43,[RF] More consistent RooPlot constructors; Closes #7782. More detail in the commit descriptions.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16085
https://github.com/root-project/root/pull/16086:0,deployability,Updat,Update,0,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:147,deployability,updat,updated,147,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:201,deployability,instal,installation,201,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:253,deployability,instal,install,253,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:352,deployability,instal,installed,352,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:388,deployability,instal,install,388,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:7,interoperability,bind,bindings,7,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:7,modifiability,bind,bindings,7,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:0,safety,Updat,Update,0,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:117,safety,test,tested,117,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:147,safety,updat,updated,147,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:0,security,Updat,Update,0,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:147,security,updat,updated,147,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:117,testability,test,tested,117,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/pull/16086:397,usability,command,command,397,Update bindings/jupyroot/README.md; . # This Pull request:. ## Changes or fixes:. README fixes. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes kernel installation description to use `jupyter kernelspec install` instead of `cp` because `cp -r` didn't work for me and it is appropriate for kernel to be installed using `jupyter kernelspec install` command. .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16086
https://github.com/root-project/root/issues/16087:1840,deployability,Updat,Update,1840,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:2029,deployability,version,version,2029,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:153,integrability,coupl,couple,153,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:2029,integrability,version,version,2029,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:153,modifiability,coupl,couple,153,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:2029,modifiability,version,version,2029,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:1840,safety,Updat,Update,1840,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:415,security,sign,signature,415,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:1840,security,Updat,Update,1840,"ctions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitive /opt/root_src/*`. ### ROOT version. ```. ROOT v6.32.00. Built for linuxx8664gcc on May 28 2024, 05:02:02. From tags/v6-32-00@v6-32-00. With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0. Binary directory: /opt/root/bin. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:153,testability,coupl,couple,153,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:524,usability,document,documentation,524,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:538,usability,user,users-guide,538,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:655,usability,document,documentation,655,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:669,usability,user,users-guide,669,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:785,usability,document,documentation,785,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/issues/16087:799,usability,user,users-guide,799,"[docs] Potential typo in function name case: DistanceToPrimitive; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. There are a couple of places in ROOT that use a different case for one of the functions derived from TObject. I was wondering if it's a typo, or if it's on purpose to not override it. If it's a typo, maybe a new function could be added with the right name, and keep the old signature as an alias to the correct one. `DistancetoPrimitive` vs `DistanceToPrimitive`. ```. /opt/root_src/documentation/users-guide/WritingGUI.md:2603:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/documentation/users-guide/Graphics.md:265:The second one is `DistanceToPrimitive(px,py)`. This function computes a. /opt/root_src/documentation/users-guide/Graphics.md:527:as `DistanceToPrimitive()` and `ExecuteEvent()`. Its primary use is for. /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:607:Int_t TGeoUnion::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1031:Int_t TGeoSubtraction::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/src/TGeoBoolNode.cxx:1464:Int_t TGeoIntersection::DistanceToPrimitive(Int_t /*px*/, Int_t /*py*/). /opt/root_src/geom/geom/inc/TGeoBoolNode.h:69: virtual Int_t DistanceToPrimitive(Int_t px, Int_t py) = 0;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:113: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:151: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/geom/geom/inc/TGeoBoolNode.h:188: Int_t DistanceToPrimitive(Int_t px, Int_t py) override;. /opt/root_src/gui/ged/doc/index.md:32:`DistanceToPrimitive()` that computes a ‘‘distance'' to an object from. /opt/root_src/hist/doc/v530/index.html:136: <li>Update in the class by implementing <tt>DistanceToPrimitive</tt> and <tt>ExecuteEvent</tt>. This allows the. ```. ### Reproducer. `grep -n -r DistanceToPrimitiv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16087
https://github.com/root-project/root/pull/16090:184,availability,consist,consistent,184,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:353,availability,consist,consistency,353,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:687,availability,replic,replicate,687,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:712,availability,error,error-reporting,712,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:32,deployability,log,logic,32,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:465,deployability,log,logic,465,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:769,deployability,version,version,769,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:965,deployability,updat,updated,965,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:761,energy efficiency,current,current,761,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:615,integrability,messag,message,615,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:769,integrability,version,version,769,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:615,interoperability,messag,message,615,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:47,modifiability,refact,refactors,47,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:769,modifiability,version,version,769,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:47,performance,refactor,refactors,47,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:372,performance,cach,cachesize,372,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:712,performance,error,error-reporting,712,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:668,reliability,doe,doesn,668,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:32,safety,log,logic,32,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:429,safety,except,except,429,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:465,safety,log,logic,465,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:712,safety,error,error-reporting,712,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:855,safety,test,tests,855,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:896,safety,test,tests,896,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:935,safety,test,tested,935,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:965,safety,updat,updated,965,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:32,security,log,logic,32,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:465,security,log,logic,465,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:965,security,updat,updated,965,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:32,testability,log,logic,32,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:160,testability,simpl,simpler,160,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:465,testability,log,logic,465,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:644,testability,simpl,simplification,644,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:855,testability,test,tests,855,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:896,testability,test,tests,896,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:935,testability,test,tested,935,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:160,usability,simpl,simpler,160,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:184,usability,consist,consistent,184,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:353,usability,consist,consistency,353,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:644,usability,simpl,simplification,644,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:712,usability,error,error-reporting,712,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16090:728,usability,behavi,behavior,728,"[hadd] rewrite argument parsing logic; This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:. - code is simpler to follow, more consistent among different flags and extracted from main. - adding new flags is easier. - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic). - allows passing flags after the positional arguments. - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16090
https://github.com/root-project/root/pull/16091:156,safety,test,test,156,[RF] Support weighted filling from RDF to RooFit in RooAbsDataHelper; Support weighted filling from RDF to RooFit in RooAbsDataHelper and also. implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16091:156,testability,test,test,156,[RF] Support weighted filling from RDF to RooFit in RooAbsDataHelper; Support weighted filling from RDF to RooFit in RooAbsDataHelper and also. implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16091:5,usability,Support,Support,5,[RF] Support weighted filling from RDF to RooFit in RooAbsDataHelper; Support weighted filling from RDF to RooFit in RooAbsDataHelper and also. implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16091:70,usability,Support,Support,70,[RF] Support weighted filling from RDF to RooFit in RooAbsDataHelper; Support weighted filling from RDF to RooFit in RooAbsDataHelper and also. implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16091:169,usability,Close,Closes,169,[RF] Support weighted filling from RDF to RooFit in RooAbsDataHelper; Support weighted filling from RDF to RooFit in RooAbsDataHelper and also. implement a test for it. Closes https://github.com/root-project/root/issues/7223.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16091
https://github.com/root-project/root/pull/16092:113,deployability,configurat,configuration,113,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:208,deployability,stack,stack,208,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:113,integrability,configur,configuration,113,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:113,modifiability,configur,configuration,113,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:264,safety,test,test,264,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:113,security,configur,configuration,113,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16092:264,testability,test,test,264,[cmake][windows] Fix MSVC compiler flags; - Use the same flags for `LLVM` than for `ROOT`. - Print out the multi-configuration generator flags. - Fix `root-config.bat` and `compiledata.win32`. - Increase the stack size for `rootcling` and for the `rfield_variant` test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16092
https://github.com/root-project/root/pull/16093:23,availability,error,error,23,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:158,availability,error,error-bars,158,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:205,availability,error,error,205,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:306,availability,error,error,306,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:23,performance,error,error,23,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:158,performance,error,error-bars,158,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:205,performance,error,error,205,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:306,performance,error,error,306,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:23,safety,error,error,23,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:158,safety,error,error-bars,158,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:205,safety,error,error,205,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:306,safety,error,error,306,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:23,usability,error,error,23,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:158,usability,error,error-bars,158,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:205,usability,error,error,205,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16093:306,usability,error,error,306,Non correct display of error bars when exceeding y-range; This PR fixes the 1st issue described here: https://github.com/root-project/root/issues/16070. When error-bars exceed to y range limits the end of error bars are nevertheless displayed on the x-bottom and top axis. So it looks like it is the total error bar while it is indeed not.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16093
https://github.com/root-project/root/pull/16094:23,deployability,artifact,artifacts,23,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:453,deployability,artifact,artifacts,453,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:601,deployability,artifact,artifact,601,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:384,interoperability,distribut,distributed,384,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:45,performance,cach,caches,45,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:201,performance,cach,cache,201,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:499,performance,cach,caches,499,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:619,performance,cach,cache,619,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:739,performance,memor,memory,739,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:976,performance,memor,memory,976,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1085,performance,memor,memory,1085,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1200,performance,memor,memory,1200,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1319,performance,memor,memory,1319,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:237,safety,avoid,avoid,237,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:739,usability,memor,memory,739,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:976,usability,memor,memory,976,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1085,usability,memor,memory,1085,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1200,usability,memor,memory,1200,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16094:1319,usability,memor,memory,1319,"[df] Cleanup execution artifacts from worker caches in Dask; Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:. * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB. * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB. * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB. * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16094
https://github.com/root-project/root/pull/16096:454,deployability,updat,updated,454,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:63,energy efficiency,Current,Currently,63,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:424,safety,test,tested,424,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:454,safety,updat,updated,454,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:454,security,updat,updated,454,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16096:424,testability,test,tested,424,"[ntuple] change RColumnDescriptorIterable to accept a fieldID; Currently RColumnDescriptorIterable's ctor wants a RFieldDescriptor even though it only uses the field's id internally. One of the overloads of GetColumnIterable accepts a fieldId but it is forced to retrieve back the field descriptor before constructing an Iterable object, only for the object itself to extract back the id, wasting work. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16096
https://github.com/root-project/root/pull/16097:135,deployability,updat,updated,135,[skip-ci] fix typo in cling docu; # This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16097:105,safety,test,tested,105,[skip-ci] fix typo in cling docu; # This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16097:135,safety,updat,updated,135,[skip-ci] fix typo in cling docu; # This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16097:135,security,updat,updated,135,[skip-ci] fix typo in cling docu; # This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16097:105,testability,test,tested,105,[skip-ci] fix typo in cling docu; # This Pull request:. ## Changes or fixes:. typo. ## Checklist:. - [ ] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16097
https://github.com/root-project/root/pull/16099:314,availability,toler,tolerance,314,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:472,availability,toler,tolerance,472,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:677,availability,toler,tolerace,677,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:705,availability,avail,available,705,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,deployability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:394,deployability,log,logic,394,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,deployability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:355,energy efficiency,optim,optimization,355,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,integrability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,integrability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,interoperability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,interoperability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,modifiability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,modifiability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:355,performance,optimiz,optimization,355,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,reliability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:314,reliability,toleran,tolerance,314,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:472,reliability,toleran,tolerance,472,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:705,reliability,availab,available,705,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,reliability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:171,safety,compl,complicated,171,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:394,safety,log,logic,394,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:705,safety,avail,available,705,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:770,safety,test,test,770,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,security,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:171,security,compl,complicated,171,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:394,security,log,logic,394,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:705,security,availab,available,705,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,security,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:57,testability,integr,integrating,57,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:394,testability,log,logic,394,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:656,testability,simpl,simply,656,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:745,testability,integr,integration,745,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:765,testability,unit,unit,765,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:770,testability,test,test,770,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:438,usability,close,close,438,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:656,usability,simpl,simply,656,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16099:870,usability,Close,Closes,870,"[RF] Improve implementation of RooCurve::average(); When integrating the discretely-sampled RooCurves, the algorithm. implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if. they are away from the interval limits with an arbitrary tolerance,. which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to. the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code. branches, this commit suggests to simply don't do this tolerace check. and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16099
https://github.com/root-project/root/pull/16100:278,deployability,manag,management,278,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16100:278,energy efficiency,manag,management,278,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16100:271,performance,memor,memory,271,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16100:151,safety,avoid,avoid,151,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16100:278,safety,manag,management,278,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16100:271,usability,memor,memory,271,[RF] Implement RooArgSet::selectCommon() and selectByName(); The difference is only that the return type is casted to the actual. `RooArgSet` type. We avoid a few static casts all over the place like. this. A second commit in this PR applies some general improvements in memory management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16100
https://github.com/root-project/root/pull/16102:533,deployability,contain,contains,533,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:550,integrability,compon,components,550,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:550,interoperability,compon,components,550,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:550,modifiability,compon,components,550,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:154,security,hash,hash-assisted,154,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:184,security,hash,hash,184,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:112,usability,support,supported,112,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16102:581,usability,Close,Closes,581,"[RF] Forbid RooArgList::useHashMapForFind(true); # This Pull request:. Setting `useHashMapForFind(true)` is not supported for RooArgLists. anymore, since hash-assisted finding by name hash can be ambiguous: a. RooArgList is allowed to have different elements with the same name. If one wants to use name-lookups on a RooArgList, one can just convert. it to a RooArgSet, which is cheap anyway (copy of a vector of pointers). Also inside RooFit itself, `useHashMapForFind` is only used for. RooArgSets, most notably the RooArgSet that contains all the components. of a RooWorkspace. Closes https://github.com/root-project/root/pull/9425.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16102
https://github.com/root-project/root/pull/16104:126,energy efficiency,draw,draw,126,"[ntuple] remove tutorial ntpl003_lhcbOpenData.C; With the importer in place, this tutorial lost its meaning. Moreover, it may draw users in the wrong direction and encourage them to manually convert data. See also #13997",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16104
https://github.com/root-project/root/pull/16104:131,usability,user,users,131,"[ntuple] remove tutorial ntpl003_lhcbOpenData.C; With the importer in place, this tutorial lost its meaning. Moreover, it may draw users in the wrong direction and encourage them to manually convert data. See also #13997",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16104
https://github.com/root-project/root/pull/16105:198,deployability,updat,updated,198,[ntuple] remove CollectColumnIds from ColumnIterable; It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16105:168,safety,test,tested,168,[ntuple] remove CollectColumnIds from ColumnIterable; It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16105:198,safety,updat,updated,198,[ntuple] remove CollectColumnIds from ColumnIterable; It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16105:198,security,updat,updated,198,[ntuple] remove CollectColumnIds from ColumnIterable; It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16105:168,testability,test,tested,168,[ntuple] remove CollectColumnIds from ColumnIterable; It's not needed anymore since we can now just take the column ids from the field descriptor. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16105
https://github.com/root-project/root/pull/16106:28,energy efficiency,model,model,28,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:44,energy efficiency,estimat,estimation,44,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:93,energy efficiency,model,model,93,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:111,energy efficiency,alloc,allocates,111,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:21,integrability,buffer,buffer,21,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:137,integrability,buffer,buffers,137,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:37,performance,memor,memory,37,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:28,security,model,model,28,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:93,security,model,model,93,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16106:37,usability,memor,memory,37,"[ntuple] Account for buffer model in memory estimation; `RPageSinkBuf` internally clones the model, which also allocates the column page buffers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16106
https://github.com/root-project/root/pull/16107:133,deployability,updat,updated,133,"[skip-ci] correct a few website links in doxygen; Since we re-organized a few things on the website, the links in doxygen need to be updated accordingly. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16107
https://github.com/root-project/root/pull/16107:133,safety,updat,updated,133,"[skip-ci] correct a few website links in doxygen; Since we re-organized a few things on the website, the links in doxygen need to be updated accordingly. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16107
https://github.com/root-project/root/pull/16107:133,security,updat,updated,133,"[skip-ci] correct a few website links in doxygen; Since we re-organized a few things on the website, the links in doxygen need to be updated accordingly. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16107
https://github.com/root-project/root/pull/16108:217,integrability,pub,publishing,217,"[v632][RF] Backport recent fixes and improvments to 6.32; Backport recent fixes and improvments to 6.32. Quite big changes, but they only affect experimental code branches in a backwards compatible way, necessary for publishing the Higgs discovery likelihood from ATLAS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16108
https://github.com/root-project/root/pull/16108:238,integrability,discover,discovery,238,"[v632][RF] Backport recent fixes and improvments to 6.32; Backport recent fixes and improvments to 6.32. Quite big changes, but they only affect experimental code branches in a backwards compatible way, necessary for publishing the Higgs discovery likelihood from ATLAS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16108
https://github.com/root-project/root/pull/16108:187,interoperability,compatib,compatible,187,"[v632][RF] Backport recent fixes and improvments to 6.32; Backport recent fixes and improvments to 6.32. Quite big changes, but they only affect experimental code branches in a backwards compatible way, necessary for publishing the Higgs discovery likelihood from ATLAS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16108
https://github.com/root-project/root/pull/16108:238,interoperability,discover,discovery,238,"[v632][RF] Backport recent fixes and improvments to 6.32; Backport recent fixes and improvments to 6.32. Quite big changes, but they only affect experimental code branches in a backwards compatible way, necessary for publishing the Higgs discovery likelihood from ATLAS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16108
https://github.com/root-project/root/pull/16108:238,usability,discov,discovery,238,"[v632][RF] Backport recent fixes and improvments to 6.32; Backport recent fixes and improvments to 6.32. Quite big changes, but they only affect experimental code branches in a backwards compatible way, necessary for publishing the Higgs discovery likelihood from ATLAS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16108
https://github.com/root-project/root/pull/16109:38,interoperability,bind,binding,38,[RF][HS3] Fix compiler warnings about binding a temporary value; Follow-up on yesterdays changes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16109
https://github.com/root-project/root/pull/16109:38,modifiability,bind,binding,38,[RF][HS3] Fix compiler warnings about binding a temporary value; Follow-up on yesterdays changes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16109
https://github.com/root-project/root/pull/16110:44,interoperability,bind,binding,44,[v632][RF][HS3] Fix compiler warnings about binding a temporary value; Backport of #16109.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16110
https://github.com/root-project/root/pull/16110:44,modifiability,bind,binding,44,[v632][RF][HS3] Fix compiler warnings about binding a temporary value; Backport of #16109.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16110
https://github.com/root-project/root/pull/16111:19,modifiability,exten,extending,19,[ntuple] Allow for extending column representations; Allows for extending not only entire fields and their columns but also only columns for existing fields.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16111
https://github.com/root-project/root/pull/16111:64,modifiability,exten,extending,64,[ntuple] Allow for extending column representations; Allows for extending not only entire fields and their columns but also only columns for existing fields.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16111
https://github.com/root-project/root/pull/16112:19,safety,test,test,19,[ci] DO NOT MERGE: test drive roottest PR; See https://github.com/root-project/roottest/pull/1151.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16112
https://github.com/root-project/root/pull/16112:19,testability,test,test,19,[ci] DO NOT MERGE: test drive roottest PR; See https://github.com/root-project/roottest/pull/1151.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16112
https://github.com/root-project/root/pull/16113:230,deployability,version,version,230,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:425,deployability,updat,updated,425,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:81,energy efficiency,Current,Currently,81,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:248,energy efficiency,reduc,reduce,248,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:230,integrability,version,version,230,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:230,modifiability,version,version,230,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:395,safety,test,tested,395,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:425,safety,updat,updated,425,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:425,security,updat,updated,425,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16113:395,testability,test,tested,395,"[ntuple][ATLAS experiment] Fix compressed size returned by RNTupleIns…; …pector. Currently, irrelevant value is returned if compressed size exceeds the range of int, since std::accumulate is initialized with plain 0. The proposed version uses std::reduce where (implicit) zero-initialization is done with the iterator value type. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #16124.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16113
https://github.com/root-project/root/pull/16114:70,interoperability,platform,platform,70,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:37,reliability,diagno,diagnostic,37,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:25,safety,Test,Test,25,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:54,safety,test,tests,54,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:25,testability,Test,Test,25,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:37,testability,diagno,diagnostic,37,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16114:54,testability,test,tests,54,"[DO NOT MERGE][graphics] Test better diagnostic, json tests and Linux platform; See https://github.com/root-project/roottest/pull/1152.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16114
https://github.com/root-project/root/pull/16116:258,deployability,log,logic,258,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:153,performance,memor,memory,153,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:286,performance,memor,memory,286,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:258,safety,log,logic,258,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:258,security,log,logic,258,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:258,testability,log,logic,258,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:153,usability,memor,memory,153,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:199,usability,help,helper,199,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16116:286,usability,memor,memory,286,"[ntuple] Streamline RField<>::GenerateColumns(); For all fields but the nullable field, all the column representations of a given field have the same in-memory type. This is used to create a central helper in `RFieldBase` that implements the column creation logic, given the list of in-memory types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16116
https://github.com/root-project/root/pull/16117:17,performance,cach,caches,17,[6.32] Clean RDF caches of Dask workers; Backport of #16094,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16117
https://github.com/root-project/root/pull/16118:113,deployability,Updat,Updates,113,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:395,deployability,updat,updated,395,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:283,performance,time,time,283,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:113,safety,Updat,Updates,113,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:365,safety,test,tested,365,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:395,safety,updat,updated,395,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:113,security,Updat,Updates,113,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:395,security,updat,updated,395,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/pull/16118:365,testability,test,tested,365,[RF] Add an option to disable per-region WS creation in HistFactory; # This Pull request:. ## Changes or fixes:. Updates the HistoToWorkspaceFactoryFast code to add an option to disable the per-region WS production. This might be relevant in cases where the WS creation takes a long time as the per-region WS might not be needed in many cases. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16118
https://github.com/root-project/root/issues/16119:201,availability,error,errors,201,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:275,availability,Error,Error,275,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:868,availability,Operat,Operating,868,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:243,deployability,log,log,243,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:300,deployability,Build,Build,300,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:811,deployability,version,version,811,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:833,deployability,Instal,Installation,833,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:325,integrability,Abstract,AbstractRef,325,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:811,integrability,version,version,811,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:325,modifiability,Abstract,AbstractRef,325,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:811,modifiability,version,version,811,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:201,performance,error,errors,201,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:275,performance,Error,Error,275,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:707,performance,memor,memory,707,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:201,safety,error,errors,201,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:243,safety,log,log,243,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:275,safety,Error,Error,275,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:243,security,log,log,243,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:243,testability,log,log,243,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:783,testability,simpl,simple,783,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:908,testability,context,context,908,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:201,usability,error,errors,201,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:275,usability,Error,Error,275,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:687,usability,indicat,indicate,687,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:707,usability,memor,memory,707,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/issues/16119:783,usability,simpl,simple,783,"Handling of std::conditional by Cling in ROOT 6.32.02.; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. When running with 6.32.02 the ALICE reconstruction we were plagued by errors like the following:. ./itstpcMatch.log[16548:itstpc-track-writer]: Error in <TStreamerInfo::Build>: o2::dataformats::AbstractRef<25,5,2>, unknown type: typename std::conditional<(32> mRef. which were not there when using 6.30.0. We have since been able to workaround this by doing:. https://github.com/AliceO2Group/AliceO2/pull/13310/files. however I was wondering if this is not some more serious issue. In particular I am puzzled by the ""(32"" template argument, which seems to indicate some weird memory overwrite / macro expansion of NBIT. ### Reproducer. I do not have a simple reproducer. ### ROOT version. 6.32.02. ### Installation method. aliBuild. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16119
https://github.com/root-project/root/pull/16120:91,integrability,configur,configurable,91,[ntuple] Remove static GetBitsOnStorage(); In preparation of anticipated column types with configurable bit width. Removes the assumption in the code that the column bit width is determined by the column type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16120
https://github.com/root-project/root/pull/16120:91,modifiability,configur,configurable,91,[ntuple] Remove static GetBitsOnStorage(); In preparation of anticipated column types with configurable bit width. Removes the assumption in the code that the column bit width is determined by the column type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16120
https://github.com/root-project/root/pull/16120:91,security,configur,configurable,91,[ntuple] Remove static GetBitsOnStorage(); In preparation of anticipated column types with configurable bit width. Removes the assumption in the code that the column bit width is determined by the column type.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16120
https://github.com/root-project/root/issues/16121:2713,availability,Operat,Operating,2713,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2551,deployability,version,version,2551,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2679,deployability,Instal,Installation,2679,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:1582,energy efficiency,alloc,allocator,1582,"lang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:1670,energy efficiency,alloc,allocator,1670,"rt/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:1876,energy efficiency,alloc,allocator,1876,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2082,energy efficiency,alloc,allocator,2082,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2551,integrability,version,version,2551,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2551,modifiability,version,version,2551,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:10,performance,memor,memory,10,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2291,performance,time,time,2291,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:891,security,Ident,IdentifierInfo,891,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:227,testability,simpl,simple,227,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2753,testability,context,context,2753,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:10,usability,memor,memory,10,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:227,usability,simpl,simple,227,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:292,usability,user,user-attachments,292,"Potential memory leak in clang triggered by `findScope`; ### Check duplicate issues. - [x] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330, we just simple executable:. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz), we get definitively lost report by valgrind:. ```. ==44592== at 0x483A809: malloc (vg_replace_malloc.c:309). ==44592== by 0x898CD15: clang::Parser::AnnotateTemplateIdToken(clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::CXXScopeSpec&, clang::SourceLocation, clang::UnqualifiedId&, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x8921B63: clang::Parser::ParseOptionalCXXScopeSpecifier(clang::CXXScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/issues/16121:2401,usability,user,user-attachments,2401,"XScopeSpec&, clang::OpaquePtr<clang::QualType>, bool, bool, bool*, bool, clang::IdentifierInfo**, bool, bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x899A53C: clang::Parser::TryAnnotateCXXScopeToken(bool) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x80E5246: cling::LookupHelper::findScope(llvm::StringRef, cling::LookupHelper::DiagSetting, clang::Type const**, bool) const (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801074B: TCling::GetClassSharedLibs(char const*) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x801507A: TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (in /export/home/jb242989/root_v6.32.02/lib/libCling.so.6.32.02). ==44592== by 0x4AB8C52: TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) (in /export/home/jb242989/root_v6.32.02/lib/libCore.so.6.32.02). ==44592== by 0x4AB98C0: TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, ... ```. Are those a real leak (they accumulate and could have been deleted), hoarding (they accumulate, are in use and can not be delete until the end) or one time (they are just not cleaned-up at the end?). ### Reproducer. [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16393458/CreateTreeTestv2.tar.gz). ```. make. valgrind --suppression=$ROOTSYS/etc/valgrind-root.supp createTree. ```. ### ROOT version. Moving from 6.26/06 to 6.28/04 we’ve still a very large increase of mem leaks and it is still present in v6.32.02. ### Installation method. unknown. ### Operating system. Linux. ### Additional context. https://github.com/root-project/root/issues/13130",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16121
https://github.com/root-project/root/pull/16122:208,deployability,Updat,Update,208,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:287,deployability,modul,modules,287,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:337,deployability,Releas,Release,337,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:127,energy efficiency,current,current,127,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:287,modifiability,modul,modules,287,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:307,performance,Memor,Memorialise,307,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:266,reliability,doe,does,266,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:208,safety,Updat,Update,208,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:287,safety,modul,modules,287,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:208,security,Updat,Update,208,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:261,usability,tool,tool,261,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:275,usability,support,support,275,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/pull/16122:307,usability,Memor,Memorialise,307,"[dictgen] Introduce --print-rootcling-invocation for genreflex; to easily get the rootcling invocation that corresponds to the current genreflex invocation, to ease the migration from genrelfex to rootcling. Update the genreflex usage as well, stating that the tool does not support C++ modules generation. Memorialise the change to the Release Notes, too. Fixes #13481",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16122
https://github.com/root-project/root/issues/16123:8341,availability,Operat,Operating,8341,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:25,deployability,depend,depends,25,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:350,deployability,depend,depends,350,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2817,deployability,depend,depends,2817,"(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5414,deployability,depend,depends,5414,"by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7469,deployability,Modul,ModuleToFunctionPassAdaptor,7469,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7508,deployability,Modul,Module,7508,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7544,deployability,Modul,Module,7544,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7677,deployability,Modul,Module,7677,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7691,deployability,Modul,ModuleToFunctionPassAdaptor,7691,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7772,deployability,Modul,Module,7772,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7791,deployability,Modul,Module,7791,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7827,deployability,Modul,Module,7827,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7970,deployability,Modul,Module,7970,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8286,deployability,version,version,8286,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8309,deployability,Instal,Installation,8309,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:6473,energy efficiency,Optim,OptimizationRemarkEmitter,6473,"cAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:6534,energy efficiency,Profil,ProfileSummaryInfo,6534," const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:25,integrability,depend,depends,25,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:350,integrability,depend,depends,350,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2817,integrability,depend,depends,2817,"(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5414,integrability,depend,depends,5414,"by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8286,integrability,version,version,8286,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:25,modifiability,depend,depends,25,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:350,modifiability,depend,depends,350,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2817,modifiability,depend,depends,2817,"(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:4113,modifiability,Scal,ScalarExprEmitter,4113,"tionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x997C053: clang::CodeGen::CodeGenFunction::EmitCallExpr(clang::CallExpr const*, clang::CodeGen::ReturnValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99BDDEC: (anonymous namespace)::ScalarExprEmitter::VisitCallExpr(clang::CallExpr const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99BD75B: clang::CodeGen::CodeGenFunction::EmitScalarExpr(clang::Expr const*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5414,modifiability,depend,depends,5414,"by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7469,modifiability,Modul,ModuleToFunctionPassAdaptor,7469,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7508,modifiability,Modul,Module,7508,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7544,modifiability,Modul,Module,7544,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7677,modifiability,Modul,Module,7677,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7691,modifiability,Modul,ModuleToFunctionPassAdaptor,7691,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7772,modifiability,Modul,Module,7772,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7791,modifiability,Modul,Module,7791,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7827,modifiability,Modul,Module,7827,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7970,modifiability,Modul,Module,7970,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8286,modifiability,version,version,8286,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:6473,performance,Optimiz,OptimizationRemarkEmitter,6473,"cAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionP",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:6534,performance,Profil,ProfileSummaryInfo,6534," const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:25,safety,depend,depends,25,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:350,safety,depend,depends,350,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2817,safety,depend,depends,2817,"(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5414,safety,depend,depends,5414,"by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7469,safety,Modul,ModuleToFunctionPassAdaptor,7469,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7508,safety,Modul,Module,7508,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7544,safety,Modul,Module,7544,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7677,safety,Modul,Module,7677,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7691,safety,Modul,ModuleToFunctionPassAdaptor,7691,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7772,safety,Modul,Module,7772,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7791,safety,Modul,Module,7791,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7827,safety,Modul,Module,7827,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:7970,safety,Modul,Module,7970,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:25,testability,depend,depends,25,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:350,testability,depend,depends,350,"conditional jump or move depends on uninitialised value triggered in LLVM's CodeGen; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. As reported in https://root-forum.cern.ch/t/mem-leak-even-with-suppression-file/60330/16?u=pcanal. A valgrind run of the example given there issues:. ```. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x969A787: clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes(clang::GlobalDecl, clang::CodeGen::CGFunctionInfo const&, llvm::Function*, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C7EFD: clang::CodeGen::CodeGenModule::SetFunctionAttributes(clang::GlobalDecl, llvm::Function*, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CA59B: clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction(llvm::StringRef, llvm::Type*, clang::GlobalDecl, bool, bool, bool, llvm::AttributeList, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CBC9C: clang::CodeGen::CodeGenModule::GetAddrOfFunction(clang::GlobalDecl, llvm::Type*, bool, bool, clang::CodeGen::ForDefinition_t) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC257: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:2817,testability,depend,depends,2817,"(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C89EC: clang::CodeGen::CodeGenModule::EmitGlobalDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96C92BA: clang::CodeGen::CodeGenModule::EmitGlobal(clang::GlobalDecl) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D1399: clang::CodeGen::CodeGenModule::EmitTopLevelDecl(clang::Decl*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96D273F: clang::CodeGen::CodeGenModule::EmitDeclContext(clang::DeclContext const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x958FFD0: clang::CodeGeneratorImpl::HandleTopLevelDecl(clang::DeclGroupRef) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xD52162A: llvm::AttrBuilder::addStackAlignmentAttr(llvm::MaybeAlign) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x98FF5A8: clang::CodeGen::CodeGenModule::ConstructAttributeList(llvm::StringRef, clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCalleeInfo, llvm::AttributeList&, unsigned int&, bool, bool) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x99029E8: clang::CodeGen::CodeGenFunction::EmitCall(clang::CodeGen::CGFunctionInfo const&, clang::CodeGen::CGCallee const&, clang::CodeGen::ReturnValueSlot, clang::CodeGen::CallArgList const&, llvm::CallBase**, bool, clang::SourceLocation) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x996CD27: clang::CodeGen::CodeGenFunction::EmitCall(clang::QualType, clang::CodeGen::CGCallee const&, clang::CallExpr const*, clang::CodeGen::ReturnValueSlot, llvm::Value*) (in /export/home/jb242",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:5414,testability,depend,depends,5414,"by 0x960F2CB: clang::CodeGen::CodeGenFunction::EmitReturnStmt(clang::ReturnStmt const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x961225B: clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9674B79: clang::CodeGen::CodeGenFunction::EmitFunctionBody(clang::Stmt const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9683D06: clang::CodeGen::CodeGenFunction::GenerateCode(clang::GlobalDecl, llvm::Function*, clang::CodeGen::CGFunctionInfo const&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x96CC352: clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition(clang::GlobalDecl, llvm::GlobalValue*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ==75628== Conditional jump or move depends on uninitialised value(s). ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8381,testability,context,context,8381,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16123:8219,usability,user,user-attachments,8219,"LibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0xD6893E5: llvm::ModuleToFunctionPassAdaptor::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9789E2D: llvm::detail::PassModel<llvm::Module, llvm::ModuleToFunctionPassAdaptor, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Module>::run(llvm::Module&, llvm::AnalysisManagerllvm::Module&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628== by 0x9559F36: cling::BackendPasses::runOnModule(llvm::Module&, int) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02). ==75628==. ```. Should this be added to the suppression file or is it a real issue? ### Reproducer. Running valgrind on [CreateTreeTestv2.tar.gz](https://github.com/user-attachments/files/16392930/CreateTreeTestv2.tar.gz). ### ROOT version. 6.32.02	. ### Installation method. local. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16123
https://github.com/root-project/root/issues/16124:1241,availability,Operat,Operating,1241,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:347,deployability,log,log,347,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:527,deployability,log,log,527,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:617,deployability,log,log,617,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:709,deployability,version,version,709,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1184,deployability,Instal,Installation,1184,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1205,deployability,build,build,1205,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1223,deployability,instal,installation,1223,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1284,deployability,releas,release,1284,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:142,energy efficiency,Current,Currently,142,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:709,integrability,version,version,709,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:709,modifiability,version,version,709,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:347,safety,log,log,347,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:527,safety,log,log,527,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:617,safety,log,log,617,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:347,security,log,log,347,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:527,security,log,log,527,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:617,security,log,log,617,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:864,security,Team,Team,864,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:347,testability,log,log,347,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:527,testability,log,log,527,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:617,testability,log,log,617,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1319,testability,context,context,1319,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:418,usability,user,user-attachments,418,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:551,usability,user,user-attachments,551,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/issues/16124:1046,usability,help,help,1046,"RNTupleInspector returns wrong compressed size for large N-tuples; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Currently, irrelevant value is returned if compressed size exceeds the range of int. ### Reproducer. ```. $ root --web=off -l -b -q ntpl_inspect_skim_compressed_size.C+ > ntpl_inspect_skim_compressed_size.log. ```. [ntpl_inspect_skim_compressed_size.C.txt](https://github.com/user-attachments/files/16393470/ntpl_inspect_skim_compressed_size.C.txt). [ntpl_inspect_skim_compressed_size.log](https://github.com/user-attachments/files/16393474/ntpl_inspect_skim_compressed_size.log). [ntpl_skim_compressed_size.root](https://cernbox.cern.ch/s/mbKHZOwZMEADWyq). ### ROOT version. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.33.01 https://root.cern |. | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jul 19 2024, 22:56:36 |. | From heads/master@v6-31-01-2659-gd4c8fa6bab |. | With g++ (GCC) 13.1.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Installation method. build from source installation. ### Operating system. Red Hat Enterprise Linux release 9.4 (Plow). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16124
https://github.com/root-project/root/pull/16125:232,deployability,Updat,Update,232,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:306,deployability,Updat,Update,306,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:129,interoperability,standard,standard,129,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:232,safety,Updat,Update,232,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:306,safety,Updat,Update,306,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:232,security,Updat,Update,232,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:306,security,Updat,Update,306,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:12,usability,Support,Support,12,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:138,usability,support,supported,138,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16125:152,usability,menu,menu,152,"[webcanvas] Support PDF and WEBP on client side; 1. Now PDF can be created on client and just send to server. 2. Also WEBP image standard supported via menu. 3. Print created file size. 4. Use canvas name as file name for image. 5. Update 'haxis.C' tutorial - show TBox and TLatex usage on haxis frame. 6. Update JSROOT with correspondent functionality, plus TProfile2D empty bin fix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16125
https://github.com/root-project/root/pull/16126:406,availability,cluster,cluster,406,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:417,availability,cluster,cluster,417,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:406,deployability,cluster,cluster,406,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:417,deployability,cluster,cluster,417,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:357,modifiability,maintain,maintain,357,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:357,safety,maintain,maintain,357,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16126:245,usability,User,Users,245,"[ntuple] fix column representation of nullable field; Makes the following changes:. - The default representation is now always a vector of 0/1 elements. There are very few cases where the bitmask plus default constructed NULL values are better. Users now need to explicitly request that representation. - Remove IsDense(), IsSparse(), which will be hard to maintain once the representation can change from cluster to cluster. - Use kSplitIndex64 (instead of 32bit) as a default column type for the vector representation. Fixes #12842",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16126
https://github.com/root-project/root/pull/16127:33,safety,test,testing,33,[DO NOT MERGE] [graphics] Better testing for graphics output ; See https://github.com/root-project/roottest/pull/1154,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16127
https://github.com/root-project/root/pull/16127:33,testability,test,testing,33,[DO NOT MERGE] [graphics] Better testing for graphics output ; See https://github.com/root-project/roottest/pull/1154,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16127
https://github.com/root-project/root/pull/16129:171,availability,error,errors,171,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:413,availability,error,error,413,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:605,availability,error,error,605,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:200,deployability,Build,Building,200,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:282,deployability,FAIL,FAILED,282,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:706,deployability,build,build,706,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:716,deployability,releas,release,716,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:171,performance,error,errors,171,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:413,performance,error,error,413,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:605,performance,error,error,605,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:282,reliability,FAIL,FAILED,282,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:171,safety,error,errors,171,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:413,safety,error,error,413,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:605,safety,error,error,605,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:59,usability,support,support,59,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:171,usability,error,errors,171,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:413,usability,error,error,413,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16129:605,usability,error,error,605,"Revert ""Implementation of REveText, addition of GL overlay support (p…; …rototype)."". This reverts commit 3b9ed05df2f1209c715deb4a500206f5458b20ba. There are some case of errors like. ```. [512/1065] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. FAILED: graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o . <snip>. src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. ```. ```. C:\root-dev\git\master\graf2d\asimage\src\TASPngWriter.cxx(3,10): error C1083: Cannot open include file: 'afterrootpngwrite.h': No such file or directory [C:\root-dev\build\x64\release\graf2d\asimage. \ASImage.vcxproj]. ```. I suggest to revert until this is sorted out.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16129
https://github.com/root-project/root/pull/16130:33,interoperability,share,shared,33,[afterimage] Add new sources in .shared file; Should fix compilation,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16130
https://github.com/root-project/root/pull/16131:310,deployability,API,API,310,"[ntuple] remove code duplication in PopulatePage(); Moves the task of finding the page number for a given column and element index into the `RPageSource` base class. This code was implemented twice, in the file source and the DAOS source. There is, I think, still room for improvement for the `PopulatePage()` API but that's for another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16131
https://github.com/root-project/root/pull/16131:310,integrability,API,API,310,"[ntuple] remove code duplication in PopulatePage(); Moves the task of finding the page number for a given column and element index into the `RPageSource` base class. This code was implemented twice, in the file source and the DAOS source. There is, I think, still room for improvement for the `PopulatePage()` API but that's for another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16131
https://github.com/root-project/root/pull/16131:310,interoperability,API,API,310,"[ntuple] remove code duplication in PopulatePage(); Moves the task of finding the page number for a given column and element index into the `RPageSource` base class. This code was implemented twice, in the file source and the DAOS source. There is, I think, still room for improvement for the `PopulatePage()` API but that's for another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16131
https://github.com/root-project/root/pull/16132:62,availability,cluster,cluster,62,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16132:62,deployability,cluster,cluster,62,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16132:88,deployability,contain,contain,88,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16132:143,safety,prevent,prevents,143,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16132:156,safety,accid,accidental,156,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16132:143,security,preven,prevents,143,[ntuple] ensure empty page ranges for suppressed columns; The cluster descriptor should contain no page range for suppressed columns. This fix prevents the accidental creation of an empty page range during deserialization of the page list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16132
https://github.com/root-project/root/pull/16133:207,usability,Close,Closes,207,"[CPyCppyy] Auto-cast elements of std::vector<T*>, with T a class type; Applying the following commit from CPyCppyy upstream: https://github.com/wlav/CPyCppyy/commit/9a792b231c73452d08686ea83c6588f5e98ca9a7. Closes #1523.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16133
https://github.com/root-project/root/issues/16134:822,availability,Error,Error,822,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1212,availability,Operat,Operating,1212,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:280,deployability,version,version,280,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:370,deployability,fail,fails,370,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:441,deployability,patch,patches,441,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:995,deployability,build,build,995,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1040,deployability,build,build,1040,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1135,deployability,version,version,1135,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1160,deployability,patch,patches,1160,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1173,deployability,Instal,Installation,1173,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1198,deployability,releas,releases,1198,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:280,integrability,version,version,280,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:511,integrability,Event,EventData,511,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:570,integrability,Event,EventTag,570,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:809,integrability,Event,EventData,809,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1135,integrability,version,version,1135,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:21,interoperability,mismatch,mismatch,21,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:907,interoperability,mismatch,mismatch,907,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:280,modifiability,version,version,280,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1135,modifiability,version,version,1135,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:822,performance,Error,Error,822,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:370,reliability,fail,fails,370,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:0,safety,Except,Exception,0,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:230,safety,except,exception,230,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:441,safety,patch,patches,441,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:822,safety,Error,Error,822,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1160,safety,patch,patches,1160,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:12,security,checksum,checksum,12,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:441,security,patch,patches,441,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:898,security,checksum,checksum,898,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1160,security,patch,patches,1160,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:1252,testability,context,context,1252,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16134:822,usability,Error,Error,822,"Exception: ""checksum mismatch in RNTuple anchor"" when doing TFile::Get() on RNTuple object; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Opening a TFile and doing Get() on an RNTuple object throws an exception. The file is created with the same ROOT version (6.32.02). This worked before and it works again in 6.33 - for some reason 6.32.2 fails. Is there some fix for that in HEAD that could be ported to 6.32-patches? ### Reproducer. ```. file:. KEY: ROOT::Experimental::RNTuple EventData;1 object title. KEY: ROOT::Experimental::RNTuple EventTag;1 object title. root [0] TFile::Open(""https://atlas-art-data.web.cern.ch/atlas-art-data/grid-output/main--dev3LCG/Athena/x86_64-el9-gcc13-opt/2024-07-23T1230/RNTupleART/test_data23_rawtoall_rntuple_esd_aod/myAOD.pool.root"")->Get(""EventData""). Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: checksum mismatch in RNTuple anchor. At:. void ROOT::Experimental::RNTuple::Streamer(TBuffer&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.32.02/src/ROOT/6.32.02/tree/ntuple/v7/src/RNTuple.cxx:48]. ```. ### ROOT version. 6.32.2 and 6.32-patches. ### Installation method. SFT releases. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16134
https://github.com/root-project/root/issues/16135:293,availability,error,error,293,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:314,availability,Error,Error,314,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1583,availability,error,error,1583,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1824,availability,Operat,Operating,1824,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:587,deployability,build,build,587,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:632,deployability,build,build,632,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:899,deployability,build,build,899,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:944,deployability,build,build,944,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1185,deployability,build,build,1185,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1230,deployability,build,build,1230,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1530,deployability,version,version,1530,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1730,deployability,version,version,1730,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1775,deployability,Instal,Installation,1775,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1813,deployability,build,build,1813,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1852,deployability,releas,release,1852,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:299,integrability,messag,message,299,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1530,integrability,version,version,1530,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1730,integrability,version,version,1730,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:299,interoperability,messag,message,299,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1530,modifiability,version,version,1530,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1730,modifiability,version,version,1730,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:293,performance,error,error,293,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:314,performance,Error,Error,314,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1583,performance,error,error,1583,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:293,safety,error,error,293,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:314,safety,Error,Error,314,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1583,safety,error,error,1583,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:38,security,sign,signed,38,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:209,security,sign,signed,209,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:404,security,sign,signed,404,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:435,security,access,access,435,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1691,security,sign,signed,1691,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1902,testability,context,context,1902,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:293,usability,error,error,293,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:314,usability,Error,Error,314,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1454,usability,user,user,1454,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/issues/16135:1583,usability,error,error,1583,"[ntuple] Cannot create RFieldBase for signed char; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. Since last Friday's dev3LCG nightly (i.e. from 26/7) we cannot create a field for `signed char`. This used to work fine w/ the LCG dev3 nightly from 25/7. Here is the error message:. ```. Error in <TRint::HandleTermInput()>: ROOT::Experimental::RException caught: unknown type: signed char (unchecked RResult access!). At:. ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool)::<lambda(const std::string&)> [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:629]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&, const std::string&, bool) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:852]. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::RFieldBase> > ROOT::Experimental::RFieldBase::Create(const std::string&, const std::string&) [/build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/tree/ntuple/v7/src/RField.cxx:592]. ```. ### Reproducer. To setup ROOT:. ```. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase. source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh. lsetup ""asetup Athena,main--dev3LCG,latest""; # any version after r26 (inclusive). ```. To reproduce the error:. ```. root [0] using namespace ROOT::Experimental;. root [1] auto field = RFieldBase::Create(""foo"", ""signed char"").Unwrap();. ```. ### ROOT version. dev3/Fri/ROOT/HEAD (from 26/7). ### Installation method. LCG dev3 nightly build. ### Operating system. AlmaLinux release 9.4 (Shamrock Pampas Cat). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16135
https://github.com/root-project/root/pull/16136:28,security,sign,signed,28,[ntuple] Add missing RField signed char specialization; Fixes #16135,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16136
https://github.com/root-project/root/pull/16137:136,safety,prevent,prevent,136,"[ntuple] Fixes to the implementation of multi-key blobs; Some minor cosmetics and fixes for inconsistencies, and an important change to prevent coalescing beyond the maximum key size which could trip up the `RMiniReader::ReadBuffer` implementation to read chunk pointers when there are none.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16137
https://github.com/root-project/root/pull/16137:136,security,preven,prevent,136,"[ntuple] Fixes to the implementation of multi-key blobs; Some minor cosmetics and fixes for inconsistencies, and an important change to prevent coalescing beyond the maximum key size which could trip up the `RMiniReader::ReadBuffer` implementation to read chunk pointers when there are none.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16137
https://github.com/root-project/root/issues/16138:60,energy efficiency,Current,Currently,60,"Python string from RCutFlowReport; ### Feature description. Currently there's no native way to get the output of a `RCutFlowReport::Print()` as a string object in PyROOT, which would allow for users to use string manipulation to pick out information from the efficiencies and do other processing on the cutflow information. The string could be given as a separate method from `Print()` (~`RCutFlowReport::GetString()`) or as a return value of the `Print()`. See [discussion on the ROOT forum](https://root-forum.cern.ch/t/saving-the-print-of-a-root-rcutflowreport-in-python/60351). ### Alternatives considered. @devajithvs gave a temporary solution as a Python function in the ROOT forum discussion:. ```. # Python implementation of the C++ Print method. def cut_info_string(report):. begin = report.begin(). end = report.end(). . allEntries = 0 if begin == end else begin.__deref__().GetAll(). result = """". it = begin. while it != end:. ci = it.__deref__(). name = ci.GetName(). pass_val = ci.GetPass(). all = ci.GetAll(). eff = ci.GetEff(). cumulativeEff = 100.0 * float(pass_val) / float(allEntries) if allEntries > 0 else 0.0. . result+=f""{name:10}: pass={pass_val:<10} all={all:<10} -- eff={eff:.2f} % cumulative eff={cumulativeEff:.2f} %"". . it.__preinc__(). return result. ```. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16138
https://github.com/root-project/root/issues/16138:1300,testability,context,context,1300,"Python string from RCutFlowReport; ### Feature description. Currently there's no native way to get the output of a `RCutFlowReport::Print()` as a string object in PyROOT, which would allow for users to use string manipulation to pick out information from the efficiencies and do other processing on the cutflow information. The string could be given as a separate method from `Print()` (~`RCutFlowReport::GetString()`) or as a return value of the `Print()`. See [discussion on the ROOT forum](https://root-forum.cern.ch/t/saving-the-print-of-a-root-rcutflowreport-in-python/60351). ### Alternatives considered. @devajithvs gave a temporary solution as a Python function in the ROOT forum discussion:. ```. # Python implementation of the C++ Print method. def cut_info_string(report):. begin = report.begin(). end = report.end(). . allEntries = 0 if begin == end else begin.__deref__().GetAll(). result = """". it = begin. while it != end:. ci = it.__deref__(). name = ci.GetName(). pass_val = ci.GetPass(). all = ci.GetAll(). eff = ci.GetEff(). cumulativeEff = 100.0 * float(pass_val) / float(allEntries) if allEntries > 0 else 0.0. . result+=f""{name:10}: pass={pass_val:<10} all={all:<10} -- eff={eff:.2f} % cumulative eff={cumulativeEff:.2f} %"". . it.__preinc__(). return result. ```. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16138
https://github.com/root-project/root/issues/16138:193,usability,user,users,193,"Python string from RCutFlowReport; ### Feature description. Currently there's no native way to get the output of a `RCutFlowReport::Print()` as a string object in PyROOT, which would allow for users to use string manipulation to pick out information from the efficiencies and do other processing on the cutflow information. The string could be given as a separate method from `Print()` (~`RCutFlowReport::GetString()`) or as a return value of the `Print()`. See [discussion on the ROOT forum](https://root-forum.cern.ch/t/saving-the-print-of-a-root-rcutflowreport-in-python/60351). ### Alternatives considered. @devajithvs gave a temporary solution as a Python function in the ROOT forum discussion:. ```. # Python implementation of the C++ Print method. def cut_info_string(report):. begin = report.begin(). end = report.end(). . allEntries = 0 if begin == end else begin.__deref__().GetAll(). result = """". it = begin. while it != end:. ci = it.__deref__(). name = ci.GetName(). pass_val = ci.GetPass(). all = ci.GetAll(). eff = ci.GetEff(). cumulativeEff = 100.0 * float(pass_val) / float(allEntries) if allEntries > 0 else 0.0. . result+=f""{name:10}: pass={pass_val:<10} all={all:<10} -- eff={eff:.2f} % cumulative eff={cumulativeEff:.2f} %"". . it.__preinc__(). return result. ```. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16138
https://github.com/root-project/root/issues/16138:259,usability,efficien,efficiencies,259,"Python string from RCutFlowReport; ### Feature description. Currently there's no native way to get the output of a `RCutFlowReport::Print()` as a string object in PyROOT, which would allow for users to use string manipulation to pick out information from the efficiencies and do other processing on the cutflow information. The string could be given as a separate method from `Print()` (~`RCutFlowReport::GetString()`) or as a return value of the `Print()`. See [discussion on the ROOT forum](https://root-forum.cern.ch/t/saving-the-print-of-a-root-rcutflowreport-in-python/60351). ### Alternatives considered. @devajithvs gave a temporary solution as a Python function in the ROOT forum discussion:. ```. # Python implementation of the C++ Print method. def cut_info_string(report):. begin = report.begin(). end = report.end(). . allEntries = 0 if begin == end else begin.__deref__().GetAll(). result = """". it = begin. while it != end:. ci = it.__deref__(). name = ci.GetName(). pass_val = ci.GetPass(). all = ci.GetAll(). eff = ci.GetEff(). cumulativeEff = 100.0 * float(pass_val) / float(allEntries) if allEntries > 0 else 0.0. . result+=f""{name:10}: pass={pass_val:<10} all={all:<10} -- eff={eff:.2f} % cumulative eff={cumulativeEff:.2f} %"". . it.__preinc__(). return result. ```. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16138
https://github.com/root-project/root/pull/16139:7,deployability,updat,update,7,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:224,deployability,updat,updates,224,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:420,deployability,updat,updated,420,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:7,safety,updat,update,7,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:224,safety,updat,updates,224,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:390,safety,test,tested,390,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:420,safety,updat,updated,420,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:7,security,updat,update,7,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:224,security,updat,updates,224,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:420,security,updat,updated,420,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:390,testability,test,tested,390,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16139:302,usability,interact,interacts,302,"[gpad] update list of free colors when streaming canvas from file; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16051. What I did was to copy using the full constructor which updates the list. Another solution could to be change the Streamer so that it interacts with the list of colors directly, but don't know how to. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16139
https://github.com/root-project/root/pull/16140:191,testability,Simpl,Simplify,191,Implement proper palette attributes for the scatter plot palette; Implement properly the scatter plot palette attributes as requested here: https://github.com/root-project/root/issues/15922. Simplify scatter.C.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16140
https://github.com/root-project/root/pull/16140:191,usability,Simpl,Simplify,191,Implement proper palette attributes for the scatter plot palette; Implement properly the scatter plot palette attributes as requested here: https://github.com/root-project/root/issues/15922. Simplify scatter.C.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16140
https://github.com/root-project/root/pull/16141:1044,availability,error,error,1044,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:269,deployability,build,building,269,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:615,deployability,build,build,615,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:686,deployability,version,version,686,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:709,deployability,patch,patched,709,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:878,deployability,build,build,878,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:4,integrability,buffer,buffer,4,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:55,integrability,buffer,buffer,55,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:129,integrability,buffer,buffer,129,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:181,integrability,buffer,buffer,181,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:235,integrability,buffer,buffer,235,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:686,integrability,version,version,686,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:378,modifiability,scenario,scenarios,378,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:686,modifiability,version,version,686,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1050,modifiability,scenario,scenario,1050,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1044,performance,error,error,1044,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:589,reliability,doe,does,589,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:709,safety,patch,patched,709,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:929,safety,test,tests,929,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1044,safety,error,error,1044,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:709,security,patch,patched,709,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:814,testability,plan,plan,814,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:929,testability,test,tests,929,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1003,usability,close,closed,1003,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1044,usability,error,error,1044,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1078,usability,effectiv,effectively,1078,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16141:1091,usability,document,documented,1091,"Fix buffer overflow in cint's G__defineMacro; Fixes a ""buffer overflow"" in `G__defineMacro` of `cint`, where `snprintf` is given buffer length that is 1 byte longer that the actual buffer. It is seems like this never caused any actual buffer overflows - at least while building ROOT, where `cint` or rather `rootcint_tmp` is already used. However, this causes issues in certain scenarios, where GCC's (?) fortify mechanism causes `cint` (or rather `rootcint_tmp`) to abort during `G__DEFINE_MACRO(__linux__);`. Notes on my encounter with this issue:. - using GCC 13.2.0 on Ubuntu 24.04. - does not occur in `Debug` build mode, but was debuggable when using `RelWithDebInfo`. - the ROOT version is some legacy patched tarball apparently based on v5.34.00. I did not reproduce this issue using this branch, nor do I plan to, since I encountered other issues earlier during such a build attempt. Consequently, I also didn't run any tests. If this makes this PR ineligible to merge, I'm fine with having it closed. This way, at least the potential error scenario and a solution are effectively ""documented"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16141
https://github.com/root-project/root/pull/16142:65,deployability,updat,update,65,[webgui] fix typo in web-based geom painter initialization; Plus update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16142
https://github.com/root-project/root/pull/16142:65,safety,updat,update,65,[webgui] fix typo in web-based geom painter initialization; Plus update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16142
https://github.com/root-project/root/pull/16142:65,security,updat,update,65,[webgui] fix typo in web-based geom painter initialization; Plus update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16142
https://github.com/root-project/root/pull/16143:214,availability,cluster,clusters,214,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:515,availability,cluster,cluster,515,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:214,deployability,cluster,clusters,214,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:515,deployability,cluster,cluster,515,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:235,integrability,Event,Eventually,235,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:267,integrability,interfac,interface,267,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:267,interoperability,interfac,interface,267,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:267,modifiability,interfac,interface,267,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:62,safety,Compl,Completes,62,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:163,safety,test,tests,163,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:62,security,Compl,Completes,62,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:562,security,team,team,562,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:662,security,team,teams,662,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:158,testability,unit,unit,158,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:163,testability,test,tests,163,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:53,usability,support,support,53,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16143:76,usability,support,support,76,"[ntuple] Multiple column representations: high-level support; Completes the support for fields with multiple column representations. For the moment, only the unit tests can change the column representation between clusters on writing. Eventually, we may add a proper interface. Merging will also lead to this situation. In all cases but the nullable field, we can exploit the fact that the number of columns of multiple representations is the same and the corresponding columns have the same number of elements and cluster boundaries. Therefore, when reading we team up the corresponding columns of multiple representations. When we map another page, the column teams can then figure out amongst each other the column that is not suppressed for the given page / element index and forward the call. Follow-up of #16054 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16143
https://github.com/root-project/root/pull/16144:37,performance,I/O,I/O,37,"[ntuple] Add option to enable Direct I/O; Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16144
https://github.com/root-project/root/pull/16144:49,performance,I/O,I/O,49,"[ntuple] Add option to enable Direct I/O; Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16144
https://github.com/root-project/root/pull/16144:74,performance,cach,cache,74,"[ntuple] Add option to enable Direct I/O; Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16144
https://github.com/root-project/root/pull/16144:238,usability,user,userspace,238,"[ntuple] Add option to enable Direct I/O; Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16144
https://github.com/root-project/root/issues/16146:370,availability,Operat,Operating,370,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/issues/16146:310,deployability,version,version,310,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/issues/16146:331,deployability,Instal,Installation,331,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/issues/16146:310,integrability,version,version,310,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/issues/16146:310,modifiability,version,version,310,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/issues/16146:408,testability,context,context,408,"[ntuple] Additional information in RNTupleInspector::PrintColumnTypeInfo(); ### Explain what you would like to see improved and how. In the column overview of the `RNTupleInspector`, it would be nice to show in addition. - The compression ratio per column type. - The number of pages per column type. ### ROOT version. master. ### Installation method. From sources. ### Operating system. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16146
https://github.com/root-project/root/pull/16147:389,deployability,manag,management,389,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:467,deployability,updat,updated,467,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:389,energy efficiency,manag,management,389,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:325,integrability,event,event,325,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:265,performance,time,times,265,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:389,safety,manag,management,389,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:407,safety,test,test,407,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:437,safety,test,tested,437,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:467,safety,updat,updated,467,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:467,security,updat,updated,467,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:407,testability,test,test,407,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:437,testability,test,tested,437,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16147:368,usability,help,help,368,[multiproc] Correct entries ranges w/ nWorkers>nEntries; # This Pull request:. Corrects entries ranges w/ nWorkers>nEntries when using TTreeProcessorMP. When processing trees with less entries than workers with TTreeProcessorMP some entries were processed multiple times because of a mistake in the algorithm calculating the event ranges. Thanks to @hageboeck for the help with the output management of the test 🙏 ! ## Checklist:. - [v] tested changes locally. - [v] updated the docs (if necessary). This PR fixes #15425 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16147
https://github.com/root-project/root/pull/16148:177,deployability,updat,updated,177,[hist] TGraph::Add (TF1); # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/pull/16148:147,safety,test,tested,147,[hist] TGraph::Add (TF1); # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/pull/16148:177,safety,updat,updated,177,[hist] TGraph::Add (TF1); # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/pull/16148:177,security,updat,updated,177,[hist] TGraph::Add (TF1); # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/pull/16148:147,testability,test,tested,147,[hist] TGraph::Add (TF1); # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/9637. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16148
https://github.com/root-project/root/issues/16149:349,availability,Error,Error,349,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:491,availability,error,error,491,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:781,availability,Operat,Operating,781,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:425,deployability,build,builds,425,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:470,deployability,fail,failed,470,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:498,deployability,build,build,498,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:593,deployability,build,build,593,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:603,deployability,build,build,603,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:722,deployability,version,version,722,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:743,deployability,Instal,Installation,743,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:770,deployability,build,build,770,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:722,integrability,version,version,722,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:722,modifiability,version,version,722,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:349,performance,Error,Error,349,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:491,performance,error,error,491,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:470,reliability,fail,failed,470,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:349,safety,Error,Error,349,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:446,safety,test,test,446,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:491,safety,error,error,491,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:446,testability,test,test,446,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:821,testability,context,context,821,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:207,usability,User,Users,207,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:349,usability,Error,Error,349,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:368,usability,User,Users,368,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:399,usability,User,Users,399,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:491,usability,error,error,491,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/issues/16149:617,usability,User,Users,617,"CMake and xrootd builtin; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. With master, on a node without xrootd (so using builtin xrootd) doing on an empty directory:. ```. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. i.e. without buillding. leads to:. ```. CMake Error:. Running. '/Users/pcanal/bin/ninja' '-C' '/Users/pcanal/root_working/builds/master-xrootd-test' '-t' 'recompact'. failed with:. ninja: error: build.ninja:25026: multiple rules generate lib/libXrdCl.dylib. ```. ### Reproducer. ```. mkdir build. cd build. cmake /Users/pcanal/root_working/code/rootcling -G Ninja -Dbuiltin_davix=OFF -Ddavix=OFF. cmake . ```. ### ROOT version. master. ### Installation method. local build. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16149
https://github.com/root-project/root/pull/16150:398,availability,state,state,398,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16150:315,deployability,upgrad,upgrade,315,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16150:398,integrability,state,state,398,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16150:315,modifiability,upgrad,upgrade,315,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16150:351,reliability,doe,doesn,351,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16150:136,security,token,token,136,"[cling] Forcefully clean up `TemplateIdAnnotation`s; Upstream Clang keeps `TemplateIdAnnotation`s around ""if they might still be in the token stream."" See upstream commit for more details: https://github.com/llvm/llvm-project/commit/6163aa96799cbad7f2f58e02c5bebee9647056a5 (included in Clang 11, in ROOT since the upgrade to LLVM 13). This reasoning doesn't apply when we fully reset the `Parser` state in `ParserStateRAII`'s destructor, and we expect the swapped out vector of `TemplateIdAnnotation`s to be empty in order to not leak. Fixes #16121",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16150
https://github.com/root-project/root/pull/16151:44,deployability,Build,Builds,44,[ntuple] Fix some issues found by Valgrind; Builds on https://github.com/root-project/root/pull/16150,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16151
https://github.com/root-project/root/pull/16155:120,integrability,transform,transformed,120,[webgui] fix usage of lower case in saved file names [6.32]; By mistake all created file names - including paths - were transformed into lower case. Backport of #16154,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16155
https://github.com/root-project/root/pull/16155:120,interoperability,transform,transformed,120,[webgui] fix usage of lower case in saved file names [6.32]; By mistake all created file names - including paths - were transformed into lower case. Backport of #16154,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16155
https://github.com/root-project/root/pull/16156:270,availability,failur,failures,270,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:91,deployability,build,build,91,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:270,deployability,fail,failures,270,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:296,deployability,build,builds,296,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:270,performance,failur,failures,270,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:270,reliability,fail,failures,270,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:5,safety,Avoid,Avoid,5,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:201,safety,avoid,avoids,201,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16156:260,testability,assert,assertion,260,"[RF] Avoid using `std::map` in RooFit pythonizations; Introduce an internal elper class to build a map object that only uses `std::vector`, which can be implicitly converted to `std::map` in C++. This avoids using `std::map` in pythonizations, which can cause assertion failures in Windows debug builds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16156
https://github.com/root-project/root/pull/16158:88,performance,perform,perform,88,"[DF] Simplify RTreeColumnReader destructor; Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16158
https://github.com/root-project/root/pull/16158:5,testability,Simpl,Simplify,5,"[DF] Simplify RTreeColumnReader destructor; Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16158
https://github.com/root-project/root/pull/16158:5,usability,Simpl,Simplify,5,"[DF] Simplify RTreeColumnReader destructor; Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16158
https://github.com/root-project/root/pull/16158:88,usability,perform,perform,88,"[DF] Simplify RTreeColumnReader destructor; Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16158
https://github.com/root-project/root/issues/16160:176,availability,operat,operation,176,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:336,availability,Error,Error,336,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:480,availability,Error,Error,480,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:706,availability,error,error,706,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1715,availability,error,error,1715,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1879,availability,slo,slots,1879,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:2045,availability,Operat,Operating,2045,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:445,deployability,contain,contains,445,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:549,deployability,contain,contains,549,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1983,deployability,version,version,1983,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:2001,deployability,Instal,Installation,2001,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1849,integrability,Event,Event,1849,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1983,integrability,version,version,1983,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1983,modifiability,version,version,1983,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:336,performance,Error,Error,336,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:480,performance,Error,Error,480,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:706,performance,error,error,706,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1715,performance,error,error,1715,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:598,reliability,doe,does,598,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1879,reliability,slo,slots,1879,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:336,safety,Error,Error,336,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:480,safety,Error,Error,480,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:706,safety,error,error,706,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:848,safety,compl,complicated,848,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1715,safety,error,error,1715,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:848,security,compl,complicated,848,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:2083,testability,context,context,2083,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:336,usability,Error,Error,336,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:480,usability,Error,Error,480,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:706,usability,error,error,706,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:767,usability,statu,status,767,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:916,usability,user,user-defined,916,"[df] RDataFrame cannot read values if type is explicitly requested as `std::array`; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ###",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1655,usability,user,user,1655,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/issues/16160:1715,usability,error,error,1715,"ssues. - [ ] Checked for duplicates. ### Description. If an RDataFrame operation template argument instantiation explicitly requests the type `std::array` to read values from a TTree branch of the same type, this results in . ```. Error in <TTreeReaderValueBase::GetBranchDataType()>: Must use TTreeReaderArray to read branch covMatrix: it contains an array or a collection. Error in <TTreeReaderValueBase::CreateProxy()>: The branch covMatrix contains data of type {UNDETERMINED TYPE}, which does not have a dictionary. terminate called after throwing an instance of 'std::runtime_error'. what(): An error was encountered while processing the data. TTreeReader status code is: 6. ```. This is related to #14790, although that case is further complicated by the presence of the std::array as a data member of a user-defined class. ### Reproducer. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. #include <array>. const static auto filename{""file.root""};. const static auto treename{""tree""};. const static auto branchname{""array""};. void write_ttree(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::array<int, 6> array{11, 22, 33, 44, 55, 66};. t.Branch(branchname, &array);. t.Fill();. f.WriteObject(&t, treename);. }. void read_rdf(). {. ROOT::RDataFrame df{treename, filename};. df.Describe().Print();. df.Display<std::array<int, 6>>({branchname})->Print();. }. int main(). {. write_ttree();. read_rdf();. }. ```. Note that `Describe` correctly infers the type of the column as RVec, but the user explicitly requests the std::array type leading to the error. ```. Dataframe from TChain tree in file file.root. Property Value. -------- -----. Columns in total 1. Columns from defines 0. Event loops run 0. Processing slots 1. Column Type Origin. ------ ---- ------. array ROOT::VecOps::RVec<Int_t> Dataset. ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16160
https://github.com/root-project/root/pull/16161:215,performance,content,contents,215,[df] Allow reading std::array branches from TTree; Add a specialization of RTreeColumnReader that reads values from a branch of type std::array. The specialization uses the non-adopting view from RVec to expose the contents of the array to nodes of the graph. Fixes #16160.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16161
https://github.com/root-project/root/pull/16161:204,security,expos,expose,204,[df] Allow reading std::array branches from TTree; Add a specialization of RTreeColumnReader that reads values from a branch of type std::array. The specialization uses the non-adopting view from RVec to expose the contents of the array to nodes of the graph. Fixes #16160.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16161
https://github.com/root-project/root/issues/16163:614,availability,Operat,Operating,614,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:112,deployability,log,logic,112,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:298,deployability,build,build,298,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:563,deployability,version,version,563,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:584,deployability,Instal,Installation,584,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:563,integrability,version,version,563,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:563,modifiability,version,version,563,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:112,safety,log,logic,112,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:112,security,log,logic,112,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:112,testability,log,logic,112,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:652,testability,context,context,652,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/issues/16163:457,usability,user,user-attachments,457,"Compiler warning in TCanvas.cxx; ### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The logic at . https://github.com/root-project/root/blob/e9fffa9a7c3aeeb17a4e05d5a05a83911c54b5dc/graf2d/gpad/src/TCanvas.cxx#L2261-L2264. Introduced a compiler warning, visible in every PR build, for example at https://github.com/root-project/root/pull/16161/files. <img width=""1183"" alt=""Screenshot 2024-08-03 at 15 28 50"" src=""https://github.com/user-attachments/assets/2880c4ea-fa11-48dc-91df-f3b45f890a7c"">. ### Reproducer. See description. ### ROOT version. Master. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16163
https://github.com/root-project/root/pull/16164:24,deployability,manag,management,24,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:344,deployability,releas,release,344,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:707,deployability,Releas,ReleasePage,707,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:24,energy efficiency,manag,management,24,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:211,energy efficiency,alloc,allocating,211,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:250,energy efficiency,current,currently,250,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:398,energy efficiency,alloc,allocator,398,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:746,energy efficiency,Load,LoadPage,746,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:169,integrability,abstract,abstract,169,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:178,integrability,interfac,interface,178,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:231,integrability,buffer,buffer,231,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:361,integrability,buffer,buffer,361,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:178,interoperability,interfac,interface,178,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:498,interoperability,prox,proxies,498,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:169,modifiability,abstract,abstract,169,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:178,modifiability,interfac,interface,178,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:17,performance,memor,memory,17,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:746,performance,Load,LoadPage,746,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:24,safety,manag,management,24,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16164:17,usability,memor,memory,17,"[ntuple] improve memory management of pages; Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer. - There is currently one concrete implementation, the `RPageAllocatorHeap`. - Pages are movable only and release the page buffer on destruction using the page allocator that created them. - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page. - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction. - Remove the `RPageStorage::ReleasePage()` method. - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16164
https://github.com/root-project/root/pull/16165:18,integrability,event,event,18,Detect mismatched event counts in TTreeReader with friends; Fixes #9137. This PR includes changes from https://github.com/root-project/root/pull/16162,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16165
https://github.com/root-project/root/pull/16165:7,interoperability,mismatch,mismatched,7,Detect mismatched event counts in TTreeReader with friends; Fixes #9137. This PR includes changes from https://github.com/root-project/root/pull/16162,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16165
https://github.com/root-project/root/pull/16165:0,safety,Detect,Detect,0,Detect mismatched event counts in TTreeReader with friends; Fixes #9137. This PR includes changes from https://github.com/root-project/root/pull/16162,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16165
https://github.com/root-project/root/pull/16165:0,security,Detect,Detect,0,Detect mismatched event counts in TTreeReader with friends; Fixes #9137. This PR includes changes from https://github.com/root-project/root/pull/16162,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16165
https://github.com/root-project/root/pull/16166:324,deployability,updat,updated,324,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:231,integrability,pub,public,231,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:294,safety,test,tested,294,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:324,safety,updat,updated,324,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:324,security,updat,updated,324,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/pull/16166:294,testability,test,tested,294,"[ntuple] RNTupleDescriptor: moved nested type defs out of class; # This Pull request:. moves most of the nested classes definitions in RNTupleDescriptor.cxx out of line, for ease of reading. (Unfortunately, since the types are all public, they cannot be moved to the cxx). ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16166
https://github.com/root-project/root/issues/16167:3313,availability,Error,Error,3313," top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3485,availability,Error,Error,3485," const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3582,availability,Error,Error,3582,"LastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5605,availability,Operat,Operating,5605,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:538,deployability,build,builds,538,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:584,deployability,version,version,584,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:662,deployability,build,builds,662,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:682,deployability,version,version,682,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:941,deployability,VERSION,VERSION,941,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:966,deployability,Patch,PatchGeo,966,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3693,deployability,build,build,3693,"out << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3703,deployability,build,build,3703,"ack is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3953,deployability,Build,BuildCache,3953,"GeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4266,deployability,Build,Building,4266,""", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready--------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4721,deployability,Build,BuildCache,4721,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5034,deployability,Build,Building,5034,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5318,deployability,version,version,5318,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5437,deployability,version,version,5437,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5451,deployability,Version,Version,5451,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5568,deployability,Instal,Installation,5568,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5593,deployability,stack,stacks,5593,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:628,energy efficiency,current,current,628,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:1182,energy efficiency,Core,Core,1182,"dget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; // electron neutrino. TGeoNode *node1 = _tgeoMgr->InitTrack(point1, point2);. if(!node1) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:1353,energy efficiency,Core,Core,1353,"D4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; // electron neutrino. TGeoNode *node1 = _tgeoMgr->InitTrack(point1, point2);. if(!node1) {. throw std::runtime_error(""No geometry node found at given location. Either there is no node placed here or position is outside of top volume."");. }. while ( !_tgeoMgr->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3290,energy efficiency,Load,LoadPlugin,3290,"osition is outside of top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3348,energy efficiency,load,load,3348,"Mgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4481,energy efficiency,model,modeler,4481,"Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5249,energy efficiency,model,modeler,5249,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:584,integrability,version,version,584,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:682,integrability,version,version,682,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:941,integrability,VERSION,VERSION,941,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5318,integrability,version,version,5318,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5437,integrability,version,version,5437,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5451,integrability,Version,Version,5451,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:1094,interoperability,SHARE,SHARED,1094,"] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; //",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3353,interoperability,plug,plugin,3353,"sOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3617,interoperability,plug,plugin,3617,"Mgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:584,modifiability,version,version,584,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:682,modifiability,version,version,682,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:941,modifiability,VERSION,VERSION,941,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5318,modifiability,version,version,5318,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5437,modifiability,version,version,5437,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5451,modifiability,Version,Version,5451,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3290,performance,Load,LoadPlugin,3290,"osition is outside of top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TG",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3313,performance,Error,Error,3313," top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3348,performance,load,load,3348,"Mgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3485,performance,Error,Error,3485," const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3582,performance,Error,Error,3582,"LastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4275,performance,cach,cache,4275,") {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5043,performance,cach,cache,5043,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:309,safety,test,tests,309,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:966,safety,Patch,PatchGeo,966,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3313,safety,Error,Error,3313," top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3485,safety,Error,Error,3485," const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3582,safety,Error,Error,3582,"LastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:966,security,Patch,PatchGeo,966,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:2355,security,IsO,IsOutside,2355,"OT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; // electron neutrino. TGeoNode *node1 = _tgeoMgr->InitTrack(point1, point2);. if(!node1) {. throw std::runtime_error(""No geometry node found at given location. Either there is no node placed here or position is outside of top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:2461,security,IsO,IsOutside,2461,"ume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; // electron neutrino. TGeoNode *node1 = _tgeoMgr->InitTrack(point1, point2);. if(!node1) {. throw std::runtime_error(""No geometry node found at given location. Either there is no node placed here or position is outside of top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4481,security,model,modeler,4481,"Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5249,security,model,modeler,5249,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:309,testability,test,tests,309,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5645,testability,context,context,5645,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:21,usability,behavi,behaving,21,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:182,usability,widget,widget,182,"TGeomPainter Web not behaving the same way as TGeomPainter ROOT; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The change from the root to the web based widget which went into effect with. https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. is breaking tests in DD4hep. https://github.com/AIDASoft/DD4hep/actions/runs/10163662170/job/28269502696. The TGeoManager->GetLastTrack() function is returning a nullptr following this change, instead of the last track. ### Reproducer. This builds an executable linked against a ""fixed"" version of GetGeomPainter, and once against current ROOT master from dev3 lcg builds. The working version (with ""root"") gets a track pointer, while the broken one gets a nullptr for the track. ```bash. mkdir repro. cd repro. source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh. cat > CMakeLists.txt << EOF. cmake_minimum_required( VERSION 3.20 ). project( PatchGeo CXX). set( PROJECT_VERSION_MAJOR 0 ). set( PROJECT_VERSION_MINOR 1 ). set(CMAKE_CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:2048,usability,Close,CloseGeometry,2048,"CXX_STANDARD 20). add_library(geopatch SHARED geopatch.cpp). find_package(ROOT REQUIRED). target_link_libraries(geopatch ROOT::Core ROOT::Geom ). add_executable(repro repro.cpp). target_link_libraries(repro geopatch ). add_executable(reproBroken repro.cpp). target_link_libraries(reproBroken ROOT::Core ROOT::Geom ). EOF. cat > repro.cpp <<EOF. #include ""TGeoManager.h"". #include ""TGeoNode.h"". #include ""TGeoVolume.h"". #include ""TVirtualGeoTrack.h"". #include <iostream>. int main() {. double point1[] = {0.0, 0.0, 0.0};. double point2[] = {0.3, 0.4, 0.5};. auto _tgeoMgr = new TGeoManager(""mygeo"", ""mygeo"");. //--- define some materials. TGeoMaterial *matVacuum = new TGeoMaterial(""Vacuum"", 0,0,0);. TGeoMaterial *matAl = new TGeoMaterial(""Al"", 26.98,13,2.7);. TGeoMedium *Vacuum = new TGeoMedium(""Vacuum"",1, matVacuum);. TGeoMedium *Al = new TGeoMedium(""Root Material"",2, matAl);. TGeoVolume *top = _tgeoMgr->MakeBox(""TOP"", Vacuum, 270., 270., 120.);. _tgeoMgr->SetTopVolume(top);. _tgeoMgr->CloseGeometry();. _tgeoMgr->AddTrack(0, 12 ) ; // electron neutrino. TGeoNode *node1 = _tgeoMgr->InitTrack(point1, point2);. if(!node1) {. throw std::runtime_error(""No geometry node found at given location. Either there is no node placed here or position is outside of top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3313,usability,Error,Error,3313," top volume."");. }. while ( !_tgeoMgr->IsOutside() ) {. TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;. if( !node2 || _tgeoMgr->IsOutside() ) {. break;. }. const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3485,usability,Error,Error,3485," const double *position = _tgeoMgr->GetCurrentPoint();. const double *previouspos = _tgeoMgr->GetLastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:3582,usability,Error,Error,3582,"LastPoint();. double length = _tgeoMgr->GetStep();. TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();. std::cout << ""track is "" << track << std::endl;. } // while not outside. return 0;. }. EOF. cat >geopatch.cpp <<EOF. #include <TGeoManager.h>. #include <TEnv.h>. #include <TPluginManager.h>. #include <TROOT.h>. #include <iostream>. TVirtualGeoPainter *TGeoManager::GetGeomPainter(). {. if (!fPainter) {. const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");. if (!kind || !*kind){}. //APS: switching back to root fixes it. kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4147,usability,Close,CloseGeometry,4147,"OOT->IsWebDisplayBatch()) ? ""web"" : ""root"";. if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4250,usability,Close,CloseGeometry,4250,"ualGeoPainter"", kind)) {. if (h->LoadPlugin() == -1) {. Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4377,usability,Close,CloseGeometry,4377,"d);. return nullptr;. }. fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4411,usability,UI,UID,4411,"nter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4449,usability,Close,CloseGeometry,4449,"1, this);. if (!fPainter) {. Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);. return nullptr;. }. } else {. Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);. }. }. return fPainter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Versi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:4915,usability,Close,CloseGeometry,4915,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5018,usability,Close,CloseGeometry,5018,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5145,usability,Close,CloseGeometry,5145,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5179,usability,UI,UID,5179,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16167:5217,usability,Close,CloseGeometry,5217,"Painter;. }. EOF. . mkdir build. cd build. cmake .. make. repro. reproBroken. ```. #### Output from reproducer. ```. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0x47f4ce0. track is 0x47f4ce0. Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created. Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0. Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. track is 0. track is 0. ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version. ROOT Version: 6.33.01. Built for linuxx8664gcc on Aug 04 2024, 22:30:37. From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16167
https://github.com/root-project/root/issues/16168:824,deployability,automat,automatically,824,"[PyROOT] C++ lambda function support; *Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python? ```python. ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""). ROOT.l. ```. I get:. ```txt. /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)"". attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ). ```. I see on the contrary that it is possibile to use std::function. ```python. ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""). ROOT.f(). ```. the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/issues/16168:795,integrability,wrap,wrap,795,"[PyROOT] C++ lambda function support; *Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python? ```python. ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""). ROOT.l. ```. I get:. ```txt. /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)"". attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ). ```. I see on the contrary that it is possibile to use std::function. ```python. ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""). ROOT.f(). ```. the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/issues/16168:522,security,Expos,ExposeCppMacros,522,"[PyROOT] C++ lambda function support; *Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python? ```python. ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""). ROOT.l. ```. I get:. ```txt. /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)"". attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ). ```. I see on the contrary that it is possibile to use std::function. ```python. ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""). ROOT.f(). ```. the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/issues/16168:824,testability,automat,automatically,824,"[PyROOT] C++ lambda function support; *Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python? ```python. ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""). ROOT.l. ```. I get:. ```txt. /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)"". attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ). ```. I see on the contrary that it is possibile to use std::function. ```python. ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""). ROOT.f(). ```. the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/issues/16168:29,usability,support,support,29,"[PyROOT] C++ lambda function support; *Ported over from JIRA (https://its.cern.ch/jira/browse/ROOT-7704), where there was already lots of discussion. See also the previous attempt in #5541*. ## Original ticket. Is it possibile to use lambda function created in c++ into python? ```python. ROOT.gROOT.ProcessLine(""auto l = []{cout << 100 << endl;}""). ROOT.l. ```. I get:. ```txt. /home/turra/root/lib/ROOT.py:436: RuntimeWarning: creating converter for unknown type ""(lambda)"". attr = _root.LookupCppEntity( name, PyConfig.ExposeCppMacros ). ```. I see on the contrary that it is possibile to use std::function. ```python. ROOT.gROOT.ProcessLine(""std::function<void()> f = []{cout << 100 << endl;}""). ROOT.f(). ```. the problem is that each lambda function is a different type. Is it possible to wrap them in a std::function automatically?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16168
https://github.com/root-project/root/pull/16169:432,availability,down,down,432,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:438,availability,down,down,438,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:445,availability,down,down,445,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:497,availability,down,down,497,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:994,deployability,scale,scale,994,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:1041,deployability,patch,patches,1041,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:102,energy efficiency,current,current,102,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:681,energy efficiency,Draw,Draw,681,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:994,energy efficiency,scale,scale,994,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:82,integrability,discover,discovered,82,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:82,interoperability,discover,discovered,82,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:994,modifiability,scal,scale,994,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:994,performance,scale,scale,994,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:237,reliability,doe,does,237,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:893,reliability,doe,doesn,893,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:1041,safety,patch,patches,1041,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:873,security,modif,modification,873,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:1041,security,patch,patches,1041,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:82,usability,discov,discovered,82,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:756,usability,user,user-attachments,756,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:832,usability,behavi,behaviour,832,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16169:912,usability,behavi,behaviour,912,"[RooFit] : fix 6thorder+exponential interpolation if nominal is not equal to 1; I discovered that the current 6th-order polynominal + exponential interpolation (interpCode 5 in PiecewiseInterpolation class, 4 in FlexibleInterpVar class) does something quite bizarre if the nominal value is not equal to 1. See:. ```. RooRealVar alpha(""alpha"",""alpha"",-5,5);. RooRealVar nom(""nom"",""nom"",10);. RooRealVar up(""up"",""up"",11);. RooRealVar down(""down"",""down"",9);. PiecewiseInterpolation pi(""pi"",""pi"",nom,{down},{up},{alpha});. pi.setAllInterpCodes(5);. TGraph gr;. alpha = -3;. while (alpha.getVal()<3) {. gr.AddPoint(alpha.getVal(),pi.getVal());. alpha.setVal(alpha.getVal()+0.1);. }. gr.Draw(""ALP"");. ```. ![Screenshot 2024-08-05 at 16 15 06](https://github.com/user-attachments/assets/c1a55272-89c6-4794-8767-ae2a168734a7). This strange behaviour can be fixed with the proposed modification, which doesn't affect the behaviour of the usual FlexibleInterpVar where nominal = 1. (i.e. it is used as a scale factor). . This should also go into 6.32 patches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16169
https://github.com/root-project/root/pull/16170:72,usability,Close,Closes,72,[PyROOT] Correctly set shape info in TTree `__getattr__` pythonization; Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-2811,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16170
https://github.com/root-project/root/pull/16171:1441,availability,error,error,1441,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1501,availability,Error,Error,1501,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:224,integrability,interfac,interface,224,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:224,interoperability,interfac,interface,224,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:449,interoperability,compatib,compatibility,449,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:648,interoperability,mismatch,mismatched,648,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:187,modifiability,paramet,parameter,187,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:224,modifiability,interfac,interface,224,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1441,performance,error,error,1441,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1501,performance,Error,Error,1501,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1575,reliability,doe,does,1575,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:346,safety,avoid,avoid,346,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:925,safety,test,test,925,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1193,safety,test,test,1193,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1204,safety,test,test,1204,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1441,safety,error,error,1441,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1501,safety,Error,Error,1501,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:925,testability,test,test,925,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1193,testability,test,test,1193,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1204,testability,test,test,1204,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:912,usability,Close,Close,912,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1035,usability,statu,status,1035,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1079,usability,Statu,Status,1079,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1095,usability,statu,status,1095,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1280,usability,Statu,Status,1280,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1324,usability,Statu,Status,1324,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1435,usability,clear,clear,1435,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1441,usability,error,error,1441,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1457,usability,Statu,Status,1457,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1501,usability,Error,Error,1501,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1646,usability,Statu,Status,1646,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16171:1691,usability,Close,Closes,1691,"[PyROOT] Call typed overload of `SetBranchAddress` for array types; Call typed overload of `SetBranchAddress` for array types like `np.ndarray` or `array.array`. The correct C++ template parameter is inferred from the array interface type information. This is an improvement for two reasons:. 1. We don't need to cast the arrays to a `void *` to avoid template resolution problems anymore. 2. More importantly: ROOT will do a runtime check for type compatibility, which was requested in the JIRA ticked linked below. To see the benefit of the added type check, take for example this code, where the branch address is set to an array address with a mismatched type:. ```python. import array. import ROOT. def create():. f = ROOT.TFile(""dummy.root"", 'RECREATE'). t = ROOT.TTree(""tree"", 'A tree'). a = array.array('f', [42]). br = t.Branch('a', a, 'a/F'). for x in (21, 42, 1337):. a[0] = x. t.Fill(). t.Write(). f.Close(). def test(typecode='f'):. f = ROOT.TFile(""dummy.root"", 'READ'). t = f.Get('tree'). a = array.array(typecode, [0]). status = t.SetBranchAddress('a', a). print(""Status = %s"" % (status, )). for i in range(t.GetEntries()):. t.GetEntry(i). print(""a = %s"" % (a[0], )). create(). test(""f""). test(""d""). ```. Before this commit, the output would be like this:. ```txt. Status = 4. a = 21.0. a = 42.0. a = 1337.0. Status = 4. a = 5.442276803e-315. a = 5.483722033e-315. a = 5.690664868e-315. ```. With this commit, you get a clear error:. ```txt. Status = 0. a = 21.0. a = 42.0. a = 1337.0. Error in <TTree::SetBranchAddress>: The pointer type given ""Double_t"" (8) does not correspond to the type needed ""Float_t"" (5) by the branch: a. Status = -2. a = 0.0. a = 0.0. a = 0.0. ```. Closes the following JIRA ticket:. https://its.cern.ch/jira/browse/ROOT-8213",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16171
https://github.com/root-project/root/pull/16172:215,availability,avail,available,215,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:200,integrability,event,eventually,200,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:215,reliability,availab,available,215,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:29,safety,test,tests,29,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:152,safety,test,tests,152,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:215,safety,avail,available,215,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:291,safety,test,tests,291,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:215,security,availab,available,215,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:29,testability,test,tests,29,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:152,testability,test,tests,152,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:291,testability,test,tests,291,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:53,usability,support,supported,53,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16172:192,usability,support,support,192,[ntuple] Add first evolution tests for transparently supported cases; * Removal of members. * Removal of base class. * Reordering of members. Some more tests of cases that we probably want to support eventually are available in a branch: https://github.com/hahnjo/root/tree/ntuple-evolution-tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16172
https://github.com/root-project/root/pull/16173:103,safety,valid,valid,103,"[io] Silently fallback if full xroot path is not found on EOS; Sometimes the `getxattr` call returns a valid string, but the string is incomplete. Namely, part of the full URL to the file on EOS is missing (usually the filename itself). Workaround by checking for the presence of the filename in the xurl string and in case it is not present, avoid calling TFile::Open.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16173
https://github.com/root-project/root/pull/16173:343,safety,avoid,avoid,343,"[io] Silently fallback if full xroot path is not found on EOS; Sometimes the `getxattr` call returns a valid string, but the string is incomplete. Namely, part of the full URL to the file on EOS is missing (usually the filename itself). Workaround by checking for the presence of the filename in the xurl string and in case it is not present, avoid calling TFile::Open.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16173
https://github.com/root-project/root/pull/16174:34,deployability,releas,release,34,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:200,deployability,updat,updated,200,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:22,modifiability,variab,variable,22,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:170,safety,test,tested,170,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:200,safety,updat,updated,200,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:200,security,updat,updated,200,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16174:170,testability,test,tested,170,[gpad] silence unused variable in release mode; # This Pull request:. ## Changes or fixes:. Fixes https://github.com/root-project/root/issues/16163. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16174
https://github.com/root-project/root/pull/16175:127,availability,redund,redundant,127,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:127,deployability,redundan,redundant,127,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:194,modifiability,variab,variables,194,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:254,modifiability,variab,variable-pattern,254,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:318,modifiability,paramet,parameter,318,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:127,reliability,redundan,redundant,127,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:127,safety,redund,redundant,127,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16175:362,usability,Close,Closes,362,"[PyROOT] Deprecate `TPython::Eval()`; The implementation of `TPython::Eval()` is fragile, and the funcitonality it provides is redundant. One can always communicate between Python and C++ using variables known to the ROOT interpreter. To make the output-variable-pattern easy to use in `TPython::Exec()`, a new output parameter of type `std::any` is introduced. Closes #12182.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16175
https://github.com/root-project/root/pull/16176:1279,availability,failur,failure,1279,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:121,deployability,releas,releases,121,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:163,deployability,Releas,ReleaseNotes,163,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:300,deployability,depend,depends,300,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:536,deployability,version,versions,536,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:853,deployability,build,building,853,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1122,deployability,upgrad,upgrade,1122,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1188,deployability,build,building,1188,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1279,deployability,fail,failure,1279,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1333,deployability,observ,observed,1333,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1485,deployability,depend,depends,1485,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1518,deployability,configurat,configuration,1518,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:528,energy efficiency,current,current,528,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:862,energy efficiency,current,current,862,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1103,energy efficiency,current,current,1103,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1555,energy efficiency,current,current,1555,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1787,energy efficiency,current,current,1787,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:300,integrability,depend,depends,300,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:536,integrability,version,versions,536,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1485,integrability,depend,depends,1485,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1518,integrability,configur,configuration,1518,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:183,interoperability,specif,specific-potentially-breaking-changes,183,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:741,interoperability,compatib,compatibility,741,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1066,interoperability,share,shared,1066,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1084,interoperability,Convers,Conversely,1084,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1229,interoperability,share,shared,1229,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1459,interoperability,share,shared,1459,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:267,modifiability,paramet,parameter,267,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:300,modifiability,depend,depends,300,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:331,modifiability,paramet,parameter,331,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:536,modifiability,version,versions,536,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1122,modifiability,upgrad,upgrade,1122,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1485,modifiability,depend,depends,1485,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1518,modifiability,configur,configuration,1518,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1279,performance,failur,failure,1279,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1728,performance,time,time,1728,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1279,reliability,fail,failure,1279,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:300,safety,depend,depends,300,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1422,safety,detect,detect,1422,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1485,safety,depend,depends,1485,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1422,security,detect,detect,1422,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1518,security,configur,configuration,1518,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1593,security,access,access,1593,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1716,security,sign,significant,1716,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:300,testability,depend,depends,300,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1333,testability,observ,observed,1333,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:1485,testability,depend,depends,1485,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16176:146,usability,tool,tools,146,"[DF] Remove extern template function declarations; Clang 18 changed the name mangling of function templates, see https://releases.llvm.org/18.1.0/tools/clang/docs/ReleaseNotes.html#c-specific-potentially-breaking-changes. The first mentioned case is ""When a template parameter in a function template depends on a previous template parameter"", for example:. ```. struct A {. template <typename T, std::enable_if_t<std::is_integral_v<T>, int> = 0>. void Member(T p) {}. };. template void A::Member(int);. ```. With Clang < 18 and current versions of GCC, this will mangle to `_ZN1A6MemberIiLi0EEEvT_`, but Clang 18 and later will mangle it to `_ZN1A6MemberIiTnNSt9enable_ifIXsr3stdE13is_integral_vIT_EEiE4typeELi0EEEvS2_` (unless reverted for compatibility with `-fclang-abi-compat=17`). For ROOT's use of Cling, this poses a bidirectional problem:. * If building current master with Clang 18, the compiler will, by default, mangle according to the new rules. At runtime, Cling based on LLVM/Clang 16 will generate the old name, but that symbol cannot be found in the shared library. * Conversely, in the current attempt to upgrade to LLVM/Clang 18, the opposite situation will happen when building with an ""older"" compiler so the shared library has the old name. In both cases, a failure of `tutorial-tmva-tmva103_Application` can be observed, when Cling cannot find the symbol. Unfortunately, it is not easily possible to detect which symbol names are in the shared library because it depends on the host compiler and configuration. Furthermore, with the current LLVM/Clang 16, we do not have access to the new mangling. Finally, it is unclear if generating the template instantiations in question actually takes up significant time during compilation. As such, the best approach in the current situation is to remove the `extern template` declarations and let the compiler / Cling re-generate them as needed. FYI @devajithvs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16176
https://github.com/root-project/root/pull/16177:143,deployability,updat,updated,143,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:708,deployability,observ,observed,708,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:981,deployability,fail,fails,981,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1175,deployability,fail,failed,1175,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1586,deployability,updat,update,1586,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1,energy efficiency,core,core,1,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:470,energy efficiency,core,core,470,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:613,energy efficiency,core,core,613,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:265,integrability,pub,public,265,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:348,integrability,pub,public,348,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:887,interoperability,bind,bindings,887,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:887,modifiability,bind,bindings,887,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1278,performance,perform,performing,1278,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:981,reliability,fail,fails,981,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1175,reliability,fail,failed,1175,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:113,safety,test,tested,113,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:143,safety,updat,updated,143,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1586,safety,updat,update,1586,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:143,security,updat,updated,143,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:651,security,expos,exposes,651,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1586,security,updat,update,1586,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:113,testability,test,tested,113,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:708,testability,observ,observed,708,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/pull/16177:1278,usability,perform,performing,1278,"[core] No longer inline override `TViewPub` classes from `TList`; This PR fixes . - #15919. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python. import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())"". ```. Gives:. ```. Warning: failed offset calculation between TList and TViewPubFunctions. Type: TViewPubFunctions. ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python. print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()). ```. and the warning disappears:. ```. Type: TList. ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/16177
https://github.com/root-project/root/issues/16178:1800,availability,Operat,Operating,1800,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:517,deployability,fail,fail,517,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:635,deployability,contain,containing,635,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:901,deployability,resourc,resource,901,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:980,deployability,resourc,resource,980,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:999,deployability,resourc,resource,999,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1735,deployability,version,version,1735,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1756,deployability,Instal,Installation,1756,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:901,energy efficiency,resourc,resource,901,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:980,energy efficiency,resourc,resource,980,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:999,energy efficiency,resourc,resource,999,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:947,integrability,messag,message,947,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:967,integrability,messag,message,967,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1735,integrability,version,version,1735,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:523,interoperability,specif,specifically,523,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:947,interoperability,messag,message,947,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:967,interoperability,messag,message,967,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1735,modifiability,version,version,1735,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:9,performance,Memor,Memory,9,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:255,performance,memor,memory,255,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:310,performance,memor,memory,310,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:815,performance,memor,memory,815,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:901,performance,resourc,resource,901,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:980,performance,resourc,resource,980,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:999,performance,resourc,resource,999,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1679,performance,memor,memory-leak-when-looking-on-histograms,1679,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1915,performance,memor,memory-leak-when-looking-on-histograms,1915,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:517,reliability,fail,fail,517,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:508,safety,test,tests,508,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:848,safety,test,test,848,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:901,safety,resourc,resource,901,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:980,safety,resourc,resource,980,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:999,safety,resourc,resource,999,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:459,testability,simpl,simple,459,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:508,testability,test,tests,508,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:848,testability,test,test,848,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:901,testability,resourc,resource,901,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:980,testability,resourc,resource,980,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:999,testability,resourc,resource,999,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1520,testability,context,context,1520,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1840,testability,context,context,1840,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:9,usability,Memor,Memory,9,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:255,usability,memor,memory,255,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:310,usability,memor,memory,310,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:459,usability,simpl,simple,459,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:815,usability,memor,memory,815,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1600,usability,user,user,1600,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1679,usability,memor,memory-leak-when-looking-on-histograms,1679,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
https://github.com/root-project/root/issues/16178:1915,usability,memor,memory-leak-when-looking-on-histograms,1915,"[PyROOT] Memory leak in _TDirectoryFile_Get; ### Check duplicate issues. - [X] Checked for duplicates. ### Description. The pythonization of `TDirectoryFile` has a `_TDirectoryFile_Get` function (used to implement `Get()`) that may return a TObject whose memory is not owned by either c++ or python, causing a memory leak. I [attempted to fix the issue](https://github.com/root-project/root/compare/master...silverweed:root:py_tdirectoryfile_fix_leak) with a simple `ROOT.SetOwnership`, but that causes some tests to fail, specifically `pyunittests-pyroot-pyz-tdirectoryfile-attrsyntax-get`. ### Reproducer. 1. in python, open a TFile containing many different objects (e.g. histograms). 2. Get all those objects using `file.Get(name)` in a `for` loop (relinquishing their reference at every iteration). 3. see the memory increase forever. You can test the bug with the following script:. ```. import resource. import ROOT. def print_memory_usage(message):. print(f""{message:50} {resource.getrusage(resource.RUSAGE_SELF).ru_maxrss}""). print_memory_usage(""start""). histogram_names = open(""histogram_names.txt"").read().splitlines(). print_memory_usage(""read histogram names""). fn = ""NTUP_PHYSVAL.40023485._000001.pool.root.1"". with ROOT.TFile.Open(fn) as f:. print_memory_usage(""open ROOT file""). for i, histogram_name in enumerate(sorted(histogram_names)):. h = f.Get(histogram_name). if i % 1000 == 0:. print_memory_usage(f""read {i+1} histograms""). print_memory_usage(""read all histograms""). print_memory_usage(""outside context maneger (closing ROOT file)""). ```. The files used were provided by the user who reported the issue, [see the forum post](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429). ### ROOT version. master. ### Installation method. built from source. ### Operating system. Linux. ### Additional context. This bug was reported on [the forum](https://root-forum.cern.ch/t/memory-leak-when-looking-on-histograms/60429)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/16178
