id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/7805:1858,interoperability,specif,specify,1858,"ple:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2194,interoperability,share,share,2194,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:464,modifiability,paramet,parameters,464,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:515,modifiability,paramet,parameter,515,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:556,modifiability,paramet,parameter,556,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:614,modifiability,paramet,parameters,614,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:672,modifiability,paramet,parameter,672,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:774,modifiability,paramet,parameter,774,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:829,modifiability,paramet,parameters,829,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1175,modifiability,paramet,parameters,1175," could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1310,modifiability,paramet,parameter,1310,"t and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1321,modifiability,paramet,parameters,1321,"tive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1633,modifiability,Paramet,Parameters,1633,"lue (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1707,modifiability,Paramet,Parameters,1707,")` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template funct",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1827,modifiability,paramet,parameters,1827,"ameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary dow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1888,modifiability,paramet,parameters,1888,"x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2137,modifiability,paramet,parameter,2137,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2638,modifiability,paramet,parameters,2638,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2742,modifiability,version,version,2742,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2873,modifiability,version,version,2873,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1127,performance,error,error,1127,"e improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not res",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1127,safety,error,error,1127,"e improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not res",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:2040,security,modif,modify,2040,"9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root version: 6.25/01. Operating system: Ubuntu 20.04. How you obtained ROOT: built it from source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:29,usability,behavi,behaviour,29,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:306,usability,consist,consistent,306,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:321,usability,intuit,intuitive,321,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:720,usability,support,supports,720,"Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1127,usability,error,error,1127,"e improved. <!--. Explain what isn't as good as it could be and why. -->. I would like functioning of both `TFormula::SetParNames()` and `TFormula::SetParameters()` to be more consistent and intuitive. . #### Why `TFormula::SetParNames()` and `TFormula::SetParameters()` are inconsistent . `TFormula::SetParNames()` sets the names of parameters in order (1st argument sets name of 1st parameter, 2nd argument sets name of 2nd parameter and so on), and it resets the name of remaining parameters to default value (which is, `p[i-1]` for `ith` parameter). But, `TFormula::SetParNames()` only supports upto 11 arguments, and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not res",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/issues/7805:1744,usability,User,User,1744,", and only resets upto 11th parameter. This lead to inconsistencies when number of parameters are above 11. For example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]"");. TFormula g(""g"", ""x*[0]*[1]*[2]*[3]*[4]*[5]*[6]*[7]*[8]*[9]*[10]*[11]*[12]"");. f.SetParNames(""a"", ""b"", ""c"", ""d""); // works perfectly. g.SetParNames(""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", ""k"", ""l"", ""m""); // error. ```. and also, if we assign names to all parameters using `TFormula::SetParName(Int_t, const char*)` and then call `TFormula::SetParNames()`, then it will only reset upto 11th parameter, parameters after that will have their assigned names. Same issues exists with `TFormula::SetParameters()`. #### Why do I think `TFormula::SetParNames()` and `TFormula::SetParameters()` are unintuitive . Consider this example:. ```c++. TFormula f(""f"", ""x*[0]*[1]*[2]*[3]"");. f.SetParName(3, ""lastParameter"");. // Parameters names: p0, p1, p2, lastParameter. f.SetParNames(""a"", ""b"");. // Parameters names: a, b, p2, p3. ```. User generally would not expect that `TFormula::SetParNames()` will change name of parameters that he/she did not specify, and will thus expect parameters names at the end of this snippet to be: `a, b, p2, lastParameter`. Same issue exists with `TFormula::SetParameters()`. Thus, I would like to modify `TFormula::SetParNames()` and `TFormula::SetParameters()` such that they do not reset the parameter names and values respectively. . ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. Both `TFormula::SetParNames()` and `TFormula::SetParameters()` can be improved by replacing current implementation by variadic template function, this will remove the constraint of having fix number of arguments. It will also reduce the code duplication in both of these functions. It is also trivial to disable the resetting of parameters to their default values and names using variadic template function. ### Setup. <!--. 1. ROOT vers",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7805
https://github.com/root-project/root/pull/7806:499,deployability,observ,observed,499,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:57,energy efficiency,model,model,57,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:168,energy efficiency,model,model,168,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:127,integrability,messag,message,127,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:127,interoperability,messag,message,127,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:57,security,model,model,57,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:168,security,model,model,168,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:484,testability,context,context,484,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7806:499,testability,observ,observed,499,"[AArch64] Materialize FP constant in code for large code model [v6.24]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7806
https://github.com/root-project/root/pull/7807:499,deployability,observ,observed,499,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:57,energy efficiency,model,model,57,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:168,energy efficiency,model,model,168,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:127,integrability,messag,message,127,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:127,interoperability,messag,message,127,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:57,security,model,model,57,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:168,security,model,model,168,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:484,testability,context,context,484,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/pull/7807:499,testability,observ,observed,499,"[AArch64] Materialize FP constant in code for large code model [v6.20]; Backport of D99607, commit 6415f424bc. Original commit message:. ```. When using the large code model with FastISel (for example via. clang -O0 which adds the optnone attribute), FP constants could. still be materialized using adrp + ldr. Unconditionally enable. the existing path for MachO to materialize the constant in code. [...]. ```. See the discussion in https://github.com/cms-sw/cmssw/issues/31123. for context on the observed crashes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7807
https://github.com/root-project/root/issues/7808:367,deployability,version,version,367,"Bug in TKDE::Fill; Using TKDE::Fill on an empty TKDE does not work. See https://root-forum.cern.ch/t/using-tkde-fill/44315. Example code to reproduce it:. ```. auto kde = new TKDE(0, nullptr, 0, 5, """", 1); // or variations. for (unsigned int i = 0; i < 100; i++) { kde->Fill(gRandom->Gaus(2,1)); }. kde->GetValue(2); // return a nan. ```. The code works in 6.16 ROOT version, but not 6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7808
https://github.com/root-project/root/issues/7808:367,integrability,version,version,367,"Bug in TKDE::Fill; Using TKDE::Fill on an empty TKDE does not work. See https://root-forum.cern.ch/t/using-tkde-fill/44315. Example code to reproduce it:. ```. auto kde = new TKDE(0, nullptr, 0, 5, """", 1); // or variations. for (unsigned int i = 0; i < 100; i++) { kde->Fill(gRandom->Gaus(2,1)); }. kde->GetValue(2); // return a nan. ```. The code works in 6.16 ROOT version, but not 6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7808
https://github.com/root-project/root/issues/7808:367,modifiability,version,version,367,"Bug in TKDE::Fill; Using TKDE::Fill on an empty TKDE does not work. See https://root-forum.cern.ch/t/using-tkde-fill/44315. Example code to reproduce it:. ```. auto kde = new TKDE(0, nullptr, 0, 5, """", 1); // or variations. for (unsigned int i = 0; i < 100; i++) { kde->Fill(gRandom->Gaus(2,1)); }. kde->GetValue(2); // return a nan. ```. The code works in 6.16 ROOT version, but not 6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7808
https://github.com/root-project/root/issues/7808:53,reliability,doe,does,53,"Bug in TKDE::Fill; Using TKDE::Fill on an empty TKDE does not work. See https://root-forum.cern.ch/t/using-tkde-fill/44315. Example code to reproduce it:. ```. auto kde = new TKDE(0, nullptr, 0, 5, """", 1); // or variations. for (unsigned int i = 0; i < 100; i++) { kde->Fill(gRandom->Gaus(2,1)); }. kde->GetValue(2); // return a nan. ```. The code works in 6.16 ROOT version, but not 6.18",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7808
https://github.com/root-project/root/issues/7809:147,integrability,interfac,interfaces,147,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:629,integrability,interfac,interfaces,629,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:147,interoperability,interfac,interfaces,147,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:629,interoperability,interfac,interfaces,629,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:147,modifiability,interfac,interfaces,147,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:629,modifiability,interfac,interfaces,629,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:413,reliability,doe,does,413,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:448,reliability,doe,does,448,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/issues/7809:573,reliability,doe,does,573,"[RF] Constructors RooProdPdf and RooProduct; ### Explain what you would like to see improved. RooProdPdf and RooProduct have different constructor interfaces. In a workspace like this:. ```. RooWorkspace w;. w.factory(""RooGaussian::a(x[-10,10],0.,1.)""). w.factory(""RooGaussian::b(y[-10,10],0.,1.)""). ```. Now, consider this:. ```. w.factory(""RooProdPdf::p1({a,b})""). w.factory(""RooProduct::p2({x,y})""). ```. `p2` does what you think it would. `p1` does not. On the other hand:. ```. w.factory(""RooProdPdf::p3(a,b)""). w.factory(""RooProduct::p4(x,y)""). ```. `p3` works. `p4` does not. ### How it could be improved. The constructor interfaces of these classes should be harmonized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7809
https://github.com/root-project/root/pull/7810:70,energy efficiency,reduc,reduce,70,"[json] add json_fwd.hpp, use it in REveElement.hxx; Let significantly reduce size of includes used by EVE7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7810
https://github.com/root-project/root/pull/7810:56,security,sign,significantly,56,"[json] add json_fwd.hpp, use it in REveElement.hxx; Let significantly reduce size of includes used by EVE7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7810
https://github.com/root-project/root/pull/7811:137,interoperability,platform,platforms,137,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7811:43,safety,test,test,43,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7811:93,security,sign,significantly,93,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7811:43,testability,test,test,43,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7811:107,testability,simpl,simplify,107,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7811:107,usability,simpl,simplify,107,"Provide cmake for tutorials/webgui/qt5web, test it on Windows [skip-ci]; Use of cmake should significantly simplify porting on different platforms. Fix compilation and running issues on Windows, provide readme. Fix tiny issue with initialization of QWebEngine - it only can be used before creation of QApplication",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7811
https://github.com/root-project/root/pull/7812:670,availability,sli,slightly,670,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:412,deployability,fail,fail,412,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:632,deployability,fail,failing,632,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:789,energy efficiency,current,current,789,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:749,interoperability,specif,specified,749,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:866,interoperability,specif,specified,866,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:46,modifiability,paramet,parameter,46,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:285,modifiability,paramet,parameters,285,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:356,modifiability,maintain,maintained,356,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:759,modifiability,paramet,parameters,759,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:842,modifiability,paramet,parameters,842,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:412,reliability,fail,fail,412,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:632,reliability,fail,failing,632,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:670,reliability,sli,slightly,670,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:356,safety,maintain,maintained,356,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:402,safety,test,test,402,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:640,safety,test,tests,640,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:679,security,modif,modify,679,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:402,testability,test,test,402,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:640,testability,test,tests,640,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:24,usability,behavi,behaviour,24,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:327,usability,behavi,behaviour,327,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:686,usability,behavi,behaviour,686,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:797,usability,behavi,behaviour,797,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7812:1009,usability,intuit,intuitive,1009,"[math] Fix inconsistent behaviour of TFormula parameter functions; This PR aims to fix the problem of inconsistency in `TFormula::SetParNames()` and `TFormula::SetParameters()` functions as described in #7805. I have added warning if more values are provided than the actual number of parameters of `TFormula` object, original behaviour of the function is maintained apart from the added warning. Some test will fail due to the added warning, please tell if I should remove the warning or resolve the root cause of the warnings ( For instance, `TF1` using `TFormula::SetParameters()` and always passing 11 arguments is one cause of failing tests) . I would also like to slightly modify behaviour of these functions such that value and names of only specified parameters should be changed, current behaviour is to reset the value and names of parameters which aren't specified, but this change may negatively impact programs using these functions. But still, I think this change will make these functions more intuitive. Please tell if I should add this change. . This PR fixes #7805",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7812
https://github.com/root-project/root/pull/7813:0,deployability,Updat,Update,0,"Update qt5web in 6.24, fix small issue in QWebEngine initialization [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7813
https://github.com/root-project/root/pull/7813:0,safety,Updat,Update,0,"Update qt5web in 6.24, fix small issue in QWebEngine initialization [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7813
https://github.com/root-project/root/pull/7813:0,security,Updat,Update,0,"Update qt5web in 6.24, fix small issue in QWebEngine initialization [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7813
https://github.com/root-project/root/pull/7814:275,integrability,messag,message,275,"Backport in 6.24 of Fix the Warning of evaluating RooAddPdf without a normalization set; Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:. - Call getVal in constructor of RooRealIntegral (not sure why this is needed). - printValue of any RooAbsPdf, where getVal(0) is also called. - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:613,integrability,messag,messages,613,"Backport in 6.24 of Fix the Warning of evaluating RooAddPdf without a normalization set; Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:. - Call getVal in constructor of RooRealIntegral (not sure why this is needed). - printValue of any RooAbsPdf, where getVal(0) is also called. - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:275,interoperability,messag,message,275,"Backport in 6.24 of Fix the Warning of evaluating RooAddPdf without a normalization set; Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:. - Call getVal in constructor of RooRealIntegral (not sure why this is needed). - printValue of any RooAbsPdf, where getVal(0) is also called. - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:613,interoperability,messag,messages,613,"Backport in 6.24 of Fix the Warning of evaluating RooAddPdf without a normalization set; Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:. - Call getVal in constructor of RooRealIntegral (not sure why this is needed). - printValue of any RooAbsPdf, where getVal(0) is also called. - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7814:581,safety,avoid,avoids,581,"Backport in 6.24 of Fix the Warning of evaluating RooAddPdf without a normalization set; Backport of #7750. Add an implementation of getValV for RooAddPdf to use stored normalization set by default when the pdf is evaluated without passing a set. Disable printing of warning message of evaluating un-normalized RooAddPdf when doing:. - Call getVal in constructor of RooRealIntegral (not sure why this is needed). - printValue of any RooAbsPdf, where getVal(0) is also called. - RooAbsArg::graphVizTree where also getVal(0) is called when exporting the tree in a graphVizTree. This avoids having un-needed warning messages when printing or examing RooWorkspaces or pdf's",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7814
https://github.com/root-project/root/pull/7816:61,integrability,Event,Events,61,"[RF] Check if ranges are not overlapping in multi-range fit; Events are double counted if one accidentally defines overlapping ranges. and uses them in a multi-range fit. This happened for example in Jira. issue ROOT-9548 where the whole dataset was double counted, leading to. the parameter uncertainties being underestimated by a factor of sqrt(2). . That situation should be avoided. This commit introduces a check for. overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7816:282,modifiability,paramet,parameter,282,"[RF] Check if ranges are not overlapping in multi-range fit; Events are double counted if one accidentally defines overlapping ranges. and uses them in a multi-range fit. This happened for example in Jira. issue ROOT-9548 where the whole dataset was double counted, leading to. the parameter uncertainties being underestimated by a factor of sqrt(2). . That situation should be avoided. This commit introduces a check for. overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7816:94,safety,accid,accidentally,94,"[RF] Check if ranges are not overlapping in multi-range fit; Events are double counted if one accidentally defines overlapping ranges. and uses them in a multi-range fit. This happened for example in Jira. issue ROOT-9548 where the whole dataset was double counted, leading to. the parameter uncertainties being underestimated by a factor of sqrt(2). . That situation should be avoided. This commit introduces a check for. overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7816:378,safety,avoid,avoided,378,"[RF] Check if ranges are not overlapping in multi-range fit; Events are double counted if one accidentally defines overlapping ranges. and uses them in a multi-range fit. This happened for example in Jira. issue ROOT-9548 where the whole dataset was double counted, leading to. the parameter uncertainties being underestimated by a factor of sqrt(2). . That situation should be avoided. This commit introduces a check for. overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7816:592,safety,avoid,avoided,592,"[RF] Check if ranges are not overlapping in multi-range fit; Events are double counted if one accidentally defines overlapping ranges. and uses them in a multi-range fit. This happened for example in Jira. issue ROOT-9548 where the whole dataset was double counted, leading to. the parameter uncertainties being underestimated by a factor of sqrt(2). . That situation should be avoided. This commit introduces a check for. overlapping ranges before the multi-range likelihood is created. Confusing situations such as reported in [ROOT-9548](https://sft.its.cern.ch/jira/browse/ROOT-9548) are avoided now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7816
https://github.com/root-project/root/pull/7817:236,availability,error,error,236,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:0,deployability,Updat,Update,0,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:432,deployability,version,version,432,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1137,deployability,version,version,1137,"an be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3425,deployability,version,version,3425,"rsion = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9050,deployability,version,version,9050,"ader:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1123,energy efficiency,current,current,1123,"(from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1229,energy efficiency,core,core,1229,"-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_version,. fUUID,. ) = struct.unpack("">4siiiiiiiBiiiH16s"", file.read(63)). print(f""""""The ROOT fil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:432,integrability,version,version,432,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:974,integrability,sub,subdirectory,974,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1078,integrability,sub,subdirectory,1078,"d more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fU",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1137,integrability,version,version,1137,"an be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1493,integrability,sub,subdir,1493,"e missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_version,. fUUID,. ) = struct.unpack("">4siiiiiiiBiiiH16s"", file.read(63)). print(f""""""The ROOT file header:. {magic = }. {fVersion = }. {fBEGIN = }. {fEND = }. {fSeekFree = }. {fNbytesFree = }. {nfree = }. {fNbytesName = }. {fUnits = }. {fCompress = }. {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1512,integrability,sub,subdir,1512,"s of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_version,. fUUID,. ) = struct.unpack("">4siiiiiiiBiiiH16s"", file.read(63)). print(f""""""The ROOT file header:. {magic = }. {fVersion = }. {fBEGIN = }. {fEND = }. {fSeekFree = }. {fNbytesFree = }. {nfree = }. {fNbytesName = }. {fUnits = }. {fCompress = }. {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3057,integrability,sub,subdirectories,3057,"e,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_version,. fUUID,. ) = struct.unpack("">4siiiiiiiBiiiH16s"", file.read(63)). print(f""""""The ROOT file header:. {magic = }. {fVersion = }. {fBEGIN = }. {fEND = }. {fSeekFree = }. {fNbytesFree = }. {nfree = }. {fNbytesName = }. {fUnits = }. {fCompress = }. {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3425,integrability,version,version,3425,"rsion = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:5338,integrability,sub,subdirectory,5338," {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". And now the listing itself starts with a number of keys:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Now we're at the end of the list of keys. {list_of_keys_fSeekKey + list_of_keys_fNbytes = } {file.tell() = }. Let's follow the last key, which goes to a subdirectory:. {file.seek(fSeekKey) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Just like the root directory, there's a TKey before the TDirectory header:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory.""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekPare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:6713,integrability,sub,subdirectories,6713,"r = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory.""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:6946,integrability,sub,subdirectory,6946,"(. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Now we're at the end of the list of keys. {list_of_keys_fS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:7381,integrability,sub,subdirectory,7381,"uct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Now we're at the end of the list of keys. {list_of_keys_fSeekKey + list_of_keys_fNbytes = } {file.tell() = }""""""). ```. Here is the output. ```. The ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:7614,integrability,sub,subdirectory,7614,"y promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Now we're at the end of the list of keys. {list_of_keys_fSeekKey + list_of_keys_fNbytes = } {file.tell() = }""""""). ```. Here is the output. ```. The ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbyt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:8889,integrability,sub,subdirectories,8889,"w we're at the end of the list of keys. {list_of_keys_fSeekKey + list_of_keys_fNbytes = } {file.tell() = }""""""). ```. Here is the output. ```. The ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9050,integrability,version,version,9050,"ader:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:10640,integrability,sub,subdir,10640,"s = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now the listing itself starts with a number of keys:. num_keys = 2. TKey for an object in this directory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObjString'. fName = b'one'. fTitle = b'Collectable string class'. TKey for an object in this directory:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 948 file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:10660,integrability,sub,subdir,10660,"l() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now the listing itself starts with a number of keys:. num_keys = 2. TKey for an object in this directory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObjString'. fName = b'one'. fTitle = b'Collectable string class'. TKey for an object in this directory:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 948 file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:10824,integrability,sub,subdirectory,10824,"166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now the listing itself starts with a number of keys:. num_keys = 2. TKey for an object in this directory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObjString'. fName = b'one'. fTitle = b'Collectable string class'. TKey for an object in this directory:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 948 file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we'v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:11143,integrability,sub,subdir,11143,"rectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObjString'. fName = b'one'. fTitle = b'Collectable string class'. TKey for an object in this directory:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 948 file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:11163,integrability,sub,subdir,11163,"86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObjString'. fName = b'one'. fTitle = b'Collectable string class'. TKey for an object in this directory:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 948 file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:11959,integrability,sub,subdirectories,11959,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:12044,integrability,sub,subdirectory,12044,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:12268,integrability,sub,subdir,12268,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:12288,integrability,sub,subdir,12288,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:12330,integrability,sub,subdirectory,12330,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:12386,integrability,sub,subdirectory,12386,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:169,interoperability,specif,specification,169,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:704,interoperability,format,format,704,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:432,modifiability,version,version,432,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1137,modifiability,version,version,1137,"an be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_versio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3425,modifiability,version,version,3425,"rsion = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9050,modifiability,version,version,9050,"ader:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:236,performance,error,error,236,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3368,reliability,doe,doesn,3368,"fCompress = }. {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3413,reliability,doe,does,3413,"= }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:8993,reliability,doe,doesn,8993,"() = }""""""). ```. Here is the output. ```. The ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName =",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9038,reliability,doe,does,9038,"e ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:0,safety,Updat,Update,0,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:236,safety,error,error,236,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:6683,safety,compl,completeness,6683,"e = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory.""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:11929,safety,compl,completeness,11929,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:0,security,Updat,Update,0,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:401,security,Modif,Modified,401,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:606,security,modif,modifies,606,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:877,security,Modif,Modified,877,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3381,security,modif,modified,3381," {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassNam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:6683,security,compl,completeness,6683,"e = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory.""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. For completeness, let's go to the subdirectories list of keys:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the subdirectory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". Here's the number of keys in the subdirectory:. {num_keys = }""""""). for _ in range(num_keys):. (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". TKey for an object in this subdirectory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9006,security,modif,modified,9006,"`. Here is the output. ```. The ROOT file header:. magic = b'root'. fVersion = 62206. fBEGIN = 100. fEND = 1124. fSeekFree = 1069. fNbytesFree = 55. nfree = 1. fNbytesName = 58. fUnits = 4. fCompress = 101. fSeekInfo = 501. fNbytesInfo = 281. fUUID_version = 1. uuid.UUID(bytes=fUUID) = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fNa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:11929,security,compl,completeness,11929,"file.tell() = 948. Let's follow the last key, which goes to a subdirectory:. file.seek(fSeekKey) = 304. Just like the root directory, there's a TKey before the TDirectory header:. fNbytes = 111. fVersion = 4. fObjlen = 60. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 304. fSeekPdir = 100. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. But now we don't have an extra fName/fTitle from TNamed. That was only in the root directory. The TDirectory header follows. Other than lacking the extra fName/fTitle, it's just like the root directory:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 121. fNbytesName = 51. fSeekDir = 304. fSeekParent = 100. fSeekKeys = 948. uuid_version = 1. uuid = UUID('b85a2f9a-9983-11eb-8a1a-d201a8c0beef'). Including the extra space to grow for 64-bit fSeekDir/fSeekParent/fSeekKeys:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 415 and file.tell() = 415. For completeness, let's go to the subdirectories list of keys:. file.seek(fSeekKeys) = 948. Here's the TKey before the subdirectory listing:. fNbytes = 121. fVersion = 4. fObjlen = 70. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 51. fCycle = 1. fSeekKey = 948. fSeekPdir = 304. fClassName = b'TDirectory'. fName = b'subdir'. fTitle = b'subdir'. Here's the number of keys in the subdirectory:. num_keys = 1. TKey for an object in this subdirectory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 415. fSeekPdir = 304. fClassName = b'TObjString'. fName = b'two'. fTitle = b'Collectable string class'. Now we're at the end of the list of keys. list_of_keys_fSeekKey + list_of_keys_fNbytes = 1069 file.tell() = 1069. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:28,usability,document,documentation,28,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:236,usability,error,error,236,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:506,usability,indicat,indicators,506,"Update the ROOT file layout documentation with a correction, ROOT 3 -> 6 changes, and more detail.; The io/doc/TFile directory (from 2009!) can be used as a descriptive specification, but there are a few points to fix:. * an off-by-one error in the freesegments.txt file (description of `fLast`). * a likely change in the interpretation of the first two bytes of a TDirectory header, from two bools (`Modified` and `Writable`) to a version (`TDirectory::Class_Version()`, which is now `5`). * some missing indicators of how 32-bit values expand into 64-bit values. This PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:1566,usability,Close,Close,1566," PR only addresses the files that it modifies: header.txt, TFile.txt, TDirectory.txt, and freesegments.txt. In cases where I think the format might have changed, I left the original text in the file. If I'm wrong about that, the original text can be deleted. To demonstrate the way TDirectory works now (no `Modified` and `Writable` booleans), the following script creates a file with a few objects and a subdirectory, then interprets its raw bytes to show that the first two bytes of both root directory and subdirectory are `5`, [in agreement with the current class version](https://github.com/root-project/root/blob/df70fffe7e759f35e281f7e52dc81297c0458bfb/core/base/inc/TDirectory.h#L278). Here's the script (Python 3.6+), and below it is sample output. ```python. import datetime. import struct. import uuid. import ROOT. file = ROOT.TFile(""sample.root"", ""recreate""). x = ROOT.TObjString(""one""). x.Write(). file.mkdir(""subdir""). file.cd(""subdir""). y = ROOT.TObjString(""two""). y.Write(). file.Close(). def datime(number):. return datetime.datetime(. ((number & 0b11111100000000000000000000000000) >> 26) + 1995,. ((number & 0b00000011110000000000000000000000) >> 22),. ((number & 0b00000000001111100000000000000000) >> 17),. ((number & 0b00000000000000011111000000000000) >> 12),. ((number & 0b00000000000000000000111111000000) >> 6),. ((number & 0b00000000000000000000000000111111)),. ). file = open(""sample.root"", ""rb""). (. magic,. fVersion,. fBEGIN,. fEND,. fSeekFree,. fNbytesFree,. nfree,. fNbytesName,. fUnits,. fCompress,. fSeekInfo,. fNbytesInfo,. fUUID_version,. fUUID,. ) = struct.unpack("">4siiiiiiiBiiiH16s"", file.read(63)). print(f""""""The ROOT file header:. {magic = }. {fVersion = }. {fBEGIN = }. {fEND = }. {fSeekFree = }. {fNbytesFree = }. {nfree = }. {fNbytesName = }. {fUnits = }. {fCompress = }. {fSeekInfo = }. {fNbytesInfo = }. {fUUID_version = }. {uuid.UUID(bytes=fUUID) = }. The rest of the header up to fBEGIN:. {file.read(fBEGIN - 63) = }. {file.tell() = }""""""). (. fNbytes,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:3626,usability,document,documentation,3626,"SeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". The TKey before the root directory:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). print(f"""""". Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = {file.read(ord(file.read(1)))}. fTitle (again) = {file.read(ord(file.read(1)))}""""""). (. fVersion,. fDatimeC,. fDatimeM,. fNbytesKeys,. fNbytesName,. fSeekDir,. fSeekParent,. fSeekKeys,. ) = struct.unpack("">hIIiiiii"", file.read(30)). print(f"""""". The TDirectory header doesn't have modified/writable bools, but it does have a version:. {fVersion = }. {datime(fDatimeC) = }. {datime(fDatimeM) = }. {fNbytesKeys = }. {fNbytesName = }. {fSeekDir = }. {fSeekParent = }. {fSeekKeys = }. and it also has a TUUID, not in the original documentation:. uuid_version = {struct.unpack("">H"", file.read(2))[0]}. uuid = {uuid.UUID(bytes=file.read(16))!r}. It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = {file.read(12)}. Now we've reached the fNbytes that the TKey promised:. {fSeekKey + fNbytes = } and {file.tell() = }. From here, we have to follow fSeekKeys to find the directory listing:. {file.seek(fSeekKeys) = }""""""). (. fNbytes,. fVersion,. fObjlen,. fDatime,. fKeylen,. fCycle,. fSeekKey,. fSeekPdir,. ) = struct.unpack("">ihiIhhii"", file.read(26)). print(f"""""". Here's the TKey before the directory listing:. {fNbytes = }. {fVersion = }. {fObjlen = }. {datime(fDatime) = }. {fKeylen = }. {fCycle = }. {fSeekKey = }. {fSeekPdir = }. fClassName = {file.read(ord(file.read(1)))}. fName = {file.read(ord(file.read(1)))}. fTitle = {file.read(ord(file.read(1)))}""""""). list_of_keys_fNbytes, list_of_keys_fSeekKey = fNbytes, fSeekKey. num_keys = struct.unpack("">I"", file.read(4))[0]. print(f"""""". A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7817:9330,usability,document,documentation,9330,"ef'). The rest of the header up to fBEGIN:. file.read(fBEGIN - 63) = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. file.tell() = 100. The TKey before the root directory:. fNbytes = 118. fVersion = 4. fObjlen = 73. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 100. fSeekPdir = 0. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. Then the root directory has two TNamed strings that subdirectories don't have:. fName (again) = b'sample.root'. fTitle (again) = b''. The TDirectory header doesn't have modified/writable bools, but it does have a version:. fVersion = 5. datime(fDatimeC) = datetime.datetime(2021, 4, 9, 17, 34, 17). datime(fDatimeM) = datetime.datetime(2021, 4, 9, 17, 34, 17). fNbytesKeys = 166. fNbytesName = 58. fSeekDir = 100. fSeekParent = 0. fSeekKeys = 782. and it also has a TUUID, not in the original documentation:. uuid_version = 1. uuid = UUID('b856ad48-9983-11eb-8a1a-d201a8c0beef'). It also has some space to grow, in case fSeekDir/fSeekParent/fSeekKeys are 64-bit:. 12 extra bytes = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'. Now we've reached the fNbytes that the TKey promised:. fSeekKey + fNbytes = 218 and file.tell() = 218. From here, we have to follow fSeekKeys to find the directory listing:. file.seek(fSeekKeys) = 782. Here's the TKey before the directory listing:. fNbytes = 166. fVersion = 4. fObjlen = 121. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 45. fCycle = 1. fSeekKey = 782. fSeekPdir = 100. fClassName = b'TFile'. fName = b'sample.root'. fTitle = b''. And now the listing itself starts with a number of keys:. num_keys = 2. TKey for an object in this directory:. fNbytes = 86. fVersion = 4. fObjlen = 20. datime(fDatime) = datetime.datetime(2021, 4, 9, 17, 34, 17). fKeylen = 66. fCycle = 1. fSeekKey = 218. fSeekPdir = 100. fClassName = b'TObj",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7817
https://github.com/root-project/root/pull/7818:79,security,hash,hash,79,"[RF] Replace RooHashTable with std::unordered_map in RooLinkedList; The custom hash table implementation RooHashTable is only used in. RooLinkedList for a transient data member. By using std::unordered_map. instead, RooHashTable gets obsolete and could be deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7818
https://github.com/root-project/root/pull/7818:72,usability,custom,custom,72,"[RF] Replace RooHashTable with std::unordered_map in RooLinkedList; The custom hash table implementation RooHashTable is only used in. RooLinkedList for a transient data member. By using std::unordered_map. instead, RooHashTable gets obsolete and could be deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7818
https://github.com/root-project/root/pull/7819:94,safety,compl,complicated,94,"[RF] Remove usage of RooNameSet and use helper functions instead; The RooNameSet class is too complicated considering that it fulfills a. rather simple purpose, which is to serialize the names of objects in a. RooArgSet to a string that can be used to select objects from other. RooArgSets. This commit proposes to replace the RooNameSet class by new functions in. the RooHelpers namespace: `getColonSeparatedNameString` and. `selectFromArgSet`. These functions make use of `std::string` to be much. less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/pull/7819:94,security,compl,complicated,94,"[RF] Remove usage of RooNameSet and use helper functions instead; The RooNameSet class is too complicated considering that it fulfills a. rather simple purpose, which is to serialize the names of objects in a. RooArgSet to a string that can be used to select objects from other. RooArgSets. This commit proposes to replace the RooNameSet class by new functions in. the RooHelpers namespace: `getColonSeparatedNameString` and. `selectFromArgSet`. These functions make use of `std::string` to be much. less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/pull/7819:145,testability,simpl,simple,145,"[RF] Remove usage of RooNameSet and use helper functions instead; The RooNameSet class is too complicated considering that it fulfills a. rather simple purpose, which is to serialize the names of objects in a. RooArgSet to a string that can be used to select objects from other. RooArgSets. This commit proposes to replace the RooNameSet class by new functions in. the RooHelpers namespace: `getColonSeparatedNameString` and. `selectFromArgSet`. These functions make use of `std::string` to be much. less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/pull/7819:40,usability,help,helper,40,"[RF] Remove usage of RooNameSet and use helper functions instead; The RooNameSet class is too complicated considering that it fulfills a. rather simple purpose, which is to serialize the names of objects in a. RooArgSet to a string that can be used to select objects from other. RooArgSets. This commit proposes to replace the RooNameSet class by new functions in. the RooHelpers namespace: `getColonSeparatedNameString` and. `selectFromArgSet`. These functions make use of `std::string` to be much. less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/pull/7819:145,usability,simpl,simple,145,"[RF] Remove usage of RooNameSet and use helper functions instead; The RooNameSet class is too complicated considering that it fulfills a. rather simple purpose, which is to serialize the names of objects in a. RooArgSet to a string that can be used to select objects from other. RooArgSets. This commit proposes to replace the RooNameSet class by new functions in. the RooHelpers namespace: `getColonSeparatedNameString` and. `selectFromArgSet`. These functions make use of `std::string` to be much. less verbose than the original RooNameSet class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7819
https://github.com/root-project/root/issues/7821:396,modifiability,paramet,parameter,396,"[RF] Correlation plot from RooFitResult; ### Is your feature request related to a problem? Please describe. When users fit something, they always have read off correlations from the terminal after printing the fit result. ### Describe the solution you'd like. `RooFitResult::createCorrelationPlot()` or similar. Create a 2D histogram, fill it with the correlation values. Label the axes with the parameter names, and plot them using coloured bins and text. Or just create the histogram and users can plot it themselves. You can take inspiration from the TMVA Gui. ### Describe alternatives you've considered. Maybe one can plot the TMatrix that RooFitResult can produce, but I didn't investigate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7821
https://github.com/root-project/root/issues/7821:113,usability,user,users,113,"[RF] Correlation plot from RooFitResult; ### Is your feature request related to a problem? Please describe. When users fit something, they always have read off correlations from the terminal after printing the fit result. ### Describe the solution you'd like. `RooFitResult::createCorrelationPlot()` or similar. Create a 2D histogram, fill it with the correlation values. Label the axes with the parameter names, and plot them using coloured bins and text. Or just create the histogram and users can plot it themselves. You can take inspiration from the TMVA Gui. ### Describe alternatives you've considered. Maybe one can plot the TMatrix that RooFitResult can produce, but I didn't investigate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7821
https://github.com/root-project/root/issues/7821:490,usability,user,users,490,"[RF] Correlation plot from RooFitResult; ### Is your feature request related to a problem? Please describe. When users fit something, they always have read off correlations from the terminal after printing the fit result. ### Describe the solution you'd like. `RooFitResult::createCorrelationPlot()` or similar. Create a 2D histogram, fill it with the correlation values. Label the axes with the parameter names, and plot them using coloured bins and text. Or just create the histogram and users can plot it themselves. You can take inspiration from the TMVA Gui. ### Describe alternatives you've considered. Maybe one can plot the TMatrix that RooFitResult can produce, but I didn't investigate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7821
https://github.com/root-project/root/issues/7822:228,deployability,observ,observable,228,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:316,deployability,observ,observables,316,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:433,deployability,observ,observable,433,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:583,deployability,version,version,583,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:364,energy efficiency,current,current,364,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:583,integrability,version,version,583,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:519,modifiability,inherit,inheritance,519,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:583,modifiability,version,version,583,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:136,performance,content,contents,136,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:387,reliability,doe,does,387,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:228,testability,observ,observable,228,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:316,testability,observ,observables,316,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7822:433,testability,observ,observable,433,"[RF] RooDataHist::printDataHistogram should be renamed and moved; `RooDataHist::printDataHistogram` was recently added to print the bin contents of a `RooDataHist`. While very useful, this function needs several changes:. - The observable should not be passed as an argument. Rather, the histogram already knows its observables and could behave accordingly. - The current implementation does not work for histograms with more than 1 observable. - The function should be renamed to `printContents` and moved upwards the inheritance hierarchy to instead be declared in `RooAbsData`. A version for `RooDataSet` should be implemented as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7822
https://github.com/root-project/root/issues/7823:263,energy efficiency,current,currently,263,"[RF] RooStatsUtils::MakeCleanWorkspace; After a discussion with Wouter, this function could use a few minor improvements:. - It should be renamed to `makeReducedWorkspace`. - A flag should be added to also copy over datasets, which should be true by default (not currently possible).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7823
https://github.com/root-project/root/issues/7825:324,interoperability,compatib,compatibility,324,"[RF] RooAddition and RooRealSumFunc largely duplicate each other; The functionalities implemented in `RooAddition` and `RooRealSumFunc` are extremely similar. While some features are exclusive to one or the other, it should be possible to unify both into a common class, the main complication here being to ensure backwards compatibility to the degree the ROOT team finds neccessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7825
https://github.com/root-project/root/issues/7825:280,safety,compl,complication,280,"[RF] RooAddition and RooRealSumFunc largely duplicate each other; The functionalities implemented in `RooAddition` and `RooRealSumFunc` are extremely similar. While some features are exclusive to one or the other, it should be possible to unify both into a common class, the main complication here being to ensure backwards compatibility to the degree the ROOT team finds neccessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7825
https://github.com/root-project/root/issues/7825:280,security,compl,complication,280,"[RF] RooAddition and RooRealSumFunc largely duplicate each other; The functionalities implemented in `RooAddition` and `RooRealSumFunc` are extremely similar. While some features are exclusive to one or the other, it should be possible to unify both into a common class, the main complication here being to ensure backwards compatibility to the degree the ROOT team finds neccessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7825
https://github.com/root-project/root/issues/7825:361,security,team,team,361,"[RF] RooAddition and RooRealSumFunc largely duplicate each other; The functionalities implemented in `RooAddition` and `RooRealSumFunc` are extremely similar. While some features are exclusive to one or the other, it should be possible to unify both into a common class, the main complication here being to ensure backwards compatibility to the degree the ROOT team finds neccessary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7825
https://github.com/root-project/root/pull/7826:38,availability,sli,slipped,38,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:89,deployability,API,API,89,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:93,deployability,version,versioning,93,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:89,integrability,API,API,89,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:93,integrability,version,versioning,93,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:89,interoperability,API,API,89,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:93,modifiability,version,versioning,93,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:38,reliability,sli,slipped,38,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:56,safety,review,review,56,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7826:56,testability,review,review,56,[DF] Remove unused struct; It somehow slipped past code review. It was introduced for an API versioning system that never materialized in the end.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7826
https://github.com/root-project/root/pull/7827:30,availability,error,error,30,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:202,availability,error,errors,202,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:30,performance,error,error,30,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:202,performance,error,errors,202,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:30,safety,error,error,30,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:82,safety,test,test,82,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:202,safety,error,errors,202,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:345,safety,except,exception,345,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:395,safety,detect,detected,395,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:395,security,detect,detected,395,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:82,testability,test,test,82,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:30,usability,error,error,30,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/pull/7827:202,usability,error,errors,202,"[RF] Make RooAbsTestStatistic error out if multiple ranges are passed; The RooFit test statistic classes give wrong results if they are. constructed from multiple comma-separated ranges. This can cause errors,. such as the one reported in Jira issue [ROOT-10038](https://sft.its.cern.ch/jira/browse/ROOT-10038). This commit suggests to throw an exception if multiple comma-separated. ranges are detected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7827
https://github.com/root-project/root/issues/7828:189,deployability,API,API,189,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:445,deployability,API,API,445,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:521,deployability,automat,automatically,521,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:182,integrability,pub,public,182,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:189,integrability,API,API,189,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:445,integrability,API,API,445,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:449,integrability,sub,subject,449,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:189,interoperability,API,API,189,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:445,interoperability,API,API,445,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:396,safety,Reme,Remember,396,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:82,security,ident,identifier,82,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:168,security,access,accessible,168,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:417,security,ident,identifier,417,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:141,testability,simpl,simple,141,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:521,testability,automat,automatically,521,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:141,usability,simpl,simple,141,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7828:484,usability,interact,interactive,484,"[DF] Introduce GetDataSourceInfo and add info to Describe; The idea is to have an identifier that describes the used datasource (or TTree or simple DF), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7828
https://github.com/root-project/root/issues/7829:190,deployability,API,API,190,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:446,deployability,API,API,446,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:522,deployability,automat,automatically,522,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:183,integrability,pub,public,183,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:190,integrability,API,API,190,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:446,integrability,API,API,446,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:450,integrability,sub,subject,450,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:190,interoperability,API,API,190,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:446,interoperability,API,API,446,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:397,safety,Reme,Remember,397,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:79,security,ident,identifier,79,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:169,security,access,accessible,169,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:418,security,ident,identifier,418,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:522,testability,automat,automatically,522,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/issues/7829:485,usability,interact,interactive,485,"[DF] Introduce GetDatasetInfo and add info to Describe; The idea is to have an identifier that describes the used dataset (name of the TTree or similar), make this info accessible as public API and also add it to `Describe`. See the discussion here:. https://github.com/root-project/root/issues/7561#issuecomment-817629082. https://github.com/root-project/root/issues/7561#issuecomment-817717882. Remember to make the identifier returned by this API subject to change because it's for interactive use and not to be parsed automatically.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7829
https://github.com/root-project/root/pull/7832:68,deployability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,integrability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,interoperability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,modifiability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,reliability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,security,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7832:68,testability,integr,integration,68,"[DF] Add GetDataSourceInfo function; Fixes #7828 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7832
https://github.com/root-project/root/pull/7833:65,deployability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,integrability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,interoperability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,modifiability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,reliability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,security,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7833:65,testability,integr,integration,65,"[DF] Add GetDataSetInfo function; Fixes #7829 partially, missing integration into Describe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7833
https://github.com/root-project/root/pull/7834:84,interoperability,incompatib,incompatible,84,Remove `TArray?::AddAt()`; Supersedes #7824 which would have been a silent backward incompatible change. @ktf @jgrosseo. (This will *not* go into 6.24.),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7834
https://github.com/root-project/root/pull/7835:0,deployability,Updat,Update,0,Update location of stressIOPlugin eos files; Needs to be backported +/- everywhere,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7835
https://github.com/root-project/root/pull/7835:0,safety,Updat,Update,0,Update location of stressIOPlugin eos files; Needs to be backported +/- everywhere,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7835
https://github.com/root-project/root/pull/7835:0,security,Updat,Update,0,Update location of stressIOPlugin eos files; Needs to be backported +/- everywhere,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7835
https://github.com/root-project/root/pull/7836:33,integrability,coupl,couple,33,Fix typos in DF tutorials; Fix a couple of typos in the dataframe tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7836
https://github.com/root-project/root/pull/7836:33,modifiability,coupl,couple,33,Fix typos in DF tutorials; Fix a couple of typos in the dataframe tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7836
https://github.com/root-project/root/pull/7836:33,testability,coupl,couple,33,Fix typos in DF tutorials; Fix a couple of typos in the dataframe tutorials.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7836
https://github.com/root-project/root/pull/7837:163,energy efficiency,current,currently,163,"Revert ""Fix the action PushDataCache for TClonesArray.""; This reverts commit 3480394c02a6335d271f95fcf160274811091155. The change is necessary for Issue #7754 but currently has severe. negative side effect (crash in cases not using TClonesArray)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7837
https://github.com/root-project/root/pull/7838:369,integrability,Schema,Schema,369,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7838:690,performance,cach,caching,690,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7838:855,performance,cach,caching,855,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7838:769,usability,navigat,navigator,769,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7838:937,usability,navigat,navigator,937,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7838:1081,usability,navigat,navigator,1081,"[RF] Speedup histfactory ParamHistFunc; The ParamHistFunc in the histfactory has a persistent `std::map<int,int>`. data member. It can be replaced with a `std::vector<int>` where the. previous key is the index in the vector. This is much faster. As the igprof reports below show, it is even faster to calculate the bin indices on the fly, which is proposed in this PR. Schema evolution is not a problem here. With this commit, the data. member is made non-persistent because it can be computed from other. persistent data members. This PR was benchmarked with [an example from the ROOT forum](https://root-forum.cern.ch/t/bias-in-histfactory-fit/44330/7):. * igprof report [before this PR (caching with `std::map`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_old). * igprof report [after the first commit of the PR (caching with `std::vector`)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new). * igprof report [after the PR (calculating on the fly)](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). The difference is about a 50 % speedup of `ParamHistFunc::evaluate()` and a 10 % speedup of the full example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7838
https://github.com/root-project/root/pull/7839:58,availability,ping,ping,58,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:521,availability,ping,ping,521,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:654,deployability,automat,automatically,654,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:142,energy efficiency,load,loaded,142,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:68,integrability,Batch,Batch,68,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:399,integrability,batch,batch,399,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:577,interoperability,specif,specified,577,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:634,modifiability,pac,packets,634,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:68,performance,Batch,Batch,68,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:142,performance,load,loaded,142,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:399,performance,batch,batch,399,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:700,safety,test,testings,700,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:710,safety,Test,Testes,710,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:654,testability,automat,automatically,654,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:700,testability,test,testings,700,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:710,testability,Test,Testes,710,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:98,usability,support,supported,98,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7839:455,usability,clear,clearly,455,"[webgui] Reintroduce headless mode for RWebWindow, adjust ping.cxx; Batch mode, which is now only supported by Chrome, allows to run. JS code loaded from file and dump result to output file - no any. communication with host application required. Now extra headless mode is introduced, which allows to run client. code in the headless browser and communicate with it. It was original. way to produce batch images, therefore need to rename some methods. to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified. In such case macro waits until 200 round-trip packets arrived and automatically ends. Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7839
https://github.com/root-project/root/pull/7840:7,deployability,Updat,Update,7,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:1,safety,test,test,1,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:7,safety,Updat,Update,7,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:33,safety,test,test,33,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:7,security,Updat,Update,7,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:1,testability,test,test,1,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7840:33,testability,test,test,33,[test] Update location of xrootd test files:; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7840
https://github.com/root-project/root/pull/7841:400,energy efficiency,optim,optimize,400,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:542,energy efficiency,core,cores,542,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:609,energy efficiency,core,cores,609,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:650,energy efficiency,optim,optimization,650,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1053,integrability,coupl,couple,1053,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:51,interoperability,distribut,distributed,51,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:72,interoperability,distribut,distributed,72,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:279,interoperability,distribut,distributed,279,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:356,interoperability,distribut,distributed,356,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:571,interoperability,distribut,distributed,571,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1011,interoperability,distribut,distributed,1011,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1053,modifiability,coupl,couple,1053,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:400,performance,optimiz,optimize,400,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:589,performance,time,times,589,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:650,performance,optimiz,optimization,650,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:873,reliability,doe,doesn,873,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:722,safety,compl,completely,722,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1063,safety,test,tests,1063,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:722,security,compl,completely,722,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1053,testability,coupl,couple,1053,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1063,testability,test,tests,1063,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:22,usability,user,user,22,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:208,usability,user,user,208,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:747,usability,user,user,747,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:868,usability,user,user,868,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7841:1082,usability,behavi,behaviour,1082,"[DF] Give priority to user provided npartitions in distributed rdf; The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations. But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node. If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one. This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7841
https://github.com/root-project/root/pull/7842:361,availability,error,errors,361,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:361,performance,error,errors,361,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:221,safety,accid,accidental,221,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:361,safety,error,errors,361,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:441,safety,except,exception,441,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:232,usability,support,support,232,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7842:361,usability,error,errors,361,"[ntuple] Catch std types passed to RClassField; Std library types are picked up by rootcling as `TClasses`. If there is no. `RField` specialization for them, they are passed to the `RClassField`. constructor. This led to accidental support of those std types by. RNTuple. For some types, this appeared to be benign (e.g. `std::pair`) but. for others there were errors (e.g. `std::optional`). Change the `RClassField` constructor to throw an exception if any std type. is passed in. cc @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7842
https://github.com/root-project/root/pull/7843:417,deployability,fail,failing,417,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:109,integrability,sub,sub,109,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:417,reliability,fail,failing,417,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:85,safety,prevent,prevent,85,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:153,safety,avoid,avoid,153,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:85,security,preven,prevent,85,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/pull/7843:442,usability,effectiv,effectively,442,"Redo part of 'Correct FullName of the index leaf of a collection'; The intent was to prevent the creation of sub branch with 2 consecutives dots. and to avoid a dot between the branch name of the collection and the underscore. for name of the index leaf. The major problem of the first try is that the name of the top level branch. was changed from ""t."" to ""t"" making existing code search for the branch by. fullname failing. Fix #7281. This effectively ammends/corrects d225f942b59b5b022cf635a16e90f84cad59819d. Before v6.23. ```. ******************************************************************************. *Tree :tree : treelibrated tree *. *Entries : 10000 : Total = 485042 bytes File Size = 177202 *. * : : Tree compression factor = 2.74 *. ******************************************************************************. *Br 0 :t. : Int_t t._ *. *Entries : 10000 : Total Size= 83464 bytes File Size = 12844 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 1 :t..fUniqueID : UInt_t fUniqueID[t._] *. *Entries : 10000 : Total Size= 80935 bytes File Size = 12857 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.25 *. *............................................................................*. *Br 2 :t..fBits : UInt_t fBits[t._] *. *Entries : 10000 : Total Size= 80903 bytes File Size = 12879 *. *Baskets : 4 : Basket Size= 32000 bytes Compression= 6.24 *. *............................................................................*. *Br 3 :t..e : Double_t e[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 65937 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.83 *. *............................................................................*. *Br 4 :t..t : Double_t t[t._] *. *Entries : 10000 : Total Size= 121029 bytes File Size = 71633 *. *Baskets : 6 : Basket Size= 32000 bytes Compression= 1.68 *. *..............................................",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7843
https://github.com/root-project/root/issues/7844:195,availability,operat,operations,195,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:26,energy efficiency,Draw,Draw,26,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:2923,energy efficiency,Draw,Draw,2923,"cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that the values are rounded... perhaps casted to double? Is there any way to avoid it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1955,integrability,sub,subtractions,1955,"ut: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that the values",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1084,interoperability,Format,Format,1084,"hes storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1311,interoperability,Format,Format,1311,".h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:109,modifiability,variab,variables,109,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:160,modifiability,variab,variables,160,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1796,modifiability,variab,variable,1796,"<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:174,performance,perform,perform,174,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1940,performance,Perform,Perform,1940,"t<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:3023,safety,avoid,avoid,3023,"cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that the values are rounded... perhaps casted to double? Is there any way to avoid it?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1948,testability,simpl,simple,1948,"ected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:174,usability,perform,perform,174,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:553,usability,Close,Close,553,"TTree::Scan() (and TTree::Draw()) issues with ULong64_t; I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:. ```. #include <TROOT.h>. #include <TFile.h>. #include <TTree.h>. #include <TString.h>. #include <iostream>. #include <iomanip>. void write(ULong64_t x) {. TFile f(""f.root"", ""recreate"");. TTree t(""t"", ""t"");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1493,usability,Close,Close,1493,""");. t.Branch(""x"", &x, ""x/l"");. t.Fill();. t.Write();. f.Close();. std::cout<<""Written to tree: ""<<x<<""\n"";. }. void read(const ULong64_t x) {. TFile f(""f.root"");. TTree* t = (TTree*)(f.Get(""t""));. . ULong64_t x1;. t->SetBranchAddress(""x"", &x1);. t->GetEntry(0);. std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-16",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1784,usability,confirm,confirm,1784,"""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";. . std::cout<<""\n"";. TString formula = ""x"";. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1940,usability,Perform,Perform,1940,"t<<""Expected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7844:1948,usability,simpl,simple,1948,"ected output: ""<<x<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . std::cout<<""\n"";. ULong64_t y = x-1;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . std::cout<<""\n"";. y = x-926;. formula = TString::Format(""x-%lld"", y);. std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";. std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";. t->Scan(formula, """", ""colsize=25 col=lld"");. . . f.Close();. }. int main() {. ULong64_t x = 1617047019150033926;. . write(x);. read(x);. }. ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root. 2. Reads the file and the tree:. - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly. - Displays the value with Scan() – displayed value is different on the last digit. - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:. ```. Written to tree: 1617047019150033926. Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");. Expected output: 1617047019150033926. ****************************************. * Row * x *. ****************************************. * 0 * 1617047019150033920 *. ****************************************. TTree::Scan(""x-1617047019150033925"");. Expected output: 1. ****************************************. * Row * x-1617047019150033925 *. ****************************************. * 0 * 0 *. ****************************************. TTree::Scan(""x-1617047019150033000"");. Expected output: 926. ****************************************. * Row * x-1617047019150033000 *. ****************************************. * 0 * 1024 *. ****************************************. ```. I encountered similar issues when trying to plot the values with TTree::Draw(). It seems to me that ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7844
https://github.com/root-project/root/issues/7845:26,usability,document,documentation,26,"Improve TMatrix reference documentation; As reported in https://root-forum.cern.ch/t/tmatrixd-documentation/44389the documentation of TMatrix needs to be improved. We need to: . - Add a link from TMatrixD and TMatrixF (typedef definition pages, see https://root.cern.ch/doc/master/TMatrixDfwd_8h.html#aa2e948a208b6c139cf8a93eed078edbb ) to the documentation page of the template class TMatrixT (see https://root.cern.ch/doc/master/classTMatrixT.html). - Improve the TMatrixT doc page and fix the link to the Matrix Web page doc (see https://root.cern.ch/doc/master/group__Matrix.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7845
https://github.com/root-project/root/issues/7845:94,usability,document,documentation,94,"Improve TMatrix reference documentation; As reported in https://root-forum.cern.ch/t/tmatrixd-documentation/44389the documentation of TMatrix needs to be improved. We need to: . - Add a link from TMatrixD and TMatrixF (typedef definition pages, see https://root.cern.ch/doc/master/TMatrixDfwd_8h.html#aa2e948a208b6c139cf8a93eed078edbb ) to the documentation page of the template class TMatrixT (see https://root.cern.ch/doc/master/classTMatrixT.html). - Improve the TMatrixT doc page and fix the link to the Matrix Web page doc (see https://root.cern.ch/doc/master/group__Matrix.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7845
https://github.com/root-project/root/issues/7845:117,usability,document,documentation,117,"Improve TMatrix reference documentation; As reported in https://root-forum.cern.ch/t/tmatrixd-documentation/44389the documentation of TMatrix needs to be improved. We need to: . - Add a link from TMatrixD and TMatrixF (typedef definition pages, see https://root.cern.ch/doc/master/TMatrixDfwd_8h.html#aa2e948a208b6c139cf8a93eed078edbb ) to the documentation page of the template class TMatrixT (see https://root.cern.ch/doc/master/classTMatrixT.html). - Improve the TMatrixT doc page and fix the link to the Matrix Web page doc (see https://root.cern.ch/doc/master/group__Matrix.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7845
https://github.com/root-project/root/issues/7845:344,usability,document,documentation,344,"Improve TMatrix reference documentation; As reported in https://root-forum.cern.ch/t/tmatrixd-documentation/44389the documentation of TMatrix needs to be improved. We need to: . - Add a link from TMatrixD and TMatrixF (typedef definition pages, see https://root.cern.ch/doc/master/TMatrixDfwd_8h.html#aa2e948a208b6c139cf8a93eed078edbb ) to the documentation page of the template class TMatrixT (see https://root.cern.ch/doc/master/classTMatrixT.html). - Improve the TMatrixT doc page and fix the link to the Matrix Web page doc (see https://root.cern.ch/doc/master/group__Matrix.html)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7845
https://github.com/root-project/root/pull/7847:92,usability,guid,guide,92,Doxygen fixes in gui; - Make sure the comments on data members are visible in the reference guide. - Fix typos,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7847
https://github.com/root-project/root/issues/7849:878,availability,Operat,Operating,878,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:953,availability,down,download,953,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:799,deployability,build,build,799,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:866,deployability,version,version,866,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:935,deployability,instal,install,935,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:866,integrability,version,version,866,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:866,modifiability,version,version,866,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:753,safety,input,input,753,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:1007,testability,context,context,1007,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:1036,testability,context,context,1036,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:397,usability,clear,clear,397,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:445,usability,behavi,behavior,445,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:476,usability,behavi,behavior,476,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:494,usability,clear,clear,494,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:608,usability,behavi,behavior,608,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7849:753,usability,input,input,753,"eigen; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7849
https://github.com/root-project/root/issues/7850:245,deployability,fail,fail,245,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:449,deployability,fail,failed,449,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:481,interoperability,platform,platforms,481,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:685,interoperability,specif,specific,685,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:101,modifiability,deco,decompose,101,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:435,modifiability,deco,decomposition,435,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:245,reliability,fail,fail,245,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:449,reliability,fail,failed,449,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:497,security,ident,identical,497,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:124,testability,simpl,simple,124,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:124,usability,simpl,simple,124,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/issues/7850:980,usability,behavi,behavior,980,"Bug in matrix eigendecomposition; - [X] Checked for duplicates. ### Describe the bug. I try to eigen-decompose a (seemingly simple) symmetric 3x3 matrix M, defined like this:. 1 0.01 0.01 . 0.01 1 0.01 . 0.01 0.01 1 . But TMatrixDEigen seems to fail. Fetching the eigenvalues D and eigenvectors Q, I calculate Q x D x Q^T and get:. 1.055 -0.1825 0.1475 . -0.1825 1.179 0.02375 . 0.1475 0.02375 0.8487 . which is not equal to M, so the decomposition failed. I tried this on several platforms, with identical results. I attach a macro to reproduce the issue. Strangely enough the check often looks normal (for example, changing the off-diagonal elements to 0.1 or 0.0001), but with some specific cases like the one above it seems to break. I was not able to determine more precise criteria. Comparing the returned values to other codes (eg numpy) the eigenvalues seem correct, but the eigenvectors often disagree (also in cases where the check above apparently works). ### Expected behavior. Q x D x Q^T should match M. ### To Reproduce. TMatrixD m(3,3);. m(0,0) = m(1,1) = m(2,2) = 1;. m(0,1) = m(1,0) = m(1,2) = m(2,1) = 0.01;. m(0,2) = m(2,0) = 0.01;. cout << ""Initial matrix : "" << endl;. m.Print();. cout << ""Determinant : "" << endl;. cout << m.Determinant() << endl;. TMatrixDEigen mtm(m);. TMatrixD eigenVal = mtm.GetEigenValues();. cout << ""Eigenvalues (D): "" << endl;. eigenVal.Print();. . TMatrixD eigenVec = mtm.GetEigenVectors();. TMatrixD eigenVecT = mtm.GetEigenVectors();. eigenVecT.T();. cout << ""EigenVectors (Q): "" << endl;. eigenVec.Print();. . TMatrixD mCheck = eigenVec*eigenVal*eigenVecT;. cout << ""Q*D*QT : "" << endl;. mCheck.Print();. ### Setup. Root 6.22, EL7.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7850
https://github.com/root-project/root/pull/7851:10,deployability,releas,release,10,back port release notes fix; Back port fix on release note 624 (a numbered list was not correct),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7851
https://github.com/root-project/root/pull/7851:46,deployability,releas,release,46,back port release notes fix; Back port fix on release note 624 (a numbered list was not correct),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7851
https://github.com/root-project/root/pull/7852:89,energy efficiency,adapt,adapted,89,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:101,energy efficiency,current,current,101,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:89,integrability,adapt,adapted,89,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:89,interoperability,adapt,adapted,89,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:89,modifiability,adapt,adapted,89,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:1,safety,test,test,1,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:14,safety,test,testTBB,14,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:1,testability,test,test,1,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/pull/7852:14,testability,test,testTBB,14,"[test] Remove testTBB: (v624); we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7852
https://github.com/root-project/root/issues/7853:37,availability,cluster,cluster,37,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:106,availability,Cluster,Cluster,106,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:37,deployability,cluster,cluster,37,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:106,deployability,Cluster,Cluster,106,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:133,energy efficiency,current,currently,133,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:341,interoperability,specif,specific,341,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:372,interoperability,share,share,372,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:221,modifiability,paramet,parameters,221,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:295,modifiability,paramet,parameters,295,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:428,modifiability,paramet,parameters,428,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:210,performance,tune,tune,210,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:143,security,hardcod,hardcoded,143,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:415,security,expos,expose,415,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:407,testability,plan,plan,407,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:19,usability,user,user,19,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:27,usability,custom,customize,27,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/issues/7853:202,usability,user,user,202,"[ntuple] Allow the user to customize cluster/page sizes; ### Explain what you would like to see improved. Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved. We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7853
https://github.com/root-project/root/pull/7854:36,deployability,log,logic,36,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:11,modifiability,paramet,parameters,11,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:55,modifiability,paramet,parameters,55,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:429,modifiability,variab,variables,429,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:36,safety,log,logic,36,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:36,security,log,logic,36,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:36,testability,log,logic,36,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7854:301,usability,behavi,behavior,301,TGraph fit parameters painting; The logic to Paint fit parameters for TGraph was not following the. one implemented for histograms. The `v` field described [here](https://root.cern/doc/master/classTStyle.html#aedeb1d117d9f16af9f8ad430bf956d64) was not working the same way. This PR implement the same behavior for TGraph. This problem was found [here](https://root-forum.cern.ch/t/gstyle-setoptfit-1111-having-no-effect-on-fixed-variables/40841/9),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7854
https://github.com/root-project/root/pull/7855:82,energy efficiency,adapt,adapted,82,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:94,energy efficiency,current,current,94,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:82,integrability,adapt,adapted,82,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:82,interoperability,adapt,adapted,82,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:82,modifiability,adapt,adapted,82,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:1,safety,test,test,1,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:14,safety,test,testTBB,14,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:1,testability,test,test,1,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/pull/7855:14,testability,test,testTBB,14,"[test] Remove testTBB:; we have lots of proper usage now, and it would need to be adapted. to current TBB not offering task_scheduler_init anymore. (cherry picked from commit 1bb8f9a02f56afb67c836f969d6a9b4a68eb45ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7855
https://github.com/root-project/root/issues/7856:231,interoperability,share,share,231,[ntuple] Add support for storing class hierarchies in RNTuple; ### Explain what you would like to see improved. RNTuple should _properly_ support storing class hierarchies of user-defined types via TCling reflection. ### Optional: share how it could be improved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7856
https://github.com/root-project/root/issues/7856:13,usability,support,support,13,[ntuple] Add support for storing class hierarchies in RNTuple; ### Explain what you would like to see improved. RNTuple should _properly_ support storing class hierarchies of user-defined types via TCling reflection. ### Optional: share how it could be improved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7856
https://github.com/root-project/root/issues/7856:138,usability,support,support,138,[ntuple] Add support for storing class hierarchies in RNTuple; ### Explain what you would like to see improved. RNTuple should _properly_ support storing class hierarchies of user-defined types via TCling reflection. ### Optional: share how it could be improved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7856
https://github.com/root-project/root/issues/7856:175,usability,user,user-defined,175,[ntuple] Add support for storing class hierarchies in RNTuple; ### Explain what you would like to see improved. RNTuple should _properly_ support storing class hierarchies of user-defined types via TCling reflection. ### Optional: share how it could be improved.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7856
https://github.com/root-project/root/issues/7858:11,deployability,Releas,Release,11,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:71,deployability,releas,release,71,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:244,deployability,log,log,244,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:268,deployability,Updat,Update,268,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:584,deployability,version,version,584,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:601,deployability,version,version,601,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:751,deployability,Automat,Automatic,751,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1390,deployability,log,logging,1390,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:121,energy efficiency,optim,optimizer,121,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1479,energy efficiency,Optim,Optimize,1479,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:172,integrability,Buffer,Buffer,172,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:369,integrability,messag,message,369,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:584,integrability,version,version,584,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:601,integrability,version,version,601,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1423,integrability,interfac,interface,1423,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:369,interoperability,messag,message,369,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1197,interoperability,BinD,BinData,1197,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1423,interoperability,interfac,interface,1423,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:584,modifiability,version,version,584,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:601,modifiability,version,version,601,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:791,modifiability,Paramet,Parameter,791,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1197,modifiability,BinD,BinData,1197,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1423,modifiability,interfac,interface,1423,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:121,performance,optimiz,optimizer,121,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:538,performance,memor,memory,538,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1479,performance,Optimiz,Optimize,1479,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:244,safety,log,log,244,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:268,safety,Updat,Update,268,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:655,safety,input,input,655,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1390,safety,log,logging,1390,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:244,security,log,log,244,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:268,security,Updat,Update,268,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1390,security,log,logging,1390,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:244,testability,log,log,244,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:751,testability,Automat,Automatic,751,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1390,testability,log,logging,1390,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:538,usability,memor,memory,538,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:655,usability,input,input,655,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/issues/7858:1065,usability,Support,Support,1065,"Missing in Release Notes for 6.24 ; List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 . - TMVA : optimizer options : #7318. - ChangeLabel: #7294. - Buffer Merger improvements : #7286. - Eve7: The first implementation of log view #7270. - TMVA: Update Keras tutorials using tensorflow.keras #7255. - builtins: Zstd 1.4.8 #7214. - RooFit: warning message for RooAddPdf without norm set: #7129 . - RooFit: Improve plotting of RooBinSamplingPdf. #7110. - Hist: Fixes and improvements for the TKDE class #7096. - Fix a memory leak in TF1::Copy #7035. - Fix for new version of cudnn version 8 #7003. - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001. - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956. - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902. - TMVA: Implement MethodCategory::GetMulticlassValues() #6886. - Hist: Add THistRange class defining a generic histogram range and its iterator #6795. - TMVA: Support for Keras 2.4 (tf.keras) #6793. - Eve-7: Add example of calorimeter representation of REveDataCollection #6783. - Math: Fix BinData copy constructor #6776. - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724. - Math: Changes in TRandom3::GetSeed #6723. - Minuit2: new Minuit2 logging #6705. - ntuple] Several interface improvements (unique pointer, const) #6655. - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7858
https://github.com/root-project/root/pull/7859:137,modifiability,paramet,parameters,137,"[RF] Speed up getting weights from RooDataHist; Retreiving weights from a RooDataHist can be sped up signifcantly if it. is assumed that parameters passed to `RooDataHist::weight` are aligned. with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes. this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/pull/7859:212,modifiability,variab,variables,212,"[RF] Speed up getting weights from RooDataHist; Retreiving weights from a RooDataHist can be sped up signifcantly if it. is assumed that parameters passed to `RooDataHist::weight` are aligned. with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes. this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/pull/7859:101,security,sign,signifcantly,101,"[RF] Speed up getting weights from RooDataHist; Retreiving weights from a RooDataHist can be sped up signifcantly if it. is assumed that parameters passed to `RooDataHist::weight` are aligned. with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes. this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/pull/7859:554,usability,navigat,navigator,554,"[RF] Speed up getting weights from RooDataHist; Retreiving weights from a RooDataHist can be sped up signifcantly if it. is assumed that parameters passed to `RooDataHist::weight` are aligned. with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes. this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/pull/7859:666,usability,navigat,navigator,666,"[RF] Speed up getting weights from RooDataHist; Retreiving weights from a RooDataHist can be sped up signifcantly if it. is assumed that parameters passed to `RooDataHist::weight` are aligned. with the histogram variables. This commit introduces a `RooDataHist::weightFast` function that makes. this assumption. It is used by RooHistFunc and RooHistPdf. This was benchmarked with the same hist factory example as in https://github.com/root-project/root/pull/7838:. * [without this PR, but with #7838](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_2). * [also with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hf_ParamHistFunc_1_new_3). The effect is a 15 % speedup of the HistFactory example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7859
https://github.com/root-project/root/issues/7861:17,availability,error,error,17,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:671,availability,error,errors,671,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1697,availability,Operat,Operating,1697,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1772,availability,down,download,1772,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:917,deployability,build,build,917,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1257,deployability,fail,fails,1257,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1685,deployability,version,version,1685,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1754,deployability,instal,install,1754,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1685,integrability,version,version,1685,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1685,modifiability,version,version,1685,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:17,performance,error,error,17,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:671,performance,error,errors,671,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1270,performance,time,time,1270,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1257,reliability,fail,fails,1257,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:17,safety,error,error,17,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:671,safety,error,errors,671,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:871,safety,input,input,871,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1286,safety,except,exception,1286,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1385,security,access,access,1385,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1826,testability,context,context,1826,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:2082,testability,context,context,2082,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:17,usability,error,error,17,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:454,usability,clear,clear,454,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:502,usability,behavi,behavior,502,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:557,usability,support,supported,557,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:671,usability,error,errors,671,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:726,usability,behavi,behavior,726,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:871,usability,input,input,871,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:968,usability,custom,custom,968,"[ntuple] RNTuple error when serializing TClass typedef members; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec28",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1095,usability,Custom,CustomStruct,1095,"lease search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/issues/7861:1199,usability,Custom,CustomStruct,1199,"* [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. TClass members which are typedefs of supported RNTuple types are not being resolved to their true types during serialization, which is causing runtime errors. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Define a custom class with, e.g. a typedef'd `std::string` member intended to be serialized using rootcling and `TClass`. ```cpp. class CustomStruct { . typedef std::string typedef_string;. typedef_string str;. };. auto classField = RField<CustomStruct>(""field"");. ```. Trying to create this field fails at run time:. ```. C++ exception with description ""Field npos has unknown type const string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> >. ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) . [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Setup. ROOT master. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. This is likely resolved by using `GetTrueTypeName` instead of `GetFullTypeName` here (thank you @jblomer):. https://github.com/root-project/root/blob/28f86b343f4ec280937fbbe8ecf64d9582651dcb/tree/ntuple/v7/src/RField.cxx#L550. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7861
https://github.com/root-project/root/pull/7864:0,deployability,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:7,deployability,releas,release,7,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:35,deployability,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:42,deployability,releas,release,42,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:0,safety,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:35,safety,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:0,security,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/pull/7864:35,security,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7864
https://github.com/root-project/root/issues/7865:880,availability,Operat,Operating,880,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:955,availability,down,download,955,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:801,deployability,build,build,801,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:868,deployability,version,version,868,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:937,deployability,instal,install,937,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:868,integrability,version,version,868,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:868,modifiability,version,version,868,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:755,safety,input,input,755,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:1009,testability,context,context,1009,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:1038,testability,context,context,1038,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:399,usability,clear,clear,399,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:447,usability,behavi,behavior,447,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:478,usability,behavi,behavior,478,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:496,usability,clear,clear,496,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:610,usability,behavi,behavior,610,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/issues/7865:755,usability,input,input,755,"Android; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7865
https://github.com/root-project/root/pull/7866:0,deployability,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:7,deployability,releas,release,7,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:35,deployability,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:42,deployability,releas,release,42,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:0,safety,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:35,safety,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:0,security,Updat,Update,0,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7866:35,security,Updat,Update,35,"Update release notes for v6 24 00; Update release notes with missing items, fixes #7858",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7866
https://github.com/root-project/root/pull/7867:281,integrability,interfac,interfaces,281,"Remove memstat, memcheck; keep objstat:; These facilities are superseded by valgrind and other memory checkers. memstat has been deprecated since v6.18. Big questions I didn't answer yet:. * [ ] do we still need `TStorage`? * [ ] do we need to deprecate the removed `TApplication` interfaces?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/pull/7867:281,interoperability,interfac,interfaces,281,"Remove memstat, memcheck; keep objstat:; These facilities are superseded by valgrind and other memory checkers. memstat has been deprecated since v6.18. Big questions I didn't answer yet:. * [ ] do we still need `TStorage`? * [ ] do we need to deprecate the removed `TApplication` interfaces?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/pull/7867:281,modifiability,interfac,interfaces,281,"Remove memstat, memcheck; keep objstat:; These facilities are superseded by valgrind and other memory checkers. memstat has been deprecated since v6.18. Big questions I didn't answer yet:. * [ ] do we still need `TStorage`? * [ ] do we need to deprecate the removed `TApplication` interfaces?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/pull/7867:95,performance,memor,memory,95,"Remove memstat, memcheck; keep objstat:; These facilities are superseded by valgrind and other memory checkers. memstat has been deprecated since v6.18. Big questions I didn't answer yet:. * [ ] do we still need `TStorage`? * [ ] do we need to deprecate the removed `TApplication` interfaces?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/pull/7867:95,usability,memor,memory,95,"Remove memstat, memcheck; keep objstat:; These facilities are superseded by valgrind and other memory checkers. memstat has been deprecated since v6.18. Big questions I didn't answer yet:. * [ ] do we still need `TStorage`? * [ ] do we need to deprecate the removed `TApplication` interfaces?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7867
https://github.com/root-project/root/pull/7868:7,deployability,Updat,Update,7,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:1,safety,test,test,1,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:7,safety,Updat,Update,7,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:33,safety,test,test,33,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:7,security,Updat,Update,7,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:1,testability,test,test,1,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7868:33,testability,test,test,33,[test] Update location of xrootd test files (6.20); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7868
https://github.com/root-project/root/pull/7869:7,deployability,Updat,Update,7,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:1,safety,test,test,1,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:7,safety,Updat,Update,7,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:33,safety,test,test,33,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:7,security,Updat,Update,7,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:1,testability,test,test,1,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7869:33,testability,test,test,33,[test] Update location of xrootd test files (6.22); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7869
https://github.com/root-project/root/pull/7870:7,deployability,Updat,Update,7,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:1,safety,test,test,1,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:7,safety,Updat,Update,7,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:33,safety,test,test,33,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:7,security,Updat,Update,7,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:1,testability,test,test,1,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/pull/7870:33,testability,test,test,33,[test] Update location of xrootd test files; The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7870
https://github.com/root-project/root/issues/7871:380,availability,Failur,Failure,380,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:459,availability,failur,failures,459,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:380,deployability,Fail,Failure,380,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:459,deployability,fail,failures,459,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:171,energy efficiency,reduc,reducer,171,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:837,energy efficiency,reduc,reducer,837,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:851,energy efficiency,reduc,reducer,851,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:1012,energy efficiency,reduc,reducer,1012,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:231,interoperability,share,share,231,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:380,performance,Failur,Failure,380,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:459,performance,failur,failures,459,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:501,performance,parallel,parallel,501,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:380,reliability,Fail,Failure,380,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:459,reliability,fail,failures,459,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:154,security,sign,signature,154,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:401,security,sign,signature,401,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:658,security,modif,modifications,658,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:0,usability,Usab,Usability,0,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7871:202,usability,document,documentation,202,"Usability of TExecutor::MapReduce; ### Explain what you would like to see improved. It's hard to use TExecutor::MapReduce correctly, because the required signature of the reducer isn't mentioned in the documentation. ### Optional: share how it could be improved. - [ ] Add some info to all docs, e.g. that a lambda like this would do:. ```c++. [](const std::vector<T>&) { }. ```. Failure to meet that signature leads to an explosion of template instantiation failures with gcc. - [ ] Show how to do a parallel for using `Map()`? - [ ] Mention that `Map()` always has to return a dummy value (or: Fix #7872 ). - [ ] Check if TThreadExecutor etc need the same modifications. #### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . // Empty reducer. auto reducer = []() -> int { return 0; };. auto printRange = [=](std::size_t) -> int {. return 0;. };. . ex.MapReduce(printRange, ROOT::TSeq<std::size_t>(0, nChunk), reducer, nChunk);. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7871
https://github.com/root-project/root/issues/7872:322,availability,failur,failures,322,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:322,deployability,fail,failures,322,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:184,interoperability,share,share,184,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:322,performance,failur,failures,322,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:322,reliability,fail,failures,322,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:788,reliability,doe,does,788,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:365,testability,simpl,simple,365,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:28,usability,support,support,28,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:235,usability,support,supported,235,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7872:365,usability,simpl,simple,365,"TExecutorCRTP::Map() should support void; ### Explain what you would like to see improved. You are always forced to return a dummy value when using TExecutorCRTP::Map(). ### Optional: share how it could be improved. - `void` should be supported. - Alternatively, add a `static_assert` somewhere, because the instantiation failures are spectacularly long for such a simple mistake. ### To Reproduce. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // Comment in to make it compile. //return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7872
https://github.com/root-project/root/issues/7873:1254,energy efficiency,schedul,schedule,1254,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:198,performance,parallel,parallel,198,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:1241,performance,parallel,parallel,1241,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:1254,performance,schedul,schedule,1254,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:679,reliability,doe,does,679,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:1230,reliability,pra,pragma,1230,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7873:0,usability,Support,Support,0,"Support a blocked range in TExecutor?; ### Is your feature request related to a problem? Please describe. Not a problem, just ease of use when processing e.g. a large array with a lot of entries in parallel (with using SIMD in each thread). ### Describe the solution you'd like. #### ROOT. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // We are forced to return a dummy value. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. #### TBB. ```c++. void runParallel() {. constexpr std::size_t nTotal = 101;. auto printRange = [](const tbb::blocked_range<std::size_t>& range) {. std::cout << ""Doing "" << range.begin() << ""\t"" << range.end() << std::endl; sleep(1);. }; . tbb::parallel_for(tbb::blocked_range<std::size_t>(0, nTotal), printRange, tbb::static_partitioner());. }. ```. #### OMP. ```diff. + #pragma omp parallel for schedule(static). for (std::size_t i = 0; i < end; ++i) {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7873
https://github.com/root-project/root/issues/7874:239,energy efficiency,Current,Currently,239,"[RF] IMT parallel for in the computation library; ### Is your feature request related to a problem? Please describe. The problem is only speed. :-). ### Describe the solution you'd like. Use `TExecutor` to parallelise for loops in RooFit. Currently, you have to use something like. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // <Do the computation work here>. // We are forced to return a dummy value with `TExecutor::Map()`. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. Alternatively, one can fill a vector with something like `pair<size_t, size_t>(begin, end)`, and run this in parallel using TExecutor. ### Describe alternatives you've considered. #7873 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7874
https://github.com/root-project/root/issues/7874:9,performance,parallel,parallel,9,"[RF] IMT parallel for in the computation library; ### Is your feature request related to a problem? Please describe. The problem is only speed. :-). ### Describe the solution you'd like. Use `TExecutor` to parallelise for loops in RooFit. Currently, you have to use something like. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // <Do the computation work here>. // We are forced to return a dummy value with `TExecutor::Map()`. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. Alternatively, one can fill a vector with something like `pair<size_t, size_t>(begin, end)`, and run this in parallel using TExecutor. ### Describe alternatives you've considered. #7873 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7874
https://github.com/root-project/root/issues/7874:206,performance,parallel,parallelise,206,"[RF] IMT parallel for in the computation library; ### Is your feature request related to a problem? Please describe. The problem is only speed. :-). ### Describe the solution you'd like. Use `TExecutor` to parallelise for loops in RooFit. Currently, you have to use something like. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // <Do the computation work here>. // We are forced to return a dummy value with `TExecutor::Map()`. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. Alternatively, one can fill a vector with something like `pair<size_t, size_t>(begin, end)`, and run this in parallel using TExecutor. ### Describe alternatives you've considered. #7873 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7874
https://github.com/root-project/root/issues/7874:1018,performance,parallel,parallel,1018,"[RF] IMT parallel for in the computation library; ### Is your feature request related to a problem? Please describe. The problem is only speed. :-). ### Describe the solution you'd like. Use `TExecutor` to parallelise for loops in RooFit. Currently, you have to use something like. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // <Do the computation work here>. // We are forced to return a dummy value with `TExecutor::Map()`. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. Alternatively, one can fill a vector with something like `pair<size_t, size_t>(begin, end)`, and run this in parallel using TExecutor. ### Describe alternatives you've considered. #7873 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7874
https://github.com/root-project/root/issues/7874:671,reliability,doe,does,671,"[RF] IMT parallel for in the computation library; ### Is your feature request related to a problem? Please describe. The problem is only speed. :-). ### Describe the solution you'd like. Use `TExecutor` to parallelise for loops in RooFit. Currently, you have to use something like. ```c++. void runParallel() {. ROOT::Internal::TExecutor ex; . constexpr std::size_t nTotal = 101;. const auto nChunk = ROOT::IsImplicitMTEnabled() ? ex.GetPoolSize() : 1u; . auto printRange = [=](std::size_t i) {. const auto nEvent = nTotal / nChunk + (nTotal%nChunk != 0); . const auto begin = nEvent * i;. const auto end = std::min( nEvent * (i+1), nTotal);. std::cout << ""["" << i << ""] does "" << begin << ""\t"" << end << std::endl; sleep(1);. // <Do the computation work here>. // We are forced to return a dummy value with `TExecutor::Map()`. return 0;. }; . ex.Map(printRange, ROOT::TSeq<std::size_t>(0, nChunk));. }. ```. Alternatively, one can fill a vector with something like `pair<size_t, size_t>(begin, end)`, and run this in parallel using TExecutor. ### Describe alternatives you've considered. #7873 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7874
https://github.com/root-project/root/issues/7875:1645,integrability,sub,subfields,1645,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:34,interoperability,platform,platform-specific,34,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:275,modifiability,exten,extent,275,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:249,reliability,doe,does,249,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:466,safety,except,exception,466,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:572,safety,except,exception,572,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1070,safety,except,exception,1070,"; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1185,safety,except,exception,1185,"rmalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1793,safety,except,exception,1793,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:668,security,access,access,668,"[ntuple] Improve normalization of platform-specific primitives and typedefs; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. Normalization of fields created through `RFieldBase::Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1287,security,access,access,1287,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1880,security,access,access,1880,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:2154,testability,context,context,2154,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:2205,testability,context,context,2205,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1572,usability,user,user-defined,1572,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1672,usability,Custom,CustomStruct,1672,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/issues/7875:1746,usability,Custom,CustomStruct,1746,"Create` does not work to the same extent as directly templated fields:. ```cpp. // works . auto ulong_field = RField<unsigned long>(""ulong""); . EXPECT_STREQ(""std::uint64_t"", ulong_field.GetType().c_str());. // throws runtime exception. auto other_ulong = RFieldBase::Create(""other ulong"", ""unsigned long"").Unwrap();. ```. ```. C++ exception with description ""Field other ulong has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. Typedef / type alias fields are also an issue:. ```cpp. // works. auto str_size_field = RField<std::string::size_type>(""str_size"");. // throws exception. auto other_str_size = RFieldBase::Create(""str_size"", ""std::string::size_type"").Unwrap();. ```. ```. C++ exception with description ""Field str_size has unknown type std::string::size_type (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. This has implications for user-defined classes, because `RFieldBase::Create` is used to initialize subfields:. ```cpp. struct CustomStruct {. unsigned long ul;. };. // ... . auto class_field = RField<CustomStruct>(""custom_struct"");. ```. ```. C++ exception with description ""Field ul has unknown type unsigned long (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/home/max/projects/rootdev/root/tree/ntuple/v7/src/RField.cxx:202]. ```. ### Additional context. Related issue #7861 . <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7875
https://github.com/root-project/root/pull/7876:142,integrability,event,event,142,"[DF] Do not warn needlessly in ~RResultPtr; We want to warn users if a RResultPtr returned by a lazy Snapshot. action is destroyed before the event loop is run, but _only_ if there. are no other RResultPtr objects that share ownership of the result,. i.e. if there is no way to trigger this Snapshot in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7876
https://github.com/root-project/root/pull/7876:219,interoperability,share,share,219,"[DF] Do not warn needlessly in ~RResultPtr; We want to warn users if a RResultPtr returned by a lazy Snapshot. action is destroyed before the event loop is run, but _only_ if there. are no other RResultPtr objects that share ownership of the result,. i.e. if there is no way to trigger this Snapshot in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7876
https://github.com/root-project/root/pull/7876:60,usability,user,users,60,"[DF] Do not warn needlessly in ~RResultPtr; We want to warn users if a RResultPtr returned by a lazy Snapshot. action is destroyed before the event loop is run, but _only_ if there. are no other RResultPtr objects that share ownership of the result,. i.e. if there is no way to trigger this Snapshot in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7876
https://github.com/root-project/root/pull/7878:158,availability,backup,backup,158,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:115,deployability,log,logic,115,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:136,energy efficiency,current,current,136,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:158,reliability,backup,backup,158,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:115,safety,log,logic,115,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:158,safety,backup,backup,158,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:115,security,log,logic,115,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7878:115,testability,log,logic,115,"Print key cycle information in rootls -l; Fixes #7053 . It prints cycle number next to the key name and mimics the logic for printing ""[current cycle]"" and ""[backup cycle]"" found in [TDirectoryFile.cxx](https://github.com/root-project/root/blob/bb10667053131dbf3575fa2eb98522fdc6c57abc/io/io/src/TDirectoryFile.cxx#L1169-L1182)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7878
https://github.com/root-project/root/pull/7879:17,deployability,fail,failing,17,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:98,deployability,version,version,98,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:188,deployability,fail,fails,188,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:98,integrability,version,version,98,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:98,modifiability,version,version,98,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:17,reliability,fail,failing,17,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:55,reliability,diagno,diagnose,55,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:188,reliability,fail,fails,188,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:209,reliability,diagno,diagnosed,209,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:9,safety,Isol,Isolate,9,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:42,safety,test,test,42,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:76,safety,test,test,76,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:113,safety,test,test,113,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:183,safety,test,test,183,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:9,security,Iso,Isolate,9,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:9,testability,Isol,Isolate,9,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:42,testability,test,test,42,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:55,testability,diagno,diagnose,55,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:76,testability,test,test,76,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:113,testability,test,test,113,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:183,testability,test,test,183,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:209,testability,diagno,diagnosed,209,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/pull/7879:142,usability,minim,minimal,142,"[ntuple] Isolate failing Windows CI TFile test; Try to diagnose problematic test from #7749. This version of the test checks the success of a minimal ntuple. read-write cycle. If the test fails on CI, we have diagnosed a latent. issue in the RPageSink constructor taking a std::unique_ptr<TFile>&.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7879
https://github.com/root-project/root/issues/7880:1429,deployability,Continu,Continuous,1429,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1318,energy efficiency,model,model,1318,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1752,energy efficiency,model,model,1752,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:706,integrability,sub,subclass,706,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:169,interoperability,distribut,distribution,169,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:366,interoperability,distribut,distribution,366,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:536,interoperability,distribut,distributions,536,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:933,interoperability,distribut,distributions,933,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1240,interoperability,distribut,distribution,1240,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1379,interoperability,distribut,distribution,1379,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1448,interoperability,distribut,distribution,1448,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1810,interoperability,distribut,distribution,1810,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1864,interoperability,distribut,distribution,1864,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:406,modifiability,variab,variable,406,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:424,modifiability,variab,variables,424,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1555,modifiability,paramet,parameters,1555,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1632,modifiability,paramet,parameters,1632,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1994,modifiability,variab,variable-range,1994,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1324,safety,compl,complicated,1324,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1318,security,model,model,1318,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1324,security,compl,complicated,1324,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1752,security,model,model,1752,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:194,testability,simpl,simple,194,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1828,testability,simpl,simple,1828,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1893,testability,context,context,1893,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:2037,testability,understand,understand,2037,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:53,usability,support,support,53,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:194,usability,simpl,simple,194,"[RF] Allow RooUniform to set lower and upper bounds (support); ### Is your feature request related to a problem? Please describe. I wanted to fit my data with a uniform distribution (I know the simple analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variab",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1336,usability,support,support,1336,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7880:1828,usability,simpl,simple,1828,"le analytical answer), but it turned out that it's not possible to set bounds for it. [RooUniform](https://root.cern/doc/master/classRooUniform.html) creates a uniform distribution for the whole range of its variable (or many variables in the case of many dimensions). On the [forum](https://root-forum.cern.ch/t/rooaddpdf-sum-of-uniform-distributions/18927/2) @lmoneta writes in 2015: ""You cannot really assign weights to a RooUniformPdf."" (but probably this has already changed, because I see that it is a subclass of RooAbsPdf, like RooGaussian). ### Describe the solution you'd like. Change the constructor to. RooUniform(const char *name, const char *title, RooAbsReal &x_low, RooAbsReal &x_up). One- and multidimensional uniform distributions should become separate (like [RooGaussian](https://root.cern/doc/master/classRooGaussian.html) and [RooMultiVarGaussian](https://root.cern/doc/master/classRooMultiVarGaussian.html) (note also a spurious line break in its docs)). Probably there is even no need for the multidimensional uniform distribution, since it's just a product of one-dimensional pdfs (if you don't model complicated support shapes). The uniform (rectangular) distribution is just one of pdfs (see Wikipedia, [Continuous uniform distribution](https://en.wikipedia.org/wiki/Continuous_uniform_distribution)). It is a normal pdf, and its parameters are its lower and upper bounds. They should be set like other pdf parameters in RooFit. ### Describe alternatives you've considered. I think that there are no alternatives. No reason to model this with step functions or histograms. The uniform distribution is a simple and pretty basic probability distribution. ### Additional context. I [asked about this on the forum](https://root-forum.cern.ch/t/uniform-rectangular-pdf-with-variable-range/44232), but now as I better understand RooFit and as I see no answers for RooUniform, I think this is the only solution. P.S. There is a spurious line break in RooUniform class description.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7880
https://github.com/root-project/root/issues/7881:1200,availability,Operat,Operating,1200,".cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1275,availability,down,download,1275,"issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1438,availability,error,error,1438,"ps://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/Xc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2128,availability,error,error,2128," --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2601,availability,error,error,2601,"rom /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3234,availability,error,error,3234,"bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3414,availability,error,error,3414,"/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3772,availability,error,error,3772," Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3980,availability,error,error,3980,"lding module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4379,availability,error,error,4379,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4791,availability,error,error,4791,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4863,availability,Error,Error,4863,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4870,availability,Error,Error,4870,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:520,deployability,build,build,520,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:657,deployability,build,build,657,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:906,deployability,build,build,906,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1124,deployability,instal,install,1124,"thub.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1134,deployability,build,build-from-source,1134,"roject/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1188,deployability,version,version,1188,"tps://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1257,deployability,instal,install,1257,"g reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1457,deployability,build,building,1457,"brew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolcha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1466,deployability,modul,module,1466,"ebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1488,deployability,build,building,1488,"macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1497,deployability,modul,module,1497,".14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1564,deployability,modul,module-includes,1564,"r. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1651,deployability,Toolchain,Toolchains,1651," build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1793,deployability,Toolchain,Toolchains,1793," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::Incr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1934,deployability,Toolchain,Toolchains,1934,"... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2053,deployability,Toolchain,Toolchains,2053,"w/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2197,deployability,Toolchain,Toolchains,2197,"erating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2316,deployability,modul,module,2316,"6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-202",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2428,deployability,Toolchain,Toolchains,2428,"Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2618,deployability,build,build,2618,"/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2624,deployability,modul,module,2624,".app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2728,deployability,Fail,Failed,2728,"file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2767,deployability,version,version,2767,"pp/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2957,deployability,version,version,2957,"oolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2980,deployability,build,building,2980,"lude/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal erro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2989,deployability,modul,module,2989,"/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3011,deployability,build,building,3011,"ications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3020,deployability,modul,module,3020,"/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3097,deployability,modul,module-includes,3097,"de/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3172,deployability,build,builddir,3172,"p/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3251,deployability,build,build,3251,"+/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3257,deployability,modul,module,3257,"ath.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3352,deployability,build,builddir,3352,"quired. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3431,deployability,build,build,3431,"ains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3437,deployability,modul,module,3437,"codeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""Rtypes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3487,deployability,build,building,3487,"ath.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3496,deployability,modul,module,3496,"1:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3518,deployability,build,building,3518,"laration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3527,deployability,modul,module,3527," is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3608,deployability,build,builddir,3608,"d not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3662,deployability,modul,module-includes,3662,"ng in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3729,deployability,build,builddir,3729,"d to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3789,deployability,build,build,3789,"::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3795,deployability,modul,module,3795,"ementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3941,deployability,build,builddir,3941,"ard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3997,deployability,build,build,3997,"e':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4003,deployability,modul,module,4003,"hile building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4080,deployability,build,building,4080,"cluded from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4089,deployability,modul,module,4089,"rom <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4111,deployability,build,building,4111,":. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4120,deployability,modul,module,4120,"ate/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4207,deployability,build,builddir,4207,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4261,deployability,modul,module-includes,4261,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4328,deployability,build,builddir,4328,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4396,deployability,build,build,4396,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4402,deployability,modul,module,4402,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4479,deployability,build,building,4479,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4488,deployability,modul,module,4488,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4510,deployability,build,building,4510,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4519,deployability,modul,module,4519,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4618,deployability,build,builddir,4618,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4673,deployability,modul,module-includes,4673,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4740,deployability,build,builddir,4740,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4808,deployability,build,build,4808,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4814,deployability,modul,module,4814,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4932,deployability,Build,Building,4932,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5017,deployability,build,build,5017,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5043,deployability,fail,failed,5043,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:475,energy efficiency,core,core,475,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1091,energy efficiency,core,core,1091,"se search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1474,energy efficiency,Core,Core,1474,"ore/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2997,energy efficiency,Core,Core,2997,"plex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3504,energy efficiency,Core,Core,3504,"te: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. Wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4097,energy efficiency,Core,Core,4097,"dule-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4496,energy efficiency,Core,Core,4496,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4876,energy efficiency,load,loading,4876,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4952,energy efficiency,core,core,4952,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5137,energy efficiency,core,core,5137,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1188,integrability,version,version,1188,"tps://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2767,integrability,version,version,2767,"pp/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2957,integrability,version,version,2957,"oolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5032,integrability,sub,subcommand,5032,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2750,interoperability,standard,standard,2750,"lications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2852,interoperability,standard,standard,2852,"complex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2869,interoperability,mismatch,mismatch,2869,"ile included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2940,interoperability,standard,standard,2940,"/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1188,modifiability,version,version,1188,"tps://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Devel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1466,modifiability,modul,module,1466,"ebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1497,modifiability,modul,module,1497,".14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1564,modifiability,modul,module-includes,1564,"r. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2316,modifiability,modul,module,2316,"6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-202",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2624,modifiability,modul,module,2624,".app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2767,modifiability,version,version,2767,"pp/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2957,modifiability,version,version,2957,"oolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rty",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2989,modifiability,modul,module,2989,"/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3020,modifiability,modul,module,3020,"/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3097,modifiability,modul,module-includes,3097,"de/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3257,modifiability,modul,module,3257,"ath.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3437,modifiability,modul,module,3437,"codeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""Rtypes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3496,modifiability,modul,module,3496,"1:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3527,modifiability,modul,module,3527," is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3662,modifiability,modul,module-includes,3662,"ng in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3795,modifiability,modul,module,3795,"ementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4003,modifiability,modul,module,4003,"hile building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4089,modifiability,modul,module,4089,"rom <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4120,modifiability,modul,module,4120,"ate/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4261,modifiability,modul,module-includes,4261,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4402,modifiability,modul,module,4402,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4488,modifiability,modul,module,4488,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4519,modifiability,modul,module,4519,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4673,modifiability,modul,module-includes,4673,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4814,modifiability,modul,module,4814,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1438,performance,error,error,1438,"ps://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/Xc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1632,performance,Content,Contents,1632," happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1774,performance,Content,Contents,1774,"t; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Wa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1915,performance,Content,Contents,1915,". `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2034,performance,Content,Contents,2034,"d /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2128,performance,error,error,2128," --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2178,performance,Content,Contents,2178," ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2409,performance,Content,Contents,2409," problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2601,performance,error,error,2601,"rom /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3234,performance,error,error,3234,"bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3414,performance,error,error,3414,"/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3772,performance,error,error,3772," Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3980,performance,error,error,3980,"lding module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4379,performance,error,error,4379,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4791,performance,error,error,4791,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4863,performance,Error,Error,4863,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4870,performance,Error,Error,4870,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4876,performance,load,loading,4876,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2728,reliability,Fail,Failed,2728,"file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5043,reliability,fail,failed,5043,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:860,safety,input,input,860,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:989,safety,test,test,989,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1438,safety,error,error,1438,"ps://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/Xc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1466,safety,modul,module,1466,"ebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1497,safety,modul,module,1497,".14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1564,safety,modul,module-includes,1564,"r. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1713,safety,compl,complex,1713,"havior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1996,safety,compl,complex,1996," I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2128,safety,error,error,2128," --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2316,safety,modul,module,2316,"6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-202",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2601,safety,error,error,2601,"rom /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2624,safety,modul,module,2624,".app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2989,safety,modul,module,2989,"/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3020,safety,modul,module,3020,"/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3097,safety,modul,module-includes,3097,"de/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3234,safety,error,error,3234,"bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3257,safety,modul,module,3257,"ath.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3414,safety,error,error,3414,"/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3437,safety,modul,module,3437,"codeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""Rtypes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3496,safety,modul,module,3496,"1:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3527,safety,modul,module,3527," is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3662,safety,modul,module-includes,3662,"ng in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3772,safety,error,error,3772," Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3795,safety,modul,module,3795,"ementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3980,safety,error,error,3980,"lding module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4003,safety,modul,module,4003,"hile building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4089,safety,modul,module,4089,"rom <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4120,safety,modul,module,4120,"ate/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4261,safety,modul,module-includes,4261,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4379,safety,error,error,4379,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4402,safety,modul,module,4402,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4488,safety,modul,module,4488,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4519,safety,modul,module,4519,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4673,safety,modul,module-includes,4673,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4791,safety,error,error,4791,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4814,safety,modul,module,4814,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4863,safety,Error,Error,4863,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4870,safety,Error,Error,4870,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:0,security,sign,signbit,0,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:535,security,sign,signbit,535,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1713,security,compl,complex,1713,"havior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1996,security,compl,complex,1996," I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2285,security,sign,signbit,2285," built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2372,security,sign,signbit,2372,"<!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2540,security,sign,signbit,2540,"file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtyp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5077,security,sign,signbit,5077,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:989,testability,test,test,989,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1367,testability,context,context,1367,"sue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using :",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1396,testability,context,context,1396,"aster"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/X",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:565,usability,behavi,behavior,565,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:583,usability,clear,clear,583,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:715,usability,behavi,behavior,715,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:860,usability,input,input,860,"signbit issue for macOS 10.14 and 10.15 on Homebrew; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In https://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1438,usability,error,error,1438,"ps://github.com/Homebrew/homebrew-core/pull/75166, macOS 10.14 and 10.15 can't build due to a signbit issue. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Should build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/Xc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1651,usability,Tool,Toolchains,1651," build? :). ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1793,usability,Tool,Toolchains,1793," we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::Incr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:1934,usability,Tool,Toolchains,1934,"... -->. I don't have a 10.14 or 10.15 machine to test on, if I did, this should do it:. ```bash. cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2053,usability,Tool,Toolchains,2053,"w/Library/Taps/homebrew/homebrew-core. gh pr checkout 75166. brew install --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2128,usability,error,error,2128," --build-from-source root. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2197,usability,Tool,Toolchains,2197,"erating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT 6.24.00, macOS < 11, C++17 mode. ### Additional context. <!--. Add any other context about the problem here. -->. Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2428,usability,Tool,Toolchains,2428,"Full error:. ```. While building module 'Core':. While building module 'std' imported from input_line_1:1:. In file included from <module-includes>:31:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:2601,usability,error,error,2601,"rom /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex.h:28:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ccomplex:20:. In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:245:. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:317:9: error: missing '#include ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3234,usability,error,error,3234,"bin/../include/c++/v1/math.h""'; declaration of 'signbit' must be imported from module 'std.depr.math_h' before it is required. using ::signbit;. ^. /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3414,usability,error,error,3414,"/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/math.h:331:1: note: previous declaration is here. signbit(_A1 __lcpp_x) _NOEXCEPT. ^. input_line_1:1:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3772,usability,error,error,3772," Warning in cling::IncrementalParser::CheckABICompatibility():. Possible C++ standard library mismatch, compiled with _LIBCPP_ABI_VERSION '1'. Extraction of runtime standard library version was: ''. While building module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:3980,usability,error,error,3980,"lding module 'Core':. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:1:. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4379,usability,error,error,4379,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4791,usability,error,error,4791,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4863,usability,Error,Error,4863,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:4870,usability,Error,Error,4870,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/issues/7881:5023,usability,stop,stopped,5023,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'. #include <new>. ~~~~~~~~^. /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'. #include <string>. ~~~~~~~~^. While building module 'Core':. While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'. #include <cstddef> // size_t, NULL. ~~~~~~~~^. In file included from input_line_3:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:. In file included from <module-includes>:1:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'. #include ""RtypesCore.h"". ~~~~~~~~^~~~~~~~~~~~~~. While building module 'Core':. While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:. In file included from <module-includes>:2:. /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'. #include <string_view>. ~~~~~~~~^. Error: Error loading the default rootcling header files. [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o. ninja: build stopped: subcommand failed. ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7881
https://github.com/root-project/root/pull/7882:256,deployability,patch,patch,256,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:331,deployability,patch,patch,331,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:135,integrability,interfac,interface,135,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:135,interoperability,interfac,interface,135,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:306,interoperability,semant,semantics,306,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:135,modifiability,interfac,interface,135,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:67,safety,avoid,avoid,67,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:256,safety,patch,patch,256,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:331,safety,patch,patch,331,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:256,security,patch,patch,256,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:331,security,patch,patch,331,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:262,testability,simpl,simplifies,262,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7882:262,usability,simpl,simplifies,262,"Remove BasicXYZ; Minuit2 uses the Pimpl idiom with a shared_ptr to avoid frequent copies, but the implementation is not good. The full interface of each class is duplicated, which is not necessary and makes the code confusing and difficult to change. This patch simplifies the implementation but keeps the semantics the same. This patch is a precursor of some improvements that I have prepared.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7882
https://github.com/root-project/root/pull/7886:48,usability,help,help,48,"[PyROOT] Add __reduce__ method to ROOTFacade to help serialization tools; Fixes #6764 , see the comment with explanation there",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7886
https://github.com/root-project/root/pull/7886:67,usability,tool,tools,67,"[PyROOT] Add __reduce__ method to ROOTFacade to help serialization tools; Fixes #6764 , see the comment with explanation there",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7886
https://github.com/root-project/root/pull/7888:17,availability,ping,ping,17,"[webgui] let run ping.cxx from any place, update jsroot [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7888
https://github.com/root-project/root/pull/7888:42,deployability,updat,update,42,"[webgui] let run ping.cxx from any place, update jsroot [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7888
https://github.com/root-project/root/pull/7888:42,safety,updat,update,42,"[webgui] let run ping.cxx from any place, update jsroot [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7888
https://github.com/root-project/root/pull/7888:42,security,updat,update,42,"[webgui] let run ping.cxx from any place, update jsroot [skip-ci];",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7888
https://github.com/root-project/root/pull/7889:61,deployability,patch,patch,61,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:216,deployability,fail,failed,216,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:534,deployability,patch,patch,534,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:418,energy efficiency,Draw,Draw,418,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:490,integrability,sub,sub-leaf,490,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:633,integrability,sub,sub-leaf,633,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:506,interoperability,specif,specified,506,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:216,reliability,fail,failed,216,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:61,safety,patch,patch,61,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:534,safety,patch,patch,534,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:61,security,patch,patch,61,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/pull/7889:534,security,patch,patch,534,"[treereader] Try harder when looking for a leaf; Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7889
https://github.com/root-project/root/issues/7890:360,deployability,observ,observed,360,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:178,interoperability,standard,standardhypotestinvdemo-c-in-,178,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:307,interoperability,Standard,StandardHypoTestInvDemo,307,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:453,interoperability,xml,xml,453,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:555,interoperability,Standard,StandardHypoTestInvDemo,555,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:5,performance,Memor,Memory,5,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:156,performance,memor,memory-consumption-of-standardhypotestinvdemo-c-in-,156,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:341,performance,memor,memory,341,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:521,performance,time,time,521,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:667,performance,memor,memory,667,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:132,security,sign,significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-,132,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:360,testability,observ,observed,360,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:5,usability,Memor,Memory,5,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:156,usability,memor,memory-consumption-of-standardhypotestinvdemo-c-in-,156,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:341,usability,memor,memory,341,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/issues/7890:667,usability,memor,memory,667,"[RF] Memory leak when running FrequentistCalculator scan in RooStats; The problem has been reported in https://root-forum.cern.ch/t/significantly-increased-memory-consumption-of-standardhypotestinvdemo-c-in-6-20-06-compared-to-6-14-04/44405. When running the FrequentistCalculator scan in RooStats with the StandardHypoTestInvDemo.C a large memory increase is observed after 6.14. . To reproduce is enough to use the workspace created from the `example.xml` of the histfactory tutorial. Do for example : . ``` . /usr/bin/time --verbose root.exe -l -b -q ""StandardHypoTestInvDemo.C(\""example_combined_GaussExample_model.root\"")"". ```. Running bisect the cause of this memory increase is this PR: . #2866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7890
https://github.com/root-project/root/pull/7891:226,safety,input,input,226,Make the TFile layout doc visible in Ref Guide; This PR makes the TFile Layout documentation visible in. the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown. - Doxyfile have io/doc/TFile folder as input. - References/links between the pages have been setup. - The \tableofcontents Doxygen functionality has been turned ON. - Some typos have been fixed. Still two links need to be resolved:. http://root.cern.ch/root/RootDoc.html. http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/pull/7891:41,usability,Guid,Guide,41,Make the TFile layout doc visible in Ref Guide; This PR makes the TFile Layout documentation visible in. the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown. - Doxyfile have io/doc/TFile folder as input. - References/links between the pages have been setup. - The \tableofcontents Doxygen functionality has been turned ON. - Some typos have been fixed. Still two links need to be resolved:. http://root.cern.ch/root/RootDoc.html. http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/pull/7891:79,usability,document,documentation,79,Make the TFile layout doc visible in Ref Guide; This PR makes the TFile Layout documentation visible in. the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown. - Doxyfile have io/doc/TFile folder as input. - References/links between the pages have been setup. - The \tableofcontents Doxygen functionality has been turned ON. - Some typos have been fixed. Still two links need to be resolved:. http://root.cern.ch/root/RootDoc.html. http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/pull/7891:132,usability,Guid,Guide,132,Make the TFile layout doc visible in Ref Guide; This PR makes the TFile Layout documentation visible in. the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown. - Doxyfile have io/doc/TFile folder as input. - References/links between the pages have been setup. - The \tableofcontents Doxygen functionality has been turned ON. - Some typos have been fixed. Still two links need to be resolved:. http://root.cern.ch/root/RootDoc.html. http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/pull/7891:226,usability,input,input,226,Make the TFile layout doc visible in Ref Guide; This PR makes the TFile Layout documentation visible in. the Doxygen ROOT reference Guide. - The .txt file have been turned into markdown. - Doxyfile have io/doc/TFile folder as input. - References/links between the pages have been setup. - The \tableofcontents Doxygen functionality has been turned ON. - Some typos have been fixed. Still two links need to be resolved:. http://root.cern.ch/root/RootDoc.html. http://root.cern.ch/root/htmldoc/examples/Version302.news.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7891
https://github.com/root-project/root/issues/7893:242,deployability,depend,dependency,242,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:316,deployability,depend,depends,316,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:3916,deployability,resourc,resource-headers,3916, ClangDiagnosticAnalysis. [ 56%] Built target ClangAttrList. [ 56%] Built target ClangDiagnosticCrossTU. [ 56%] Built target ClangDiagnosticLex. [ 56%] Built target ClangDiagnosticDriver. [ 56%] Built target ClangDiagnosticCommon. [ 56%] Built target ClangDiagnosticParse. [ 56%] Built target ClangDiagnosticFrontend. [ 56%] Built target ClangDiagnosticSema. [ 56%] Built target ClangDiagnosticGroups. [ 56%] Built target ClangDiagnosticRefactoring. [ 56%] Built target ClangDiagnosticSerialization. [ 56%] Built target ClangAttrSubMatchRulesParserStringSwitches. [ 56%] Built target ClangAttrParsedAttrImpl. [ 56%] Built target ClangAttrSpellingListIndex. [ 56%] Built target ClangAttrParsedAttrKinds. [ 56%] Built target ClangAttrParsedAttrList. [ 56%] Built target ClangAttrParserStringSwitches. [ 56%] Built target ClangAttrTemplateInstantiate. [ 57%] Built target ClangAttrPCHWrite. [ 57%] Built target ClangAttrPCHRead. [ 57%] Built target ClangDriverOptions. [ 59%] Built target clang-resource-headers. [ 59%] Built target LLVMIRReader. [ 60%] Built target LLVMBitReader. [ 60%] Built target LLVMBitWriter. [ 61%] Built target LLVMInstrumentation. [ 61%] Built target LLVMAggressiveInstCombine. [ 61%] Built target LLVMGlobalISel. [ 61%] Built target LLVMSelectionDAG. [ 63%] Built target LLVMCore. [ 63%] Built target LLVMObjCARCOpts. [ 63%] Built target LLVMInstCombine. [ 64%] Built target LLVMAsmPrinter. [ 64%] Built target LLVMVectorize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:5365,deployability,version,version,5365,"rize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clang-tablegen-targets. [ 66%] Built target LLVMCoverage. [ 67%] Built target LLVMScalarOpts. [ 67%] Built target LLVMX86Disassembler. [ 67%] Built target LLVMX86Info. [ 67%] Built target LLVMNVPTXInfo. [ 67%] Built target LLVMNVPTXDesc. [ 67%] Built target LLVMX86AsmParser. [ 67%] Generating VCSVersion.inc. [ 67%] Built target LLVMX86Utils. [ 68%] Built target LLVMAnalysis. [ 67%] Built target LLVMX86Desc. -- Found Git: /usr/bin/git (found version ""2.31.1""). [ 68%] Built target LLVMNVPTXCodeGen. [ 68%] Built target obj.clangParse. [ 68%] Built target obj.clangASTMatchers. [ 69%] Built target ClangOpenCLBuiltinsImpl. [ 69%] Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built tar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:6464,deployability,Build,Building,6464,lt target obj.clangASTMatchers. [ 69%] Built target ClangOpenCLBuiltinsImpl. [ 69%] Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:6557,deployability,Version,Version,6557,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7532,deployability,depend,depend,7532,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:3916,energy efficiency,resourc,resource-headers,3916, ClangDiagnosticAnalysis. [ 56%] Built target ClangAttrList. [ 56%] Built target ClangDiagnosticCrossTU. [ 56%] Built target ClangDiagnosticLex. [ 56%] Built target ClangDiagnosticDriver. [ 56%] Built target ClangDiagnosticCommon. [ 56%] Built target ClangDiagnosticParse. [ 56%] Built target ClangDiagnosticFrontend. [ 56%] Built target ClangDiagnosticSema. [ 56%] Built target ClangDiagnosticGroups. [ 56%] Built target ClangDiagnosticRefactoring. [ 56%] Built target ClangDiagnosticSerialization. [ 56%] Built target ClangAttrSubMatchRulesParserStringSwitches. [ 56%] Built target ClangAttrParsedAttrImpl. [ 56%] Built target ClangAttrSpellingListIndex. [ 56%] Built target ClangAttrParsedAttrKinds. [ 56%] Built target ClangAttrParsedAttrList. [ 56%] Built target ClangAttrParserStringSwitches. [ 56%] Built target ClangAttrTemplateInstantiate. [ 57%] Built target ClangAttrPCHWrite. [ 57%] Built target ClangAttrPCHRead. [ 57%] Built target ClangDriverOptions. [ 59%] Built target clang-resource-headers. [ 59%] Built target LLVMIRReader. [ 60%] Built target LLVMBitReader. [ 60%] Built target LLVMBitWriter. [ 61%] Built target LLVMInstrumentation. [ 61%] Built target LLVMAggressiveInstCombine. [ 61%] Built target LLVMGlobalISel. [ 61%] Built target LLVMSelectionDAG. [ 63%] Built target LLVMCore. [ 63%] Built target LLVMObjCARCOpts. [ 63%] Built target LLVMInstCombine. [ 64%] Built target LLVMAsmPrinter. [ 64%] Built target LLVMVectorize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:242,integrability,depend,dependency,242,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:316,integrability,depend,depends,316,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:5365,integrability,version,version,5365,"rize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clang-tablegen-targets. [ 66%] Built target LLVMCoverage. [ 67%] Built target LLVMScalarOpts. [ 67%] Built target LLVMX86Disassembler. [ 67%] Built target LLVMX86Info. [ 67%] Built target LLVMNVPTXInfo. [ 67%] Built target LLVMNVPTXDesc. [ 67%] Built target LLVMX86AsmParser. [ 67%] Generating VCSVersion.inc. [ 67%] Built target LLVMX86Utils. [ 68%] Built target LLVMAnalysis. [ 67%] Built target LLVMX86Desc. -- Found Git: /usr/bin/git (found version ""2.31.1""). [ 68%] Built target LLVMNVPTXCodeGen. [ 68%] Built target obj.clangParse. [ 68%] Built target obj.clangASTMatchers. [ 69%] Built target ClangOpenCLBuiltinsImpl. [ 69%] Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built tar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:6557,integrability,Version,Version,6557,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7532,integrability,depend,depend,7532,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7220,interoperability,share,shared,7220,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:242,modifiability,depend,dependency,242,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:316,modifiability,depend,depends,316,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:5365,modifiability,version,version,5365,"rize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clang-tablegen-targets. [ 66%] Built target LLVMCoverage. [ 67%] Built target LLVMScalarOpts. [ 67%] Built target LLVMX86Disassembler. [ 67%] Built target LLVMX86Info. [ 67%] Built target LLVMNVPTXInfo. [ 67%] Built target LLVMNVPTXDesc. [ 67%] Built target LLVMX86AsmParser. [ 67%] Generating VCSVersion.inc. [ 67%] Built target LLVMX86Utils. [ 68%] Built target LLVMAnalysis. [ 67%] Built target LLVMX86Desc. -- Found Git: /usr/bin/git (found version ""2.31.1""). [ 68%] Built target LLVMNVPTXCodeGen. [ 68%] Built target obj.clangParse. [ 68%] Built target obj.clangASTMatchers. [ 69%] Built target ClangOpenCLBuiltinsImpl. [ 69%] Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built tar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:6557,modifiability,Version,Version,6557,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7532,modifiability,depend,depend,7532,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:3916,performance,resourc,resource-headers,3916, ClangDiagnosticAnalysis. [ 56%] Built target ClangAttrList. [ 56%] Built target ClangDiagnosticCrossTU. [ 56%] Built target ClangDiagnosticLex. [ 56%] Built target ClangDiagnosticDriver. [ 56%] Built target ClangDiagnosticCommon. [ 56%] Built target ClangDiagnosticParse. [ 56%] Built target ClangDiagnosticFrontend. [ 56%] Built target ClangDiagnosticSema. [ 56%] Built target ClangDiagnosticGroups. [ 56%] Built target ClangDiagnosticRefactoring. [ 56%] Built target ClangDiagnosticSerialization. [ 56%] Built target ClangAttrSubMatchRulesParserStringSwitches. [ 56%] Built target ClangAttrParsedAttrImpl. [ 56%] Built target ClangAttrSpellingListIndex. [ 56%] Built target ClangAttrParsedAttrKinds. [ 56%] Built target ClangAttrParsedAttrList. [ 56%] Built target ClangAttrParserStringSwitches. [ 56%] Built target ClangAttrTemplateInstantiate. [ 57%] Built target ClangAttrPCHWrite. [ 57%] Built target ClangAttrPCHRead. [ 57%] Built target ClangDriverOptions. [ 59%] Built target clang-resource-headers. [ 59%] Built target LLVMIRReader. [ 60%] Built target LLVMBitReader. [ 60%] Built target LLVMBitWriter. [ 61%] Built target LLVMInstrumentation. [ 61%] Built target LLVMAggressiveInstCombine. [ 61%] Built target LLVMGlobalISel. [ 61%] Built target LLVMSelectionDAG. [ 63%] Built target LLVMCore. [ 63%] Built target LLVMObjCARCOpts. [ 63%] Built target LLVMInstCombine. [ 64%] Built target LLVMAsmPrinter. [ 64%] Built target LLVMVectorize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:242,safety,depend,dependency,242,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:316,safety,depend,depends,316,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:3916,safety,resourc,resource-headers,3916, ClangDiagnosticAnalysis. [ 56%] Built target ClangAttrList. [ 56%] Built target ClangDiagnosticCrossTU. [ 56%] Built target ClangDiagnosticLex. [ 56%] Built target ClangDiagnosticDriver. [ 56%] Built target ClangDiagnosticCommon. [ 56%] Built target ClangDiagnosticParse. [ 56%] Built target ClangDiagnosticFrontend. [ 56%] Built target ClangDiagnosticSema. [ 56%] Built target ClangDiagnosticGroups. [ 56%] Built target ClangDiagnosticRefactoring. [ 56%] Built target ClangDiagnosticSerialization. [ 56%] Built target ClangAttrSubMatchRulesParserStringSwitches. [ 56%] Built target ClangAttrParsedAttrImpl. [ 56%] Built target ClangAttrSpellingListIndex. [ 56%] Built target ClangAttrParsedAttrKinds. [ 56%] Built target ClangAttrParsedAttrList. [ 56%] Built target ClangAttrParserStringSwitches. [ 56%] Built target ClangAttrTemplateInstantiate. [ 57%] Built target ClangAttrPCHWrite. [ 57%] Built target ClangAttrPCHRead. [ 57%] Built target ClangDriverOptions. [ 59%] Built target clang-resource-headers. [ 59%] Built target LLVMIRReader. [ 60%] Built target LLVMBitReader. [ 60%] Built target LLVMBitWriter. [ 61%] Built target LLVMInstrumentation. [ 61%] Built target LLVMAggressiveInstCombine. [ 61%] Built target LLVMGlobalISel. [ 61%] Built target LLVMSelectionDAG. [ 63%] Built target LLVMCore. [ 63%] Built target LLVMObjCARCOpts. [ 63%] Built target LLVMInstCombine. [ 64%] Built target LLVMAsmPrinter. [ 64%] Built target LLVMVectorize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7532,safety,depend,depend,7532,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:887,security,rsa,rsa,887,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:242,testability,depend,dependency,242,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:316,testability,depend,depends,316,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:3916,testability,resourc,resource-headers,3916, ClangDiagnosticAnalysis. [ 56%] Built target ClangAttrList. [ 56%] Built target ClangDiagnosticCrossTU. [ 56%] Built target ClangDiagnosticLex. [ 56%] Built target ClangDiagnosticDriver. [ 56%] Built target ClangDiagnosticCommon. [ 56%] Built target ClangDiagnosticParse. [ 56%] Built target ClangDiagnosticFrontend. [ 56%] Built target ClangDiagnosticSema. [ 56%] Built target ClangDiagnosticGroups. [ 56%] Built target ClangDiagnosticRefactoring. [ 56%] Built target ClangDiagnosticSerialization. [ 56%] Built target ClangAttrSubMatchRulesParserStringSwitches. [ 56%] Built target ClangAttrParsedAttrImpl. [ 56%] Built target ClangAttrSpellingListIndex. [ 56%] Built target ClangAttrParsedAttrKinds. [ 56%] Built target ClangAttrParsedAttrList. [ 56%] Built target ClangAttrParserStringSwitches. [ 56%] Built target ClangAttrTemplateInstantiate. [ 57%] Built target ClangAttrPCHWrite. [ 57%] Built target ClangAttrPCHRead. [ 57%] Built target ClangDriverOptions. [ 59%] Built target clang-resource-headers. [ 59%] Built target LLVMIRReader. [ 60%] Built target LLVMBitReader. [ 60%] Built target LLVMBitWriter. [ 61%] Built target LLVMInstrumentation. [ 61%] Built target LLVMAggressiveInstCombine. [ 61%] Built target LLVMGlobalISel. [ 61%] Built target LLVMSelectionDAG. [ 63%] Built target LLVMCore. [ 63%] Built target LLVMObjCARCOpts. [ 63%] Built target LLVMInstCombine. [ 64%] Built target LLVMAsmPrinter. [ 64%] Built target LLVMVectorize. [ 64%] Built target LLVMLinker. [ 64%] Built target LLVMCoroutines. [ 65%] Built target LLVMipo. [ 65%] Built target LLVMTransformUtils. [ 65%] Built target LLVMExecutionEngine. [ 65%] Built target LLVMLTO. [ 65%] Built target LLVMJITLink. [ 65%] Built target LLVMPasses. [ 65%] Built target LLVMAsmParser. [ 66%] Built target LLVMObject. [ 66%] Built target LLVMTarget. [ 66%] Built target LLVMProfileData. [ 66%] Built target LLVMRuntimeDyld. [ 66%] Built target X86CommonTableGen. [ 66%] Built target NVPTXCommonTableGen. [ 66%] Built target clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7532,testability,depend,depend,7532,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:81,usability,clear,clear,81,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:129,usability,behavi,behavior,129,"The world gets rebuilt after a small git checkout; ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. After checking out a small commit that only touches a gtest, `libCling` gets rebuilt because a dependency (`VCSRevision.h`) changes, which in turn means everything that depends on cling gets rebuilt:. ```. // ... snip ... [ 26%] Generating VCSRevision.h. [ 26%] Built target LLVMMCDisassembler. [ 26%] Built target LLVMOption. [ 26%] Built target LLVMMCParser. [ 26%] Built target LLVMRemarks. [ 26%] Built target clang-cmake-exports. [ 26%] Built target rconfigure. [ 27%] Built target obj.llvm-tblgen. [ 27%] Built target llvm_vcsrevision_h. [ 27%] Built target gitcommit. [ 27%] Built target LLVMDebugInfoMSF. [ 27%] Built target obj.clang-tblgen. [ 27%] Built target rootMan. [ 28%] Built target LLVMDebugInfoDWARF. [ 28%] Built target rsa. [ 28%] Built target LLVMDebugInfoCodeView. [ 28%] Built target haddMan. [ 28%] Built target LLVMMC. [ 28%] Built target hist2workspaceMan. [ 28%] Built target copy_pretty_printers. [ 28%] Built target rootclingMan. [ 28%] Built target ProofBenchPARFiles. [ 29%] Built target move_headers. [ 30%] Built target LLVMSupport. [ 30%] Built target Foundation_Stage1. [ 30%] Built target BaseTROOT. [ 30%] Built target Foundation. [ 30%] Built target clang-tblgen. [ 30%] Built target Clib. [ 30%] Built target llvm-tblgen. [ 30%] Built target Lz4. [ 30%] Built target TextInput. [ 30%] Built target Zstd. [ 30%] Built target Lzma. [ 30%] Built target Unix. [ 30%] Built target GuiCore. [ 30%] Built target Zip. [ 30%] Built target Cont. [ 30%] Built target Meta. [ 30%] Built target RootPcmObjs. [ 30%] Built target mathtext. [ 30%] Built target root. [ 30%] Built target rmkdepend. [ 30%] Built target AttributeCompatFuncTableGen. [ 30%] Built target rpdutil. [ 30%] Built target ClangAttrImpl. [ 30%] Built target intrinsics_gen. [ 30%] Built target ClangSACheckers. [ 30%] Built target InstCombineTableGen. [ 30",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:6505,usability,tool,tools,6505,uilt target ClangOpenCLBuiltinsImpl. [ 69%] Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7347,usability,behavi,behavior,7347,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/issues/7893:7365,usability,clear,clear,7365,Built target obj.clangLex. [ 69%] Built target LLVMCodeGen. [ 69%] Built target obj.clangEdit. [ 69%] Built target obj.clangRewrite. [ 69%] Built target clang-headers. [ 69%] Built target LLVMX86CodeGen. [ 69%] Built target obj.clangSerialization. [ 69%] Built target clangParse. [ 70%] Built target obj.clangAnalysis. [ 70%] Built target clangASTMatchers. [ 70%] Built target obj.clangDriver. [ 71%] Built target obj.clangRewriteFrontend. [ 71%] Built target clangEdit. [ 71%] Built target obj.clangFrontend. [ 71%] Built target clangLex. [ 71%] Built target clangRewrite. [ 71%] Built target obj.clangAST. [ 71%] Built target clangAnalysis. [ 71%] Built target clangSerialization. [ 71%] Built target LLVMOrcJIT. [ 71%] Built target obj.clingMetaProcessor. [ 71%] Built target clangRewriteFrontend. [ 71%] Built target obj.clingUtils. [ 71%] Built target clangFrontend. [ 71%] Built target clangDriver. [ 71%] Building CXX object interpreter/llvm/src/tools/clang/lib/Basic/CMakeFiles/obj.clangBasic.dir/Version.cpp.o. [ 72%] Built target obj.clangCodeGen. [ 72%] Built target clangAST. [ 72%] Built target obj.clangSema. [ 72%] Built target clingMetaProcessor. [ 72%] Built target clingUtils. [ 72%] Built target clangCodeGen. [ 72%] Built target clangSema. [ 72%] Built target obj.clingInterpreter. [ 72%] Built target clingInterpreter. [ 72%] Built target clad. [ 72%] Built target CLING. [ 72%] Built target LLVMRES. [ 72%] Built target Dictgen. [ 72%] Built target ClingUtils. [ 73%] Built target MetaCling. [ 73%] Built target obj.clangBasic. [ 73%] Linking CXX static library ../../../../lib/libclangBasic.a. [ 73%] Built target clangBasic. [ 73%] Linking CXX shared library ../../../lib/libCling.so. [ 73%] Linking CXX executable src/rootcling_stage1. // ... snip ... ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. Checking out a different revision of a given file should only trigger a rebuild of the targets that depend on that file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7893
https://github.com/root-project/root/pull/7894:155,deployability,depend,dependent,155,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:1,energy efficiency,core,core,1,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:155,integrability,depend,dependent,155,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:103,interoperability,format,formatting,103,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:142,interoperability,architectur,architecture,142,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:165,interoperability,format,format,165,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:216,interoperability,convers,conversion,216,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:155,modifiability,depend,dependent,155,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:155,safety,depend,dependent,155,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:263,security,loss,loss,263,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7894:155,testability,depend,dependent,155,"[core] Next bunch of changes for Win64; - Replace some more `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format). - Fix several `warning C4267: 'argument': conversion from 'size_t' to 'Ssiz_t', possible loss of data`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7894
https://github.com/root-project/root/pull/7898:17,modifiability,paramet,parameter,17,[metacling] Skip parameter packs as empty when default-instantiating template functions; Fixes https://github.com/root-project/root/pull/7630#issuecomment-819501708 (hopefully).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7898
https://github.com/root-project/root/pull/7898:27,modifiability,pac,packs,27,[metacling] Skip parameter packs as empty when default-instantiating template functions; Fixes https://github.com/root-project/root/pull/7630#issuecomment-819501708 (hopefully).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7898
https://github.com/root-project/root/pull/7899:36,interoperability,xml,xml,36,[TMVA] RReader: allow spectators in xml file; fixes bug reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7899
https://github.com/root-project/root/pull/7899:136,modifiability,variab,variables,136,[TMVA] RReader: allow spectators in xml file; fixes bug reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7899
https://github.com/root-project/root/issues/7900:1798,availability,error,error,1798,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2473,availability,error,error,2473,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:230,deployability,fail,fails,230,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2118,deployability,modul,module,2118,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:243,energy efficiency,model,model,243,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1692,energy efficiency,model,model,1692,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2157,energy efficiency,model,model,2157,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:296,interoperability,share,share,296,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1776,interoperability,xml,xml,1776,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2241,interoperability,xml,xml,2241,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:18,modifiability,variab,variables,18,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:180,modifiability,variab,variables,180,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2118,modifiability,modul,module,2118,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1798,performance,error,error,1798,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2473,performance,error,error,2473,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:230,reliability,fail,fails,230,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1633,safety,Test,TestAllMethods,1633,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1798,safety,error,error,1798,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2092,safety,input,input-,2092,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2118,safety,modul,module,2118,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2473,safety,error,error,2473,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:243,security,model,model,243,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1692,security,model,model,1692,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2157,security,model,model,2157,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1633,testability,Test,TestAllMethods,1633,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2048,testability,Trace,Traceback,2048,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:0,usability,Support,Support,0,"Support spectator variables in RReader; ### Explain what you would like to see improved. Originally reported in the forum [here](https://root-forum.cern.ch/t/rreader-and-spectator-variables/42844/3), `TMVA::Experimental::RReader` fails if the model was trained with any spectators. ### Optional: share how it could be improved. PR #7899 should be enough to fix this. ### To Reproduce. ```python. import ROOT as r. r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(5, 5)"").Define(""u"", ""gRandom->Gaus(5, 10)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1683,usability,Close,Close,1683,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:1798,usability,error,error,1798,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2092,usability,input,input-,2092,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2140,usability,Close,Close,2140,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/issues/7900:2473,usability,error,error,2473,"Snapshot(""atree"", ""sig.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(1, 3)"").Define(""u"", ""gRandom->Gaus(1, 6)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""bkg.root""). r.RDataFrame(1000).Define(""v"", ""gRandom->Gaus(-5, 10)"").Define(""u"", ""gRandom->Gaus(-5, 20)"").Define(""e"", ""rdfentry_"").Snapshot(""atree"", ""oth.root""). fsig = r.TFile.Open(""sig.root""). tsig = fsig.atree. fbkg = r.TFile.Open(""bkg.root""). tbkg = fbkg.atree. foth = r.TFile.Open(""oth.root""). toth = foth.atree. fout = r.TFile.Open(""out.root"", ""recreate""). dl = r.TMVA.DataLoader(""dataset""). dl.AddVariable(""v"", ""v"", """", ""F""). dl.AddVariable(""u"", ""u"", """", ""F""). dl.AddSpectator(""e"", ""entry number"", """"). dl.AddTree(tsig, ""sig""). dl.AddTree(tbkg, ""bkg""). dl.AddTree(toth, ""oth""). dl.PrepareTrainingAndTestTree("""", r""nTest_sig=0:nTest_bkg=0:nTest_oth=0:NormMode=NumEvents:!V:SplitSeed=100:SplitMode=Random""). fact = r.TMVA.Factory(""TMVAClassification"", fout, r""!V:!Silent:AnalysisType=Multiclass""). fact.BookMethod(. dl,. r.TMVA.Types.kBDT,. ""BDT"",. r""!H:!V:nTrees=500:BoostType=Grad"". r"":UseBaggedGrad"". ). fact.TrainAllMethods(). fact.TestAllMethods(). fact.EvaluateAllMethods(). fout.Close(). model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). ```. Ends with error:. ```. <FATAL> : Dataset[Default] : You declared 0 spectators in the Reader while there are 1 spectators declared in the file. ***> abort program execution. ---------------------------------------------------------------------------. TypeError Traceback (most recent call last). <ipython-input-1-cf70daeeb34f> in <module>. 34 . 35 fout.Close(). ---> 36 model = r.TMVA.Experimental.RReader(""dataset/weights/TMVAClassification_BDT.weights.xml""). TypeError: none of the 2 overloaded methods succeeded. Full details:. RReader::RReader(TMVA::Experimental::RReader&&) =>. TypeError: could not convert argument 1. RReader::RReader(const string& path) =>. runtime_error: FATAL error. ```. ### Setup. ROOT 6.22/06. macOS. conda-forge.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7900
https://github.com/root-project/root/pull/7901:13,availability,ping,ping,13,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,deployability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:103,energy efficiency,load,loads,103,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,integrability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,interoperability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,modifiability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:103,performance,load,loads,103,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,reliability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:25,safety,test,tests,25,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:36,safety,test,test,36,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,security,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:25,testability,test,tests,25,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:36,testability,test,test,36,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7901:48,testability,integr,integrity,48,[webgui] add ping.cxx to tests; Let test webgui integrity. - if THttpServer work properly. - if JSROOT loads on client side. - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7901
https://github.com/root-project/root/pull/7902:39,usability,support,support,39,[ntuple] Round out fixed-width integer support; Fill in support for fixed-width integer types: . * [x] std::int64_t. * [x] std::int8_t. * [x] std::int16_t. * [x] std::uint16_t. * [x] char (not guaranteed fixed-width but defacto 8-bit and annoyingly distinct from `std::int8_t` and `std::uint8_t`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7902
https://github.com/root-project/root/pull/7902:56,usability,support,support,56,[ntuple] Round out fixed-width integer support; Fill in support for fixed-width integer types: . * [x] std::int64_t. * [x] std::int8_t. * [x] std::int16_t. * [x] std::uint16_t. * [x] char (not guaranteed fixed-width but defacto 8-bit and annoyingly distinct from `std::int8_t` and `std::uint8_t`).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7902
https://github.com/root-project/root/issues/7903:158,deployability,contain,container,158,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:199,deployability,build,builds,199,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:378,deployability,patch,patch,378,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:877,deployability,contain,container,877,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1019,deployability,contain,container,1019,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1230,deployability,build,build,1230,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1270,deployability,fail,fail,1270,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1335,deployability,contain,container,1335,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1399,deployability,version,versions,1399,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:397,energy efficiency,core,core,397,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:439,energy efficiency,core,core,439,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1399,integrability,version,versions,1399,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1399,modifiability,version,versions,1399,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1270,reliability,fail,fail,1270,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:189,safety,sanit,sanitizer,189,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:378,safety,patch,patch,378,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:189,security,sanit,sanitizer,189,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:378,security,patch,patch,378,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:929,testability,assert,assert,929,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:1255,testability,assert,assertion,1255,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:232,usability,stop,stops,232,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/issues/7903:292,usability,behavi,behavior,292,"Invalid read in TClassEdit; - [x] Checked for duplicates. ### Describe the bug. TClassEdit reads behind the end of a static string to find the type of an STL container. This breaks address sanitizer builds, because asan immediately stops at the invalid read when rootcling runs. ### Expected behavior. It shouldn't read after the end of the string. ### To Reproduce. Apply this patch:. ```. --- a/core/foundation/src/TClassEdit.cxx. +++ b/core/foundation/src/TClassEdit.cxx. @@ -13,6 +13,7 @@. * For the list of contributors see $ROOTSYS/README/CREDITS. *. *************************************************************************/. . +#include <array>. #include <cstdio>. #include <cstdlib>. #include <cassert>. @@ -557,7 +558,9 @@ ROOT::ESTLType TClassEdit::STLKind(std::string_view type). . int TClassEdit::STLArgs(int kind). {. - static const char stln[] =// min number of container arguments. + constexpr int nKind = 14;. + assert(kind < nKind);. + static constexpr std::array<char, nKind> stln = // min number of container arguments. // vector, list, deque, map, multimap, set, multiset, bitset,. { 1, 1, 1, 1, 3, 3, 2, 2, 1,. // forward_list, unordered_set, unordered_multiset, unordered_map, unordered_multimap. ```. Then build in debug mode. The assertion will fail when RVec shows up in this function, since it is not an STL container. ### Setup. master. Sorry, I didn't check which other versions are affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7903
https://github.com/root-project/root/pull/7904:1117,availability,down,down,1117,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:190,deployability,log,log,190,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:258,deployability,log,log,258,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:352,deployability,build,build,352,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:4,performance,memor,memory,4,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1034,performance,memor,memory,1034,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:190,safety,log,log,190,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:258,safety,log,log,258,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1259,safety,compl,complicated,1259,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:190,security,log,log,190,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:258,security,log,log,258,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1259,security,compl,complicated,1259,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:190,testability,log,log,190,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:258,testability,log,log,258,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1227,testability,understand,understand,1227,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:4,usability,memor,memory,4,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1034,usability,memor,memory,1034,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/pull/7904:1202,usability,document,documentation,1202,"Fix memory leaks; Fixed three leaks here:. - TSystem. - Metacling. - RooStats. Leaks before fixes (using `ASAN_OPTIONS=detect_leaks=1 LSAN_OPTIONS=max_leaks=-1 root.exe ...`):. [lsan_before.log](https://github.com/root-project/root/files/6326991/lsan_before.log). After fixes:. [Don't have it yet, because after rebasing, #7903 and #6577 broke my asan build. There are leaks in cling, though]. . @Axel-Naumann:. Please check the first two commits. One needed a shared_ptr or you need a proper copy constructor. I leave it to you to decide if the shared_ptr is the best choice here. @guitargeek @lmoneta :. Since I waved the magic `unique_ptr` wand on ToyMCSampler anyway, I added a second commit to take it all the way. I think it would be nice if you backported at least the fix of the leak (the smaller commit), and the larger one can just go in master for a better future. See #7890 regarding the ToyMCSampler leak and where backports are needed. I will leave it open. Finding those leaks was a bit trickier, because RooFit uses a memory pool. To find those RooArgSet leaks,. - you switch off the mempool. - track down the leak. - switch it on again. I added two commits mostly for @guitargeek with documentation for you to understand why things are a bit complicated here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7904
https://github.com/root-project/root/issues/7905:272,availability,error,error,272,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:736,availability,state,statements,736,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:175,deployability,instal,install,175,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:221,deployability,instal,install,221,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:376,deployability,depend,dependent,376,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:424,deployability,instal,install,424,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:376,integrability,depend,dependent,376,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:736,integrability,state,statements,736,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:610,interoperability,standard,standard,610,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:376,modifiability,depend,dependent,376,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:272,performance,error,error,272,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:272,safety,error,error,272,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:376,safety,depend,dependent,376,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:376,testability,depend,dependent,376,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/issues/7905:272,usability,error,error,272,"sqrt without std:: in Math/GenVector/PxPyPzE4D.h; Hi,. While trying to compile some code which uses ROOT::Math::PxPyPzMVector, I run into. ```. In file included from v6-22-06/install/include/Math/Vector4D.h:12:. v6-22-06/install/include/Math/GenVector/PxPyPzE4D.h:154:17: error: call to function 'sqrt' that is neither visible in the template definition nor found by argument-dependent lookup. return sqrt(mm);. ^. v6-22-06/install/include/Math/GenVector/PxPyPzM4D.h:108:14: note: in instantiation of member function 'ROOT::Math::PxPyPzE4D<double>::M' requested here. fM = v.M();. ```. In the header files all standard functions should be prefixed with `std::`. I guess this is a remnant from days when there were `using namespace std` statements in the headers... Cheers,. Antoni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7905
https://github.com/root-project/root/pull/7907:69,energy efficiency,alloc,allocation,69,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:638,energy efficiency,alloc,allocation,638,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:702,energy efficiency,sustainab,sustainable,702,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:745,energy efficiency,model,model,745,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:735,modifiability,reu,reuse,735,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:62,performance,memor,memory,62,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:631,performance,memor,memory,631,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:668,performance,perform,performance-critical,668,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:861,reliability,doe,doesn,861,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:46,safety,avoid,avoiding,46,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:652,safety,avoid,avoided,652,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:406,security,sign,significant,406,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:745,security,model,model,745,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:62,usability,memor,memory,62,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:353,usability,navigat,navigator,353,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:631,usability,memor,memory,631,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:668,usability,perform,performance-critical,668,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:1056,usability,navigat,navigator,1056,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7907:1160,usability,navigat,navigator,1160,"[RF] Speed up RooProdPdf::factorizeProduct by avoiding manual memory allocation; In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7907
https://github.com/root-project/root/pull/7908:91,availability,error,error,91,Added missing include for std::string; Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7908
https://github.com/root-project/root/pull/7908:91,performance,error,error,91,Added missing include for std::string; Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7908
https://github.com/root-project/root/pull/7908:91,safety,error,error,91,Added missing include for std::string; Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7908
https://github.com/root-project/root/pull/7908:91,usability,error,error,91,Added missing include for std::string; Solved missing include of std::string referenced in error handling. Needed to compile using clang and libc++,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7908
https://github.com/root-project/root/pull/7909:418,reliability,doe,doesn,418,"Sqrt issue; This PR should solve [this](https://github.com/root-project/root/issues/7905) issue. (Closes #7905). I looked for all of the standars library functions in the file, but std::sqrt() seemed to be the only one (not even std::cout was present). I accidentally added another commit to this branch, but I reverted that, so this pr only fixed the named issue. This *should* solve the issue, but let me know if it doesn't. . Kind Regards,. Advait",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7909
https://github.com/root-project/root/pull/7909:255,safety,accid,accidentally,255,"Sqrt issue; This PR should solve [this](https://github.com/root-project/root/issues/7905) issue. (Closes #7905). I looked for all of the standars library functions in the file, but std::sqrt() seemed to be the only one (not even std::cout was present). I accidentally added another commit to this branch, but I reverted that, so this pr only fixed the named issue. This *should* solve the issue, but let me know if it doesn't. . Kind Regards,. Advait",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7909
https://github.com/root-project/root/pull/7909:98,usability,Close,Closes,98,"Sqrt issue; This PR should solve [this](https://github.com/root-project/root/issues/7905) issue. (Closes #7905). I looked for all of the standars library functions in the file, but std::sqrt() seemed to be the only one (not even std::cout was present). I accidentally added another commit to this branch, but I reverted that, so this pr only fixed the named issue. This *should* solve the issue, but let me know if it doesn't. . Kind Regards,. Advait",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7909
https://github.com/root-project/root/pull/7910:43,availability,operat,operator,43,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:123,availability,operat,operator,123,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:160,availability,error,errors,160,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:195,availability,operat,operator,195,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:314,availability,operat,operators,314,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:586,availability,error,error,586,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:433,deployability,releas,release,433,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:559,energy efficiency,current,current,559,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:361,interoperability,compatib,compatibility,361,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:160,performance,error,errors,160,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:586,performance,error,error,586,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:442,reliability,doe,doesn,442,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:160,safety,error,errors,160,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:392,safety,avoid,avoid,392,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:586,safety,error,error,586,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:160,usability,error,errors,160,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:351,usability,user,user,351,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:407,usability,user,user,407,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7910:586,usability,error,error,586,"[RF] Implement move constructor/assignment operator of RooLinkedListIter; Setting the move constructor and move assignment operator to = default. causes linker errors because the copy assignment operator is not. implemented in the TIterator base class. Having the RooLinkedListIter move constructor and assignment operators. work is important to keep user code compatibility. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24 because problem exists only since https://github.com/root-project/root/pull/7641). With the current master, the linker error can be reproduces like this;. ```C++. void iterator_test() {. RooArgSet argSet1;. RooArgSet argSet2;. RooLinkedListIter iter{argSet1.iterator()};. iter = argSet2.iterator();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7910
https://github.com/root-project/root/pull/7911:173,deployability,releas,release,173,[RF] Rename RooHistFunc::getObservables; Rename RooHistFunc::getObservables to not hide. RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/pull/7911:182,reliability,doe,doesn,182,[RF] Rename RooHistFunc::getObservables; Rename RooHistFunc::getObservables to not hide. RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/pull/7911:132,safety,avoid,avoid,132,[RF] Rename RooHistFunc::getObservables; Rename RooHistFunc::getObservables to not hide. RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/pull/7911:147,usability,user,user,147,[RF] Rename RooHistFunc::getObservables; Rename RooHistFunc::getObservables to not hide. RooAbsArg::getObservables. This is done to avoid breaking user code in the upcoming release (doesn't affect ROOT 6.24).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7911
https://github.com/root-project/root/issues/7912:382,deployability,fail,fails,382,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:97,integrability,discover,discovered,97,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:39,interoperability,incompatib,incompatibility,39,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:97,interoperability,discover,discovered,97,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:130,interoperability,compatib,compatibility,130,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:382,reliability,fail,fails,382,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:186,testability,Simpl,Simply,186,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:467,testability,trace,traced,467,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:97,usability,discov,discovered,97,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/issues/7912:186,usability,Simpl,Simply,186,"TStreamerInfo Crash - V5 File Backward incompatibility introduced somewhere since 6.22.00; We've discovered a bug in the backward compatibility of ROOT, which we hope can be fixed ASAP. Simply opening the attached root file (`root workspace. [workspace.root.zip](https://github.com/root-project/root/files/6334250/workspace.root.zip). .root` or otherwise) works fine in 6.22.00 but fails in 6.22.06 and master. **ROOT Crashes** which is definitely a bug, right? I've traced the problem to https://github.com/root-project/root/blob/94a9ef70c5df97b4144a2963111702a0dcb65214/io/io/src/TStreamerInfo.cxx#L1594 ... the problem is that `old->GetValueClass()` ends up being a nullptr. Something was introduced into 6.22 branch and master branch in the past 12 months that makes this null. I am hoping a developer working on this area of the project will have an idea what's happened here! Thanks! Will",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7912
https://github.com/root-project/root/pull/7914:60,interoperability,format,formatting,60,[geom] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7914
https://github.com/root-project/root/pull/7915:16,performance,memor,memory,16,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7915
https://github.com/root-project/root/pull/7915:8,safety,Prevent,Prevent,8,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7915
https://github.com/root-project/root/pull/7915:8,security,Preven,Prevent,8,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7915
https://github.com/root-project/root/pull/7915:16,usability,memor,memory,16,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7915
https://github.com/root-project/root/pull/7916:68,deployability,patch,patch,68,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:223,deployability,fail,failed,223,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:541,deployability,patch,patch,541,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:425,energy efficiency,Draw,Draw,425,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:497,integrability,sub,sub-leaf,497,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:640,integrability,sub,sub-leaf,640,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:513,interoperability,specif,specified,513,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:223,reliability,fail,failed,223,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:68,safety,patch,patch,68,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:541,safety,patch,patch,541,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:68,security,patch,patch,68,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7916:541,security,patch,patch,541,"[treereader] Try harder when looking for a leaf (6.24); Before this patch, given a TTree with a branch with name different. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. TTreeReaderValue failed to retrieve the leaf when the named passed. to the constructor was just ""NUD_total_ADC"" (while it worked fine. with ""NUD_total_ADC.nud_total_adc""). In comparison, in a similar. situation `TTree::Draw` ""tries harder"" and it assumes that the. desired leaf is the first sub-leaf of the specified branch. With this patch, TTreeReaderValue tries `FindLeaf` after `GetLeaf`. and as a last resort it picks the branch sub-leaf if it exists and. it is unique. This fixes #6881.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7916
https://github.com/root-project/root/pull/7917:18,usability,user,user,18,[cmake] Allow the user to set CMAKE_(C|CXX)_FLAGS_*; Fixes #6577,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7917
https://github.com/root-project/root/pull/7918:282,availability,avail,available,282,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:83,deployability,patch,patch,83,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:535,deployability,patch,patch,535,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:400,energy efficiency,Draw,Draw,400,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:491,integrability,sub,sub-leaf,491,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:635,integrability,sub,sub-leaf,635,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:507,interoperability,specif,specified,507,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:282,reliability,availab,available,282,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:32,safety,valid,valid,32,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:83,safety,patch,patch,83,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:282,safety,avail,available,282,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:535,safety,patch,patch,535,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:589,safety,valid,valid,589,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:83,security,patch,patch,83,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:282,security,availab,available,282,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7918:535,security,patch,patch,535,"[DF] Add branch name to list of valid column names if it has one leaf; Before this patch, given a TTree with a branch with name _different_. from its leaf, e.g. like this:. ```. *Br 0 :NUD_total_ADC : nud_total_adc/D. ```. RDataFrame only added ""branchname.leafname"" to the list of available. columns (i.e. ""NUD_total_ADC.nud_total_adc"" in the example). In comparison, in a similar situation `TTree::Draw` also accepts. just ""NUD_total_ADC"" as it assumes that the desired leaf is the. first sub-leaf of the specified branch. With this patch, RDataFrame also considers ""NUD_total_ADC"" as a valid. column name as long as it has only one sub-leaf. This, together with previous fixes in TTreeReader, fixes ROOT-9558.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7918
https://github.com/root-project/root/pull/7919:32,safety,valid,valid,32,[DF] Add branch name to list of valid column names if it has one leaf (v6.24); This is a backport of #7918,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7919
https://github.com/root-project/root/pull/7920:257,deployability,contain,contains,257,"[IO] Fix out of bounds read in TClassEdit; When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,. which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7920:54,performance,I/O,I/O,54,"[IO] Fix out of bounds read in TClassEdit; When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,. which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7920:171,safety,compl,complains,171,"[IO] Fix out of bounds read in TClassEdit; When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,. which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7920:99,security,access,accessing,99,"[IO] Fix out of bounds read in TClassEdit; When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,. which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7920:171,security,compl,complains,171,"[IO] Fix out of bounds read in TClassEdit; When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes https://github.com/root-project/root/issues/7903,. which contains more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7920
https://github.com/root-project/root/pull/7922:336,deployability,observ,observed,336,"Use New Roofit range based iterators in RooStats::DetailedOutputAggregator; As shown in #7631 this could fix some potential memory leak in DetailedOutputAgregator, with a better usage of TIterators . The DetailedOutputAggregator class is used heavily when running toys with ToyMCSampler and it might be responsible of some of the leaks observed in #7890.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7922
https://github.com/root-project/root/pull/7922:124,performance,memor,memory,124,"Use New Roofit range based iterators in RooStats::DetailedOutputAggregator; As shown in #7631 this could fix some potential memory leak in DetailedOutputAgregator, with a better usage of TIterators . The DetailedOutputAggregator class is used heavily when running toys with ToyMCSampler and it might be responsible of some of the leaks observed in #7890.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7922
https://github.com/root-project/root/pull/7922:336,testability,observ,observed,336,"Use New Roofit range based iterators in RooStats::DetailedOutputAggregator; As shown in #7631 this could fix some potential memory leak in DetailedOutputAgregator, with a better usage of TIterators . The DetailedOutputAggregator class is used heavily when running toys with ToyMCSampler and it might be responsible of some of the leaks observed in #7890.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7922
https://github.com/root-project/root/pull/7922:124,usability,memor,memory,124,"Use New Roofit range based iterators in RooStats::DetailedOutputAggregator; As shown in #7631 this could fix some potential memory leak in DetailedOutputAgregator, with a better usage of TIterators . The DetailedOutputAggregator class is used heavily when running toys with ToyMCSampler and it might be responsible of some of the leaks observed in #7890.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7922
https://github.com/root-project/root/pull/7923:31,usability,user,user,31,[skip-ci][DF] Give priority to user provided npartitions; 6.24 backport of https://github.com/root-project/root/pull/7841,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7923
https://github.com/root-project/root/pull/7924:221,deployability,contain,contains,221,"[IO] Fix out of bounds read in TClassEdit (6.24); When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes #7903,. which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7924:61,performance,I/O,I/O,61,"[IO] Fix out of bounds read in TClassEdit (6.24); When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes #7903,. which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7924:178,safety,compl,complains,178,"[IO] Fix out of bounds read in TClassEdit (6.24); When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes #7903,. which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7924:106,security,access,accessing,106,"[IO] Fix out of bounds read in TClassEdit (6.24); When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes #7903,. which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7924:178,security,compl,complains,178,"[IO] Fix out of bounds read in TClassEdit (6.24); When doing I/O of RVec objects, TClassEdit::STLArgs was accessing. an element one after the end of a static array. asan rightly complains. This commit fixes #7903,. which contains more details. This PR is a backport of #7920",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7924
https://github.com/root-project/root/pull/7925:203,usability,user,user-images,203,"Deleting a chunk of repeated comment; Deleting a chunk of repeated comment in the description of TH1::GetMean(). <img width=""623"" alt=""2021-04-19 22_54_28-ROOT_ TH1 Class Reference - Opera"" src=""https://user-images.githubusercontent.com/7541582/115295579-94c90100-a162-11eb-9c6c-0115893c3b9a.png"">.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7925
https://github.com/root-project/root/pull/7926:573,deployability,updat,updated,573,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:507,integrability,compon,component,507,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:534,integrability,rout,routine,534,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:507,interoperability,compon,component,507,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:507,modifiability,compon,component,507,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:573,safety,updat,updated,573,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7926:573,security,updat,updated,573,"Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7926
https://github.com/root-project/root/pull/7927:13,deployability,Instal,Install,13,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:24,deployability,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:65,deployability,instal,install,65,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:157,deployability,build,build,157,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:301,deployability,modul,modulemap,301,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:368,deployability,build,build,368,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:385,deployability,modul,modules,385,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:456,deployability,patch,patch,456,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:514,deployability,upgrad,upgrade,514,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:545,deployability,modul,module,545,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:443,interoperability,share,shared,443,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:24,modifiability,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:301,modifiability,modul,modulemap,301,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:385,modifiability,modul,modules,385,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:410,modifiability,responsibil,responsibility,410,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:514,modifiability,upgrad,upgrade,514,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:545,modifiability,modul,module,545,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:170,reliability,doe,does,170,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:268,reliability,doe,does,268,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:24,safety,modul,modulemap,24,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:301,safety,modul,modulemap,301,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:385,safety,modul,modules,385,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:456,safety,patch,patch,456,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:545,safety,modul,module,545,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7927:456,security,patch,patch,456,"[cxxmodules] Install vc.modulemap unconditionally.; Some systems install Vc under /usr/include which makes it reachable from within. rootcling, however, the build system does not find it and Vc_FOUND is not set. In that case rootcling finds the relevant Vc header but does not find the. corresponding modulemap to match. This case is a classic example of a borderline build system/C++ modules issue. where the responsibility for setting up is shared. This patch should address a recent issue coming from the llvm9 upgrade where. we also added a module for Vc. (cherry picked from commit 06066cc876832a64dcb5650578a0cd99798e34ab)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7927
https://github.com/root-project/root/pull/7930:20,deployability,Updat,Update,20,[DOC][NFC][skip-ci] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7930
https://github.com/root-project/root/pull/7930:31,deployability,releas,release,31,[DOC][NFC][skip-ci] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7930
https://github.com/root-project/root/pull/7930:20,safety,Updat,Update,20,[DOC][NFC][skip-ci] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7930
https://github.com/root-project/root/pull/7930:20,security,Updat,Update,20,[DOC][NFC][skip-ci] Update RDF release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7930
https://github.com/root-project/root/pull/7931:31,availability,error,error,31,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:60,deployability,build,building,60,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:37,integrability,messag,message,37,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:37,interoperability,messag,message,37,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:31,performance,error,error,31,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:31,safety,error,error,31,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7931:31,usability,error,error,31,"[DF] Use TLeaf::GetFullName in error message; ..rather than building the leaf name ""by hand"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7931
https://github.com/root-project/root/pull/7932:708,deployability,modul,modules,708,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:43,energy efficiency,optim,optimisation,43,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:359,integrability,sub,substrings,359,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:74,modifiability,variab,variables,74,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:134,modifiability,variab,variables,134,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:261,modifiability,variab,variables,261,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:379,modifiability,variab,variables,379,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:708,modifiability,modul,modules,708,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:127,performance,cach,cache,127,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:708,safety,modul,modules,708,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:148,usability,user,users,148,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:222,usability,user,users,222,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/pull/7932:424,usability,user,users,424,"[CMake] Remove force overwrite of compiler optimisation flags.; In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache. variables, so users can set them from outside. ROOT, however, FORCE. overwrote them, so users cannot change anything. Now, the variables are not set by ROOT at all, we use the CMake. defaults. It is fine to append or replace substrings, but the variables should NOT. be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like. this:. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7932
https://github.com/root-project/root/issues/7933:5,performance,Memor,Memory,5,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:51,performance,memor,memory,51,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:157,performance,memor,memory,157,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:416,performance,memor,memory,416,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:206,safety,test,testMemPool,206,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:123,testability,simpl,simple,123,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:206,testability,test,testMemPool,206,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:5,usability,Memor,Memory,5,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:51,usability,memor,memory,51,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:123,usability,simpl,simple,123,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:157,usability,memor,memory,157,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/issues/7933:416,usability,memor,memory,416,"[RF] Memory leak when using MemPoolForRooSets; The memory leak reported in #7890 is related to use MemPoolForRooSets. This simple code shows the increase of memory when using MemPoolForRooSets. . ```. void testMemPool() {. RooRealVar x(""x"",""x"",0,10);. RooRealVar y(""y"",""x"",0,10);. ProcInfo_t pinfo; . for (int i = 0; i < 1000000000; ++i) {. if (i % 100000 == 0) {. gSystem->GetProcInfo(&pinfo);. std::cout << i << "" memory usage "" << pinfo.fMemResident << "" "" << pinfo.fMemVirtual << std::endl;. }. auto s1 = new RooArgSet(x,y);. delete s1;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7933
https://github.com/root-project/root/pull/7935:164,energy efficiency,alloc,allocated,164,"[RF] Deallocate memory owned by empty MemPoolForRooSets Arenas; If an arena in the MemPoolForRooSets is not referenced anymore, it. should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/pull/7935:16,performance,memor,memory,16,"[RF] Deallocate memory owned by empty MemPoolForRooSets Arenas; If an arena in the MemPoolForRooSets is not referenced anymore, it. should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/pull/7935:150,performance,memor,memory,150,"[RF] Deallocate memory owned by empty MemPoolForRooSets Arenas; If an arena in the MemPoolForRooSets is not referenced anymore, it. should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/pull/7935:16,usability,memor,memory,16,"[RF] Deallocate memory owned by empty MemPoolForRooSets Arenas; If an arena in the MemPoolForRooSets is not referenced anymore, it. should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/pull/7935:150,usability,memor,memory,150,"[RF] Deallocate memory owned by empty MemPoolForRooSets Arenas; If an arena in the MemPoolForRooSets is not referenced anymore, it. should delete the memory it has allocated. This addresses GitHub issue https://github.com/root-project/root/issues/7933.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7935
https://github.com/root-project/root/issues/7936:5,availability,failur,failures,5,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:137,availability,failur,failures,137,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1467,availability,failur,failures,1467,"ke -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2430,availability,failur,failures,2430,".txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2644,availability,ERROR,ERROR,2644,"rial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3757,availability,failur,failure,3757,"---------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4148,availability,Error,Error,4148,"oaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4283,availability,Error,Error,4283,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4345,availability,error,error,4345,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4924,availability,error,error,4924,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4967,availability,error,error,4967,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5,deployability,fail,failures,5,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:65,deployability,updat,updating,65,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:137,deployability,fail,failures,137,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:207,deployability,version,version,207,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:368,deployability,build,build,368,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1467,deployability,fail,failures,1467,"ke -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1520,deployability,FAIL,FAILED,1520,"LE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1573,deployability,Fail,Failed,1573,"=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1627,deployability,Fail,Failed,1627,"l-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1685,deployability,Fail,Failed,1685,"""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1748,deployability,Fail,Failed,1748,"pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1815,deployability,Fail,Failed,1815,"F"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Trac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1861,deployability,Fail,Failed,1861,"-Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1923,deployability,Fail,Failed,1923,"tures were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1979,deployability,Fail,Failed,1979,"e builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2045,deployability,Fail,Failed,2045,"clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2097,deployability,Fail,Failed,2097," gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2151,deployability,Fail,Failed,2151,"bc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2199,deployability,Fail,Failed,2199,"roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2260,deployability,version,version,2260,"qlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that bec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2282,deployability,configurat,configuration,2282,"mva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2385,deployability,build,build,2385,"com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2430,deployability,fail,failures,2430,".txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2625,deployability,fail,fails,2625,"ailed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3121,deployability,fail,fails,3121,"oot-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3282,deployability,version,versions,3282,"iguration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3327,deployability,instal,installed,3327,"se ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3385,deployability,build,build,3385,"ld with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3426,deployability,automat,automatically,3426,"lures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3460,deployability,instal,installed,3460,"ps://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3561,deployability,configurat,configuration,3561,"ngs to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3665,deployability,depend,dependencies,3665,"load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3757,deployability,fail,failure,3757,"---------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4044,deployability,Fail,Failed,4044,"und not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4155,deployability,fail,failed,4155,"n purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you hav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4302,deployability,build,build,4302,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4408,deployability,fail,fail,4408,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4576,deployability,build,build,4576,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4712,deployability,build,build,4712,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4781,deployability,version,version,4781,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4889,deployability,build,build,4889,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5112,deployability,version,version,5112,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:772,energy efficiency,gpu,gpu,772,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1284,energy efficiency,cpu,cpu,1284,"C 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a conf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1562,energy efficiency,load,load-libs,1562,""" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1595,energy efficiency,core,core-metacling-test-TClingTest,1595,"-Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-im",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2615,energy efficiency,load,load-libs,2615,"gTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2713,energy efficiency,load,loaded,2713,"n-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3150,energy efficiency,load,loaded,3150,"iled). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4165,energy efficiency,alloc,allocate,4165,"please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:207,integrability,version,version,207,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2260,integrability,version,version,2260,"qlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that bec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2282,integrability,configur,configuration,2282,"mva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3282,integrability,version,versions,3282,"iguration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3561,integrability,configur,configuration,3561,"ngs to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3665,integrability,depend,dependencies,3665,"load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3878,integrability,configur,configured,3878,"/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4334,integrability,messag,message,4334,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4357,integrability,Sub,Subprocess,4357,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4781,integrability,version,version,4781,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5112,integrability,version,version,5112,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1256,interoperability,share,shared,1256,"a657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1335,interoperability,xml,xml,1335,"g everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2875,interoperability,bind,bindings,2875,"oottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4334,interoperability,messag,message,4334,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4551,interoperability,share,shared,4551,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5020,interoperability,mismatch,mismatch,5020,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:207,modifiability,version,version,207,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2260,modifiability,version,version,2260,"qlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that bec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2282,modifiability,configur,configuration,2282,"mva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2875,modifiability,bind,bindings,2875,"oottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3282,modifiability,version,versions,3282,"iguration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3561,modifiability,configur,configuration,3561,"ngs to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3665,modifiability,depend,dependencies,3665,"load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3878,modifiability,configur,configured,3878,"/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4781,modifiability,version,version,4781,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5112,modifiability,version,version,5112,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5,performance,failur,failures,5,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:137,performance,failur,failures,137,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:772,performance,gpu,gpu,772,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1284,performance,cpu,cpu,1284,"C 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a conf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1467,performance,failur,failures,1467,"ke -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1562,performance,load,load-libs,1562,""" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2430,performance,failur,failures,2430,".txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2615,performance,load,load-libs,2615,"gTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2644,performance,ERROR,ERROR,2644,"rial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2713,performance,load,loaded,2713,"n-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3150,performance,load,loaded,3150,"iled). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3757,performance,failur,failure,3757,"---------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4148,performance,Error,Error,4148,"oaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4174,performance,memor,memory,4174,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4236,performance,memor,memory,4236,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4283,performance,Error,Error,4283,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4345,performance,error,error,4345,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4924,performance,error,error,4924,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4967,performance,error,error,4967,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:5,reliability,fail,failures,5,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:137,reliability,fail,failures,137,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1467,reliability,fail,failures,1467,"ke -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1520,reliability,FAIL,FAILED,1520,"LE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1573,reliability,Fail,Failed,1573,"=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1627,reliability,Fail,Failed,1627,"l-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1685,reliability,Fail,Failed,1685,"""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportL",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1748,reliability,Fail,Failed,1748,"pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1815,reliability,Fail,Failed,1815,"F"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Trac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1861,reliability,Fail,Failed,1861,"-Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1923,reliability,Fail,Failed,1923,"tures were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1979,reliability,Fail,Failed,1979,"e builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2045,reliability,Fail,Failed,2045,"clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Fou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2097,reliability,Fail,Failed,2097," gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2151,reliability,Fail,Failed,2151,"bc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is load",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2199,reliability,Fail,Failed,2199,"roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2430,reliability,fail,failures,2430,".txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automati",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2625,reliability,fail,fails,2625,"ailed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3121,reliability,fail,fails,3121,"oot-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3757,reliability,fail,failure,3757,"---------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4044,reliability,Fail,Failed,4044,"und not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4155,reliability,fail,failed,4155,"n purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you hav",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4408,reliability,fail,fail,4408,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:0,safety,Test,Test,0,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:65,safety,updat,updating,65,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:132,safety,test,test,132,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:375,safety,except,except,375,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1069,safety,except,exceptions,1069,"ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1462,safety,test,test,1462,". $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1514,safety,test,tests,1514,"ECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1610,safety,test,test-TClingTest,1610,"=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-loa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2235,safety,test,tests,2235,"xmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2363,safety,test,tests,2363,"e.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2554,safety,test,test,2554,"mport-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2584,safety,Test,Test,2584," - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2644,safety,ERROR,ERROR,2644,"rial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2698,safety,Test,Test,2698,"- roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2906,safety,test,test,2906,"sion_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't k",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2965,safety,Except,Exception,2965,"napshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspectio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3034,safety,Except,Exception,3034,"lumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection .........",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3116,safety,test,test,3116,"test-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3494,safety,avoid,avoided,3494,"/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3665,safety,depend,dependencies,3665,"load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3711,safety,Test,Test,3711,"loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3802,safety,test,tested,3802,"-------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3842,safety,permiss,permissions,3842,". File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3978,safety,Test,Test,3978,"d not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4148,safety,Error,Error,4148,"oaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4283,safety,Error,Error,4283,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4345,safety,error,error,4345,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4398,safety,test,tests,4398,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4924,safety,error,error,4924,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4967,safety,error,error,4967,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:65,security,updat,updating,65,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1270,security,ssl,ssl,1270,"a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2282,security,configur,configuration,2282,"mva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3561,security,configur,configuration,3561,"ngs to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3878,security,configur,configured,3878,"/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:0,testability,Test,Test,0,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:132,testability,test,test,132,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1462,testability,test,test,1462,". $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1514,testability,test,tests,1514,"ECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/outp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:1610,testability,test,test-TClingTest,1610,"=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-loa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2235,testability,test,tests,2235,"xmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2363,testability,test,tests,2363,"e.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2554,testability,test,test,2554,"mport-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2584,testability,Test,Test,2584," - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2698,testability,Test,Test,2698,"- roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2814,testability,Trace,Traceback,2814,"ed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2906,testability,test,test,2906,"sion_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't k",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3116,testability,test,test,3116,"test-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3426,testability,automat,automatically,3426,"lures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3665,testability,depend,dependencies,3665,"load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3711,testability,Test,Test,3711,"loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3802,testability,test,tested,3802,"-------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3978,testability,Test,Test,3978,"d not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4398,testability,test,tests,4398,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:433,usability,command,command,433,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:963,usability,support,support,963,"Test failures with ROOT master on Gentoo; I am in the process of updating ROOT from 6.22/08 to 6.24/00 on Gentoo, and I see several test failures which may need to be looked into before I can commit the new version. I am using ROOT master at f7adfb5c78168d5eba657afa171fa1a9d0938c54, GCC 8.4.0 in Gentoo, compiling for C++17, and enabling everything that I can in the build, except for a few annoying things like Oracle DB, etc. The command line for CMake was. ```. $ cmake -DCMAKE_INSTALL_RPATH=""$ORIGIN"" -DPYTHON_EXECUTABLE=""/usr/bin/python"" -Dalien=""OFF"" -Dall=""ON"" -Darrow=""OFF"" -Dcuda=""OFF"" -Dcudnn=""OFF"" -Ddcache=""OFF"" -Dfail-on-missing=""ON"" -Dgfal=""OFF"" -Dmemstat=""OFF"" -Dmonalisa=""OFF"" -Doracle=""OFF"" -Dpyroot=""ON"" -Drpath=""ON"" -Dtest_distrdf_pyspark=""OFF"" -Dtmva-gpu=""OFF"" -Dvc=""OFF"" -Dvdt=""OFF"" -Dveccore=""OFF"" -Dvecgeom=""OFF"" -Dvmc=""OFF"" -Dtesting=""ON"" -Droottest=""ON"" /srv/root/src/root. ```. and the following features were enabled:. ```. -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd. ```. The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh. The following tests FAILED:. 	 10 - pyunittests-pyroot-import-load-libs (Failed). 	 85 - gtest-core-metacling-test-TClingTest (Failed). 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:2644,usability,ERROR,ERROR,2644,"rial-v7-ntuple-ntpl005_introspection (Failed). 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed). 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed). 	1437 - roottest-python-pickle-read (Failed). 	1496 - roottest-root-dataframe-regression_snapshot (Failed). 	1499 - roottest-root-dataframe-test_snapshot (Failed). 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed). 	1501 - roottest-root-dataframe-test_glob (Failed). 	1502 - roottest-root-dataframe-test_reduce (Failed). 	1513 - roottest-root-dataframe-ctors (Failed). ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3414,usability,behavi,behavior,3414,"ee the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test. Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3600,usability,close,closely,3600,"oot-import-load-libs fails with. ```sh. ERROR: test_import (import_load_libs.ImportLoadLibs). Test libraries loaded after importing ROOT. ----------------------------------------------------------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/datafram",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:3785,usability,support,support,3785,"-----------------------. Traceback (most recent call last):. File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import. raise Exception('Found not whitelisted libraries after importing ROOT:' \. Exception: Found not whitelisted libraries after importing ROOT:. - libz3. If the test fails with a library that is loaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4148,usability,Error,Error,4148,"oaded on purpose, please add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4174,usability,memor,memory,4174,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4236,usability,memor,memory,4236,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4271,usability,user,user,4271,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4283,usability,Error,Error,4283,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4345,usability,error,error,4345,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4924,usability,error,error,4924,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4967,usability,error,error,4967,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/issues/7936:4993,usability,statu,status,4993,"e add it to the whitelist. ```. Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know. ```sh. Start 995: tutorial-v7-ntuple-ntpl005_introspection. 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec. ... terminate called after throwing an instance of 'std::runtime_error'. what(): Fatal Error: failed to allocate memory for the smallest possible io_uring instance. 'memlock' memory has been exhausted for this user. CMake Error at /srv/root/build/RootTestDriver.cmake:237 (message):. error code: Subprocess aborted. ```. - The dataframe tests all fail with something like this. ```sh. Processing /srv/root/src/roottest/root/dataframe/test_ctors.C+... Info in <TUnixSystem::ACLiC>: creating shared library /srv/root/build/roottest/root/dataframe/test_ctors_C.so. /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: _ZTISt16invalid_argument: invalid version 7 (max 0). /usr/lib/gcc/x86_64-pc-linux-gnu/8.4.0/../../../../x86_64-pc-linux-gnu/bin/ld: /srv/root/build/roottest/root/dataframe/par: error adding symbols: bad value. collect2: error: ld returned 1 exit status. ```. Could it be a mismatch between Clang and GCC ABIs? Or maybe an issue with my linker? (I am using binutils version 2.35.2). Please let me know if you have any questions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7936
https://github.com/root-project/root/pull/7937:36,deployability,build,build,36,"Make sure roottest tests ROOT being build, not ROOT in env; Fixes #7081",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7937
https://github.com/root-project/root/pull/7937:19,safety,test,tests,19,"Make sure roottest tests ROOT being build, not ROOT in env; Fixes #7081",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7937
https://github.com/root-project/root/pull/7937:19,testability,test,tests,19,"Make sure roottest tests ROOT being build, not ROOT in env; Fixes #7081",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7937
https://github.com/root-project/root/pull/7938:89,availability,error,error,89,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:278,deployability,toggl,toggle,278,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:300,energy efficiency,current,current,300,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:168,integrability,sub,subfolder,168,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:213,integrability,messag,message,213,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:213,interoperability,messag,message,213,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:89,performance,error,error,89,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:261,performance,time,time,261,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:89,safety,error,error,89,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:11,usability,support,support,11,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:59,usability,Support,Support,59,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7938:89,usability,error,error,89,"[rbrowser] support plain TBranch, fix several problems; 1. Support plain TBranch. 2. Fix error with item double-click. 3. When any ROOT files opened, show ""ROOT Files"" subfolder with files inside. 4. Show warning message when double-click action takes too long time. 5. Provide toggle button between current dir and top folder",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7938
https://github.com/root-project/root/pull/7939:11,usability,support,support,11,"[rbrowser] support plain TBranch, fix double click handling 6.24;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7939
https://github.com/root-project/root/pull/7940:78,deployability,version,version,78,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:105,deployability,fail,fail,105,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:143,deployability,fail,fail,143,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:78,integrability,version,version,78,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:78,modifiability,version,version,78,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:105,reliability,fail,fail,105,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7940:143,reliability,fail,fail,143,[cmake] make builtin_nlohmannjson default OFF; ROOT will try to find external version first and. only if fail fallback to builtin variant. May fail during compilation on systems with incomplete set of nlohmann includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7940
https://github.com/root-project/root/pull/7941:275,availability,slo,slow,275,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7941:275,reliability,slo,slow,275,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7941:36,usability,prefer,prefer,36,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7941:153,usability,prefer,prefer,153,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7941:376,usability,prefer,prefer,376,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7941:437,usability,document,documentation,437,"[meta] TDictionary::GetDictionary() prefer class over typedef:; For `std::string`, we have both a TClass and a TDataType (as it is a typedef). We should prefer the TClass (which fixes issue #7169), but not at the cost. of calling `TClass::GetClass()` first: that is just too slow. So instead,. check for ""is it a datatype, not numeric, do we have a TClass?"" which will. still prefer the TClass even if *also* a TDataType exists. Provide documentation!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7941
https://github.com/root-project/root/pull/7942:168,deployability,fail,fails,168,[io] Catch RIoUring constructor exceptions in RRawFileUnix::ReadV; Handle case where CheckIsAvailable succeeds but constructing a. potentially larger io_uring instance fails. Reported as part of:. <https://github.com/root-project/root/issues/7936>. h/t @amadio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7942
https://github.com/root-project/root/pull/7942:168,reliability,fail,fails,168,[io] Catch RIoUring constructor exceptions in RRawFileUnix::ReadV; Handle case where CheckIsAvailable succeeds but constructing a. potentially larger io_uring instance fails. Reported as part of:. <https://github.com/root-project/root/issues/7936>. h/t @amadio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7942
https://github.com/root-project/root/pull/7942:32,safety,except,exceptions,32,[io] Catch RIoUring constructor exceptions in RRawFileUnix::ReadV; Handle case where CheckIsAvailable succeeds but constructing a. potentially larger io_uring instance fails. Reported as part of:. <https://github.com/root-project/root/issues/7936>. h/t @amadio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7942
https://github.com/root-project/root/pull/7943:16,integrability,coupl,couple,16,[skip-ci] Add a couple of symbols to be exported for Win64;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7943
https://github.com/root-project/root/pull/7943:16,modifiability,coupl,couple,16,[skip-ci] Add a couple of symbols to be exported for Win64;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7943
https://github.com/root-project/root/pull/7943:16,testability,coupl,couple,16,[skip-ci] Add a couple of symbols to be exported for Win64;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7943
https://github.com/root-project/root/pull/7944:143,deployability,depend,dependent,143,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:143,integrability,depend,dependent,143,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:91,interoperability,format,formatting,91,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:130,interoperability,architectur,architecture,130,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:153,interoperability,format,format,153,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:143,modifiability,depend,dependent,143,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:143,safety,depend,dependent,143,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7944:143,testability,depend,dependent,143,[io] Next bunch of changes for Win64; - Replace `long` types by `Longptr_t`. - Fix pointer formatting (use `%zx` and `size_t` for architecture dependent format),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7944
https://github.com/root-project/root/pull/7946:65,performance,datagram,datagram,65,TOC flag has weird side effects; This flag screwed up the TOC of datagram and histpainter,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7946
https://github.com/root-project/root/pull/7947:7,deployability,Updat,Update,7,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:1,safety,test,test,1,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:7,safety,Updat,Update,7,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:33,safety,test,test,33,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:7,security,Updat,Update,7,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:1,testability,test,test,1,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7947:33,testability,test,test,33,[test] Update location of xrootd test files: (6.16); The original directory was removed. (cherry picked from commit ca9ab88c7e38046dae309d039b7912e294a5435d),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7947
https://github.com/root-project/root/pull/7948:522,deployability,configurat,configuration,522,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:9,integrability,configur,configure,9,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:125,integrability,event,event,125,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:522,integrability,configur,configuration,522,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:9,modifiability,configur,configure,9,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:522,modifiability,configur,configuration,522,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:427,safety,detect,detect,427,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:9,security,configur,configure,9,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:427,security,detect,detect,427,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:522,security,configur,configuration,522,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7948:473,testability,context,context,473,"[webgui] configure special mode for PyROOT; Solves problem with `rootbrowse` utility. In PyROOT there are different ways how event loop is running. Finally there is special thread where gSystem->ProcessEvents() regularly called. In such special case webgui should be informed that ProcessEvents called from special thread - . via `gEnv->SetValue(""WebGui.ExternalProcessEvents"", ""yes"")`. In such case RWebWindowManager tries to detect thread id and really use ProcessEvents context to process WebGui functionality. In such configuration extra http thread not required and will be disabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7948
https://github.com/root-project/root/pull/7949:14,deployability,build,build,14,Add Win32/x64 build options for builtin_tbb on Windows;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7949
https://github.com/root-project/root/issues/7950:835,availability,StatE,StatEntity,835,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,availability,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1648,availability,error,error,1648,"3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:59,deployability,modul,module,59,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:113,deployability,modul,module,113,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:140,deployability,version,version,140,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,deployability,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1674,deployability,build,build,1674,"dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1719,deployability,instal,install,1719," file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1876,deployability,build,build,1876,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1921,deployability,build,build,1921,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2055,deployability,unload,unloadFromPreprocessor,2055,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2174,deployability,fail,failed,2174,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2559,deployability,contain,containing,2559,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2685,deployability,releas,releases,2685,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:125,energy efficiency,current,current,125,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,energy efficiency,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2234,energy efficiency,load,loaded,2234,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:140,integrability,version,version,140,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:835,integrability,StatE,StatEntity,835,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1487,interoperability,convers,conversions,1487,"ightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:59,modifiability,modul,module,59,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:113,modifiability,modul,module,113,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:140,modifiability,version,version,140,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1648,performance,error,error,1648,"3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2234,performance,load,loaded,2234,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,reliability,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2174,reliability,fail,failed,2174,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:10,safety,except,exception,10,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:59,safety,modul,module,59,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:113,safety,modul,module,113,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:169,safety,except,exception,169,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,safety,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1648,safety,error,error,1648,"3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2518,safety,avoid,avoided,2518,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:0,testability,Assert,Assertion,0,"Assertion exception including header file with GaudiPython module; ### Describe the bug. Importing `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/Transa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1089,testability,Monitor,MonitoringHub,1089,"ng `GaudiPython` module with current master version of [Py]ROOT produces exception and program crash. . ### To Reproduce. ```. $ source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-dbg/setup.sh. $ python -c 'import GaudiPython'. ```. produces:. ```. # setting LC_ALL to ""C"". In file included from GaudiPythonDict dictionary payload:71:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/Chrono.h:22:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:2122,testability,Assert,Assertion,2122,"-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH. $ python -c 'import GaudiPython'. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7950:1648,usability,error,error,1648,"3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/ChronoEntity.h:19:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/GaudiKernel/StatEntity.h:12:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:. In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:. /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory. #include <nlohmann/json_fwd.hpp>. ^. python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed. *** Break *** abort. ... ```. The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```. $ export ROOT_IN",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7950
https://github.com/root-project/root/issues/7952:556,deployability,fail,fails,556,"Template with result_of only works in same cell in which it's defined; This cell evaluates. ```. #include <iostream>. #include <type_traits>. #include <functional>. template<typename T>. T fun2(std::function<T()> f) {. T t = f();. return t;. }. template<>. void fun2(std::function<void()> f) {. f();. }. template<typename F>. typename std::result_of<F()>::type fun(F f) {. typedef typename std::result_of<F()>::type ftype;. return fun2<ftype>(f);. }. // This call succeeds. auto a = fun([](){ return 42; });. ```. However, the following in a separate cell fails. ```. // This call kills the kernel. auto b = fun([](){ return 42; });. ```. Note that I am using the cling_2020-11-05_ROOT-fedora32 in a fedora32 docker image.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7952
https://github.com/root-project/root/issues/7952:556,reliability,fail,fails,556,"Template with result_of only works in same cell in which it's defined; This cell evaluates. ```. #include <iostream>. #include <type_traits>. #include <functional>. template<typename T>. T fun2(std::function<T()> f) {. T t = f();. return t;. }. template<>. void fun2(std::function<void()> f) {. f();. }. template<typename F>. typename std::result_of<F()>::type fun(F f) {. typedef typename std::result_of<F()>::type ftype;. return fun2<ftype>(f);. }. // This call succeeds. auto a = fun([](){ return 42; });. ```. However, the following in a separate cell fails. ```. // This call kills the kernel. auto b = fun([](){ return 42; });. ```. Note that I am using the cling_2020-11-05_ROOT-fedora32 in a fedora32 docker image.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7952
https://github.com/root-project/root/pull/7953:13,security,sign,sign,13,Add missed $ sign before env var in thisroot.fish config;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7953
https://github.com/root-project/root/pull/7954:248,deployability,fail,fails,248,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1455,deployability,observ,observed,1455,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1644,deployability,continu,continue,1644,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1895,deployability,build,build,1895,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:5,energy efficiency,Reduc,Reduce,5,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:135,energy efficiency,CPU,CPU,135,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:204,energy efficiency,alloc,allocate,204,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:942,energy efficiency,alloc,allocating,942,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1835,energy efficiency,Profil,Profile,1835,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1170,integrability,event,eventually,1170,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1625,interoperability,platform,platforms,1625,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:97,modifiability,Scal,Scaling,97,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:537,modifiability,scal,scaling,537,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:986,modifiability,reu,reuse,986,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1126,modifiability,reu,reusing,1126,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:12,performance,memor,memory,12,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:124,performance,memor,memory,124,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:135,performance,CPU,CPU,135,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:275,performance,memor,memory,275,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:545,performance,performance issu,performance issues,545,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:669,performance,time,times,669,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:961,performance,memor,memory,961,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1008,performance,time,times,1008," memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1153,performance,time,times,1153,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1835,performance,Profil,Profile,1835,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:248,reliability,fail,fails,248,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1455,testability,observ,observed,1455,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:12,usability,memor,memory,12,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:124,usability,memor,memory,124,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:275,usability,memor,memory,275,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:291,usability,user,user,291,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:545,usability,perform,performance,545,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:961,usability,memor,memory,961,"[RF] Reduce memory consumption of MemPoolForRooSets; The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_exampl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1447,usability,clear,clearly,1447,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:1976,usability,navigat,navigator,1976,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/pull/7954:2080,usability,navigat,navigator,2080,"ng issues: increasing memory and CPU consumption with. increasing number of arenas, becuase trying to allocate a new. non-overlapping arena often fails. 2. Amplification of memory leaks in user code:. If one of the elements in the arena leaks, the whole arena will. leak. Since each arena has 6000 elements, this means a leak of a. RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and. the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena. 120 times because this is the size of RooArgSet in bytes. This can be. done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet. 2. When an address was used before, add one byte and in can be used. again. So at the cost of allocating 2x more memory per arena, we can reuse each. arena 120 times. Now, the good thing is that the interval of creating/deleting. RooArgSets is usually higher than 6000. So when reusing an arena. multiple times, they will eventually be filled only by leaking. RooArgSets if there is a leak. Meaning the leak amplification effect. should be gone. This was checked with the CMS Higgs combine toy fit example from the. Higgs combine tutorial. Without this commit, there is a GB-level leak. that can be clearly observed with `top`, but with this commit the leak. becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:. * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old). * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/arena_1_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7954
https://github.com/root-project/root/issues/7955:251,availability,operat,operator,251,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:1046,availability,error,error,1046,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:963,deployability,fail,fails,963,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:869,energy efficiency,load,load,869,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:849,integrability,batch,batch,849,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:849,performance,batch,batch,849,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:869,performance,load,load,869,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:1046,performance,error,error,1046,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:963,reliability,fail,fails,963,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:1046,safety,error,error,1046,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:679,usability,user,user,679,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/issues/7955:1046,usability,error,error,1046,"GetMethodWithPrototype return the incorrect function ?; As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:. ```. {. auto cls = TClass::GetClass(""std::vector<int>"");. auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);. auto args = meth->GetListOfMethodArgs();. auto methArg = dynamic_cast<TMethodArg*>(args->First());. cout << args->GetEntries() << endl;. cout << methArg->GetTypeName() << endl;. }. ```. print. ```. 1. vector<TClass*>::size_type. ```. where one would expect. ```. 1. vector<int>::size_type. ```. This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7955
https://github.com/root-project/root/pull/7956:580,deployability,updat,updated,580,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:514,integrability,compon,component,514,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:541,integrability,rout,routine,541,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:514,interoperability,compon,component,514,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:514,modifiability,compon,component,514,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:580,safety,updat,updated,580,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/pull/7956:580,security,updat,updated,580,"[v622] Properly handle v5 file with missing information.; Fix #7912. In this report, the v5 file has a 'map<TString, RooExpensiveObjectCache::ExpensiveObject*>'. however it is recorded as 'map<TString, ExpensiveObject*>'. However the map stored in. the file is empty and thus no information was recorded about `ExpensiveObject`,. consequently when the map's StreamerInfo request the TClass for the underlying pair,. it is returned nullptr (since we no longer create the TClass for a pair where one or. more of the component is unknown). The routine `FixCollectionV5` needed to be updated to handle this situation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7956
https://github.com/root-project/root/issues/7957:23,reliability,RCa,RCanvas,23,"Use fixed-size font in RCanvas and friends; ### Explain what you would like to see improved. Legends and axis fonts should be fixed size, legible on an average screen. ![image](https://user-images.githubusercontent.com/144675/115676505-f4383400-a34f-11eb-8929-1a99b944628f.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7957
https://github.com/root-project/root/issues/7957:185,usability,user,user-images,185,"Use fixed-size font in RCanvas and friends; ### Explain what you would like to see improved. Legends and axis fonts should be fixed size, legible on an average screen. ![image](https://user-images.githubusercontent.com/144675/115676505-f4383400-a34f-11eb-8929-1a99b944628f.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7957
https://github.com/root-project/root/issues/7958:11,deployability,automat,automatic,11,Default to automatic color in RCanvas and friends; ### Explain what you would like to see improved. `AttrColor().SetAuto()` should be default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7958
https://github.com/root-project/root/issues/7958:30,reliability,RCa,RCanvas,30,Default to automatic color in RCanvas and friends; ### Explain what you would like to see improved. `AttrColor().SetAuto()` should be default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7958
https://github.com/root-project/root/issues/7958:11,testability,automat,automatic,11,Default to automatic color in RCanvas and friends; ### Explain what you would like to see improved. `AttrColor().SetAuto()` should be default.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7958
https://github.com/root-project/root/issues/7959:120,energy efficiency,current,currently,120,"RColor must be able to be constructed as ""0.2"" from RPalette; ### Explain what you would like to see improved. `RColor` currently has rgb etc - but it cannot reference a value from 0..1 (""ordinal"") from the `RPad`'s `RPalette` - and it should! This should *not* set rgb - it should just be a different `RColor` ""identity"" and only use the ordinal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7959
https://github.com/root-project/root/issues/7959:312,security,ident,identity,312,"RColor must be able to be constructed as ""0.2"" from RPalette; ### Explain what you would like to see improved. `RColor` currently has rgb etc - but it cannot reference a value from 0..1 (""ordinal"") from the `RPad`'s `RPalette` - and it should! This should *not* set rgb - it should just be a different `RColor` ""identity"" and only use the ordinal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7959
https://github.com/root-project/root/issues/7960:300,availability,avail,available,300,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:425,availability,avail,available,425,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:582,availability,avail,available,582,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:719,availability,avail,available,719,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:836,availability,avail,available,836,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:300,reliability,availab,available,300,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:425,reliability,availab,available,425,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:582,reliability,availab,available,582,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:719,reliability,availab,available,719,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:836,reliability,availab,available,836,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:283,safety,Input,InputVar,283,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:300,safety,avail,available,300,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:410,safety,Input,InputVar,410,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:425,safety,avail,available,425,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:560,safety,Input,InputVar,560,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:582,safety,avail,available,582,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:699,safety,Input,InputVar,699,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:719,safety,avail,available,719,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:818,safety,Input,InputVar,818,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:836,safety,avail,available,836,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:934,safety,Input,InputVar,934,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:300,security,availab,available,300,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:425,security,availab,available,425,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:582,security,availab,available,582,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:719,security,availab,available,719,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:836,security,availab,available,836,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:283,usability,Input,InputVar,283,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:410,usability,Input,InputVar,410,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:560,usability,Input,InputVar,560,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:699,usability,Input,InputVar,699,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:818,usability,Input,InputVar,818,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/issues/7960:934,usability,Input,InputVar,934,"Warnings about Missing std::pair dictionaries with 6.24; ### Describe the bug. After switching to 6.24 (GCC 10.2) I see new warnings about missing dictionaries. ```. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,vector<Belle2::ECLChargedPidPDFs::InputVar> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<int,unordered_map<Belle2::ECLChargedPidPDFs::InputVar,TF1*> > is available. TClass::Init:0: RuntimeWarning: no dictionary for class pair<Belle2::ECLChargedPidPDFs::InputVar,TF1*> is available. ```. All of them seem to involve `std::pair`. In this case `Belle2::ECLChargedPidPDFs::InputVar` is an enum and I have one other case where there's also a `std::pair` and a enum involved. They were not present with 6.20/4. ### Setup. * ROOT 6.24.0. * GCC 10.2. * Ubuntu 18.04",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7960
https://github.com/root-project/root/pull/7962:54,deployability,releas,release,54,[DF][Doc][NFC] Add DescribeDataset to cheat sheet and release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7962
https://github.com/root-project/root/pull/7963:59,interoperability,format,formatting,59,[net] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7963
https://github.com/root-project/root/issues/7964:20,deployability,instal,installation,20,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:73,deployability,stage,staged,73,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:80,deployability,instal,installations,80,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:101,deployability,instal,installing,101,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:137,deployability,manag,manager,137,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:201,deployability,instal,installation,201,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:331,deployability,instal,installations,331,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:375,deployability,instal,install,375,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:391,deployability,build,build,391,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:408,deployability,instal,install,408,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:604,deployability,LOG,LOG,604,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:670,deployability,log,log,670,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:680,deployability,VERSION,VERSION,680,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:137,energy efficiency,manag,manager,137,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:680,integrability,VERSION,VERSION,680,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:693,interoperability,FORMAT,FORMAT,693,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:722,interoperability,FORMAT,FORMAT,722,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:749,interoperability,FORMAT,FORMAT,749,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:789,interoperability,FORMAT,FORMAT,789,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:832,interoperability,FORMAT,FORMAT,832,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:860,interoperability,FORMAT,FORMAT,860,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:129,modifiability,pac,package,129,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:680,modifiability,VERSION,VERSION,680,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:934,modifiability,pac,packages,934,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:994,modifiability,pac,packages,994,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1054,modifiability,pac,packages,1054,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1191,modifiability,pac,packages,1191,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1273,modifiability,pac,packages,1273,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1325,modifiability,pac,packages,1325,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1377,modifiability,pac,packages,1377,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:1498,modifiability,pac,packages,1498,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:33,performance,time,time,33,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:38,reliability,doe,does,38,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:417,reliability,doe,doesn,417,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:137,safety,manag,manager,137,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:370,safety,test,test-install,370,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:604,safety,LOG,LOG,604,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:670,safety,log,log,670,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:164,security,modif,modify,164,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:432,security,modif,modify,432,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:473,security,sandbox,sandbox,473,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:548,security,ACCESS,ACCESS,548,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:604,security,LOG,LOG,604,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:662,security,sandbox,sandbox,662,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:670,security,log,log,670,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:734,security,Access,Access,734,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:370,testability,test,test-install,370,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:604,testability,LOG,LOG,604,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:670,testability,log,log,670,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:741,usability,Statu,Status,741,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7964:872,usability,Command,Command,872,"Symlink creation at installation time does not respect DESTDIR (used for staged installations); When installing ROOT 6.24 with a package manager, CMake will try to modify `/usr` directly even when the installation is supposed to happen to a staging area beforehand. We need to change the link creation to respect DESTDIR such that installations like `env DESTDIR=${PWD}/test-install cmake --build . --target install` doesn't try to modify any system directories. Here is a sandbox violation report from Portage:. ```. * --------------------------- ACCESS VIOLATION SUMMARY ---------------------------. * LOG FILE: ""/var/tmp/portage/sci-physics/root-6.24.00/temp/sandbox.log"". * . VERSION 1.0. FORMAT: F - Function called. FORMAT: S - Access Status. FORMAT: P - Path as passed to function. FORMAT: A - Absolute Path (not canonical). FORMAT: R - Canonical Path. FORMAT: C - Command Line. F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy_backend3_8.so /usr/lib/python3.8/site-packages/libcppyy_backend3_8.so . F: symlink. S: deny. P: /usr/lib/python3.8/site-packages/libcppyy3_8.so. A: /usr/lib/python3.8/site-packages/libcppyy3_8.so. R: /usr/lib/python3.8/site-packages/libcppyy3_8.so. C: /usr/bin/cmake -E create_symlink /usr/lib64/root-6.24/libcppyy3_8.so /usr/lib/python3.8/site-packages/libcppyy3_8.so . * --------------------------------------------------------------------------------. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7964
https://github.com/root-project/root/issues/7965:920,availability,ERROR,ERROR,920,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:974,availability,ERROR,ERROR,974,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1061,availability,ERROR,ERROR,1061,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1123,availability,ERROR,ERRORS,1123,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1227,availability,avail,available,1227,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:373,interoperability,format,format,373,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:655,interoperability,format,format,655,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:763,interoperability,format,format,763,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:920,performance,ERROR,ERROR,920,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:974,performance,ERROR,ERROR,974,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1061,performance,ERROR,ERROR,1061,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1123,performance,ERROR,ERRORS,1123,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1227,reliability,availab,available,1227,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:920,safety,ERROR,ERROR,920,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:974,safety,ERROR,ERROR,974,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1061,safety,ERROR,ERROR,1061,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1123,safety,ERROR,ERRORS,1123,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1130,safety,detect,detected,1130,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1227,safety,avail,available,1227,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1130,security,detect,detected,1130,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1227,security,availab,available,1227,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:920,usability,ERROR,ERROR,920,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:974,usability,ERROR,ERROR,974,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1061,usability,ERROR,ERROR,1061,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7965:1123,usability,ERROR,ERRORS,1123,"[RF] RooAddPdf constructor not properly picked up by RooWSFactoryTool; Consider the following code snippet:. nbkg = 10000. nsig = 100. masses = [125,400]. . import ROOT. ws = ROOT.RooWorkspace(""workspace""). m = ws.factory(""m[0,1000]""). bkg_shape = ws.factory(""RooExponential::bkg_shape(m,c_bkg[-0.005])""). bkg = ws.factory(""RooExtendPdf::bkg(bkg_shape,n_bkg[{:f},0,{:f}])"".format(nbkg,2*nbkg)). . bkgdata = bkg.generate(m,nbkg). bkgdata.SetName(""asimov_0""). ws.Import(bkgdata). . funcs = ROOT.RooArgList(). funcs.add(bkg). for i in range(0,len(masses)):. sig_shape = ws.factory(""RooGaussian::sig_shape_{:d}(m,m_{:d}[{:f},0,1000],sigma_{:d}[10,1e-6,100])"".format(i,i,masses[i],i)). sig = ws.factory(""RooExtendPdf::sig_{:d}(sig_shape_{:d},n_sig_{:d}[{:f},0,{:f}])"".format(i,i,i,nsig,2*nsig)). funcs.add(sig). mainPdf = ws.factory(""RooAddPdf({""+"","".join([f.GetName() for f in funcs])+""})""). The last line results in . [#0] ERROR:ObjectHandling -- RooFactoryWSTool::createArg() ERROR number of arguments provided (1) for class is invalid, RooAddPdf expects 3. [#0] ERROR:ObjectHandling -- RooFactoryWSTool::processExpression() ERRORS detected, transaction to workspace aborted, no objects committed. despite this constructor being available for RooAddPdf:. RooAddPdf (const char *name, const char *title, const RooArgList &pdfList).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7965
https://github.com/root-project/root/issues/7966:116,deployability,log,log,116,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:120,deployability,scale,scale,120,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:120,energy efficiency,scale,scale,120,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:120,modifiability,scal,scale,120,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:120,performance,scale,scale,120,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:116,safety,log,log,116,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:116,security,log,log,116,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7966:116,testability,log,log,116,"Merge `RPadUserAxisBase` `RAxisAttr`; ### Explain what you would like to see improved. For instance both have ""am I log scale"": they should get merged, or their relationship should be defined / reconsidered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7966
https://github.com/root-project/root/issues/7967:198,availability,error,errors,198,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:125,energy efficiency,Model,ModelConfig,125,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1232,energy efficiency,Model,ModelConfig,1232,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1245,energy efficiency,model,model,1245,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1253,energy efficiency,model,model,1253,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1954,energy efficiency,Model,ModelConfig,1954,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1517,integrability,wrap,wrapping,1517,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1678,integrability,event,events,1678,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1789,integrability,event,events,1789,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:517,interoperability,format,format,517,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:537,interoperability,format,format,537,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:599,interoperability,format,format,599,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:618,interoperability,format,format,618,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:419,modifiability,variab,variables,419,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:647,modifiability,variab,variables,647,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:198,performance,error,errors,198,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:14,reliability,doe,doesn,14,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1392,reliability,doe,doesn,1392,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:1570,reliability,doe,doesn,1570,"l sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws). mc_cnt.SetObservables(xvals). mc_cnt.SetParametersOfInterest(muvals). mc_cnt.SetPdf(extmvg.GetName()). . data = RooStats.AsymptoticCalculator.MakeAsimovData(mc_cnt,muvals,RooArgSet()).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
https://github.com/root-project/root/issues/7967:198,safety,error,errors,198,"[RF] RooStats doesn't like RooMultiVarGaussian; Using `RooMultiVarGaussian` together with `RooStats` objects like `RooStats::ModelConfig` and `RooStats::AsymptoticsCalculator` produces all sorts of errors. Consider the following example code:. ```Python. from ROOT import RooArgList,RooArgSet,RooRealVar,TMatrixDSym,RooMultiVarGaussian,RooFit,RooWorkspace,RooStats,RooExtendPdf. . allvars = []. . xvals = RooArgList(). variables = RooArgSet(). muvals = RooArgList(). . for i in range(0,3):. mu = RooRealVar(""mu_{:d}"".format(i),""mu_{:d}"".format(i),1.,-10,10). muvals.add(mu). x = RooRealVar(""x_{:d}"".format(i),""x_{:d}"".format(i),1.). xvals.add(x). variables.add(x). . # side problem: unless these two lines are executed, the python garbage collector deletes mu and x. # causing a segfault in the construction of the RooMultiVarGaussian. allvars.append(mu). allvars.append(x). . covmat = TMatrixDSym(3). covmat[0][0] = 1. covmat[1][1] = 2. covmat[2][2] = 3. covmat[0][1] = 0.2. covmat[1][0] = 0.2. covmat[1][2] = 0.6. covmat[2][1] = 0.6. covmat[2][0] = 0.3. covmat[0][2] = 0.3. . nevents = 1000. mvg = RooMultiVarGaussian(""mvg"",""mvg"",xvals,muvals,covmat). allvars.append(mvg). . ws = RooWorkspace(""ws""). ws.Import(mvg). mc = RooStats.ModelConfig(""model"",""model"",ws). mc.SetObservables(xvals). mc.SetParametersOfInterest(muvals). mc.SetPdf(mvg.GetName()). . # main problem: AsymptoticCalculator doesn't accept RooMultiVarGaussian. data = RooStats.AsymptoticCalculator.MakeAsimovData(mc,muvals,RooArgSet()). ```. . Also, wrapping the Multivariate Gaussian in `RooExtendPdf` doesn't help either, as this results in lots of warnings saying `WARNING::Detected a bin with zero expected events- skip it` - probably that warning should only be emitted once. Also, the resulting asimov dataset has 0 events. norm = RooRealVar(""norm"",""norm"",1000). extmvg = RooExtendPdf(""extPdf"",""extPdf"",mvg,norm). ws.Import(extmvg,RooFit.RecycleConflictNodes()). mc_cnt = RooStats.ModelConfig(""countingModel"",""countingModel"",ws",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7967
