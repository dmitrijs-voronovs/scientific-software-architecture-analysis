id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/OpenGene/fastp/issues/121:83,testability,understand,understand,83,"> options.cpp. Hi, I am trying to cut the 75bp reads in my PE150 data, but I don't understand of the meaning of change line 134? Could you please help to explain it more and what is the command? Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/121
https://github.com/OpenGene/fastp/issues/121:146,usability,help,help,146,"> options.cpp. Hi, I am trying to cut the 75bp reads in my PE150 data, but I don't understand of the meaning of change line 134? Could you please help to explain it more and what is the command? Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/121
https://github.com/OpenGene/fastp/issues/121:186,usability,command,command,186,"> options.cpp. Hi, I am trying to cut the 75bp reads in my PE150 data, but I don't understand of the meaning of change line 134? Could you please help to explain it more and what is the command? Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/121
https://github.com/OpenGene/fastp/issues/122:89,availability,sli,sliding,89,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:154,deployability,updat,update,154,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:89,reliability,sli,sliding,89,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:154,safety,updat,update,154,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:193,safety,test,test,193,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:154,security,updat,update,154,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:193,testability,test,test,193,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:58,usability,document,documentation,58,"Thanks Jenny, I totally agree with you. I will change the documentation and add the real sliding window algorithm. Once the feature is implemented I will update this issue to ask you to take a test.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:61,safety,test,test,61,Great! Let me know when the new feature is ready and we will test it. Thanks so much,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:61,testability,test,test,61,Great! Let me know when the new feature is ready and we will test it. Thanks so much,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:103,availability,SLI,SLIDINGWINDOW,103,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:238,availability,sli,sliding,238,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:306,availability,sli,sliding,306,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:365,availability,operat,operations,365,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:446,availability,sli,sliding,446,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:670,availability,sli,sliding,670,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:901,availability,sli,sliding,901,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1087,availability,SLI,SLIDINGWINDOW,1087,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1138,availability,operat,operations,1138,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1751,availability,sli,sliding,1751,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:193,deployability,updat,updated,193,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1322,interoperability,coordinat,coordination,1322,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1773,interoperability,specif,specified,1773,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1853,interoperability,specif,specified,1853,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1617,performance,perform,performed,1617,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:103,reliability,SLI,SLIDINGWINDOW,103,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:238,reliability,sli,sliding,238,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:306,reliability,sli,sliding,306,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:446,reliability,sli,sliding,446,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:670,reliability,sli,sliding,670,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:901,reliability,sli,sliding,901,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1087,reliability,SLI,SLIDINGWINDOW,1087,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1751,reliability,sli,sliding,1751,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:193,safety,updat,updated,193,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1673,safety,avoid,avoid,1673,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:193,security,updat,updated,193,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:201,usability,document,document,201,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:220,usability,support,supports,220,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:344,usability,support,supports,344,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:562,usability,stop,stop,562,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:786,usability,stop,stop,786,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1045,usability,stop,stop,1045,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1617,usability,perform,performed,1617,"@jdrnevich Hi Jenny, I add a new method `--cut_by_quality_aggressive`, which is similar as Trimmomatic SLIDINGWINDOW. I also changed the window size limitation to allow 1 as an option. See the updated document:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From v0.19.6, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_by_quality5` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. * `-3, --cut_by_quality3` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. * `--cut_by_quality_aggressive` move a sliding window from front to tail, if meet one window with mean quality below cut_mean_quality, drop the bases in this window and the rest, and stop. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_by_quality5` will also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_by_quality_aggressive` is enabled, then there is no need to enable `--cut_by_quality3`, since the former is more aggressive. If `--cut_by_quality_aggressive` is enabled together with `--cut_by_quality5`, `--cut_by_quality5` will be performed first before `--cut_by_quality_aggressive` to avoid dropping whole reads due to the low quality starting bases. The size of sliding window can be specified with `-W, --cut_window_size`, and the mean quality requirement can be specified with `-M, --cut_mean_quality `.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:39,deployability,build,build,39,"Could you please pull the latest code, build it and have a try?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:111,availability,sli,sliding,111,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:374,availability,operat,operations,374,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:53,deployability,updat,updated,53,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:311,interoperability,specif,specified,311,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:111,reliability,sli,sliding,111,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:53,safety,updat,updated,53,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:53,security,updat,updated,53,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:19,usability,tool,tool,19,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:61,usability,document,document,61,"Hi @sfchen . Great tool. However, after reading your updated document, just out of interesting, how to set the sliding window size for `-cut_by_quality3/5`? In Trimmomatic, the `LEADING/TRAILING` just remove the low quality base by base if I am right. So, I do not know why did `fastp` use the same window size specified with `-W, --cut_window_size` for all three different operations you mentioned above. Best,. Zhuqing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:33,energy efficiency,reduc,reduce,33,"Hi @sfchen . In my mind, you can reduce the number of opinions and set the window size for `-cut_by_quality3/5` to be 1. On the other hand, we can set the quality liking following `-cut_by_quality3 10 -cut_by_quality5 10` which are same as `LEADING:10 TRAILING:10` in Trimmomatic. Thank you very much. Best. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:128,availability,SLI,SLIDINGWINDOW,128,"1-window-size is already allowed. And the mean quality threshold can be 1~30. I don't want to copy all the LEADING / TRAILING / SLIDINGWINDOW functions from Trimmomatic. I just want to support these functions, and provide more.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:128,reliability,SLI,SLIDINGWINDOW,128,"1-window-size is already allowed. And the mean quality threshold can be 1~30. I don't want to copy all the LEADING / TRAILING / SLIDINGWINDOW functions from Trimmomatic. I just want to support these functions, and provide more.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:185,usability,support,support,185,"1-window-size is already allowed. And the mean quality threshold can be 1~30. I don't want to copy all the LEADING / TRAILING / SLIDINGWINDOW functions from Trimmomatic. I just want to support these functions, and provide more.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:105,availability,SLI,SLIDINGWINDOW,105,"Hi @sfchen . No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. Best,. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:242,modifiability,paramet,parameters,242,"Hi @sfchen . No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. Best,. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:105,reliability,SLI,SLIDINGWINDOW,105,"Hi @sfchen . No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. Best,. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:206,testability,understand,understand,206,"Hi @sfchen . No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. Best,. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:114,availability,sli,sliding,114,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:182,availability,sli,sliding,182,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:243,availability,operat,operations,243,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:318,availability,sli,sliding,318,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:729,availability,sli,sliding,729,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1141,availability,sli,sliding,1141,"ating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will i",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1442,availability,SLI,SLIDINGWINDOW,1442," Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1493,availability,operat,operations,1493,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1687,interoperability,coordinat,coordination,1687,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:2247,interoperability,coordinat,coordination,2247,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:2,modifiability,refact,refactored,2,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:2,performance,refactor,refactored,2,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1931,performance,perform,performed,1931,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:114,reliability,sli,sliding,114,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:182,reliability,sli,sliding,182,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:318,reliability,sli,sliding,318,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:729,reliability,sli,sliding,729,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1141,reliability,sli,sliding,1141,"ating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will i",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1442,reliability,SLI,SLIDINGWINDOW,1442," Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1971,safety,avoid,avoid,1971,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:59,usability,clear,clear,59,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:74,usability,document,document,74,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:96,usability,support,supports,96,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:222,usability,support,supports,222,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:434,usability,stop,stop,434,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:845,usability,stop,stop,845,"I refactored the `cut by quality` features to make it more clear, now the document is:. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads du",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1284,usability,stop,stop,1284,"em:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped rea",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:1931,usability,perform,performed,1931,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:112,availability,SLI,SLIDINGWINDOW,112,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:410,availability,SLI,SLIDINGWINDOW,410,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:322,deployability,version,version,322,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:322,integrability,version,version,322,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:249,modifiability,paramet,parameters,249,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:322,modifiability,version,version,322,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:112,reliability,SLI,SLIDINGWINDOW,112,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:410,reliability,SLI,SLIDINGWINDOW,410,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:213,testability,understand,understand,213,"> Hi @sfchen. > . > No problem. How to set the opinions in `fastp` that will be same with `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic. If you can provide us a example, it will be useful for us to understand the description of these parameters. Thank you very much. > . > Best,. > Zhuqing. With the latest version of fastp, you can use following options to do the same as `LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20` in the Trimmomatic:. ```. --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:174,availability,down,download,174,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:107,deployability,version,version,107,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:120,deployability,updat,update,120,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:107,integrability,version,version,107,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:107,modifiability,version,version,107,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:89,safety,test,test,89,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:120,safety,updat,update,120,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:120,security,updat,update,120,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:89,testability,test,test,89,"> Hi @sfchen. > . > Thank you very much. > . > Best,. > Zhuqing. Would you please have a test with the new version, and update this issue? You can compile it from source, or download it from the latest prebuilt.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:363,availability,SLI,SLIDINGWINDOW,363,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:260,deployability,log,log,260,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:141,integrability,filter,filter,141,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:363,reliability,SLI,SLIDINGWINDOW,363,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:255,safety,test,test,255,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:260,safety,log,log,260,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:441,safety,test,test,441,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:455,safety,test,test,455,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:662,safety,test,test,662,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:720,safety,test,test,720,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:260,security,log,log,260,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:255,testability,test,test,255,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:260,testability,log,log,260,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:441,testability,test,test,441,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:455,testability,test,test,455,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:662,testability,test,test,662,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:720,testability,test,test,720,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:183,usability,command,commands,183,I found some different (Trimmomatic kept one more base at the end of reads than fastp) between `fastp` and `Trimmomatic` when using the same filter threshold. I attached the file and commands I used. `java -jar trimmomatic-0.38.jar PE -threads 2 -trimlog test.log test1.fq test2.fq test_1.fq test_1.single.fastq test_2.fq test_2.single.fastq LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:40 TOPHRED33`. `fastp -i test1.fq -I test2.fq.gz -o test.R1.fq -O test.R2.fq --cut_front --cut_front_window_size=1 --cut_front_mean_quality=3 --cut_tail --cut_tail_window_size=1 --cut_tail_mean_quality=3 --cut_right --cut_right_window_size=4 --cut_right_mean_quality=20`. [test.zip](https://github.com/OpenGene/fastp/files/2716456/test.zip).,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:64,safety,test,test,64,"Hi @sfchen ，. Sorry, I just used one paired end reads to have a test. In this demo, I just found the little difference I mentioned above. Maybe `trimns`, `trimns_window_size`, and `trimns_mean_quality`? Best. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:64,testability,test,test,64,"Hi @sfchen ，. Sorry, I just used one paired end reads to have a test. In this demo, I just found the little difference I mentioned above. Maybe `trimns`, `trimns_window_size`, and `trimns_mean_quality`? Best. Zhuqing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:53,modifiability,exten,extended,53,"Looks like lots of progress has been made! I'm on an extended holiday now and will check it out when I get back to work next week. Happy New Year,. Jenny",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:19,usability,progress,progress,19,"Looks like lots of progress has been made! I'm on an extended holiday now and will check it out when I get back to work next week. Happy New Year,. Jenny",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:241,integrability,sub,submitted,241,"> Hi @sfchen ，. > . > Sorry, I just used one paired end reads to have a test. In this demo, I just found the little difference I mentioned above. Maybe `trimns`, `trimns_window_size`, and `trimns_mean_quality`? > . > Best. > Zhuqing. I just submitted a revision to keep the good bases in the tails of reads after cutting",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:72,safety,test,test,72,"> Hi @sfchen ，. > . > Sorry, I just used one paired end reads to have a test. In this demo, I just found the little difference I mentioned above. Maybe `trimns`, `trimns_window_size`, and `trimns_mean_quality`? > . > Best. > Zhuqing. I just submitted a revision to keep the good bases in the tails of reads after cutting",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:72,testability,test,test,72,"> Hi @sfchen ，. > . > Sorry, I just used one paired end reads to have a test. In this demo, I just found the little difference I mentioned above. Maybe `trimns`, `trimns_window_size`, and `trimns_mean_quality`? > . > Best. > Zhuqing. I just submitted a revision to keep the good bases in the tails of reads after cutting",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:153,availability,operat,operations,153,"Hi @sfchen ,. I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that ```all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.```. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? . Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:343,interoperability,coordinat,coordination,343,"Hi @sfchen ,. I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that ```all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.```. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? . Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:24,performance,perform,perform,24,"Hi @sfchen ,. I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that ```all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.```. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? . Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:24,usability,perform,perform,24,"Hi @sfchen ,. I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that ```all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.```. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? . Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:115,usability,document,document,115,"Hi @sfchen ,. I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that ```all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.```. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? . Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:155,availability,operat,operations,155,"> Hi @sfchen ,. > I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that `all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.`. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? > Thank you. Can you file an individual issue? I am closing this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:345,interoperability,coordinat,coordination,345,"> Hi @sfchen ,. > I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that `all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.`. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? > Thank you. Can you file an individual issue? I am closing this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:28,performance,perform,perform,28,"> Hi @sfchen ,. > I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that `all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.`. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? > Thank you. Can you file an individual issue? I am closing this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:28,usability,perform,perform,28,"> Hi @sfchen ,. > I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that `all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.`. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? > Thank you. Can you file an individual issue? I am closing this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/122:119,usability,document,document,119,"> Hi @sfchen ,. > I want to perform `per read cutting by quality score` and `deduplication ` by `fastp`. However, your document said that `all these three operations will interfere deduplication for SE data, and --cut_front or --cut_right may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.`. I'm wondering that whether I have to run two passes to achieve my goals or any better suggestion you can give me? > Thank you. Can you file an individual issue? I am closing this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/122
https://github.com/OpenGene/fastp/issues/123:97,performance,time,times,97,The top 10 overrepresented sequences are selected by weighting the `sequence length` and `repeat times` together.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/123
https://github.com/OpenGene/fastp/issues/125:85,safety,test,test,85,"For PE data, fastp keeps or discards both pairs of reads. Can you please upload some test data so that I can do some investigation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/125
https://github.com/OpenGene/fastp/issues/125:85,testability,test,test,85,"For PE data, fastp keeps or discards both pairs of reads. Can you please upload some test data so that I can do some investigation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/125
https://github.com/OpenGene/fastp/issues/125:36,performance,time,time,36,Closing for now since I haven't had time to investigate. Will re-open if I find a concrete example. Thanks for your response.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/125
https://github.com/OpenGene/fastp/issues/127:40,integrability,filter,filter,40,Why would you like to have a such `CpG` filter? Is it for methylation data analysis? Could you please show me some cases that it will be helpful?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:137,usability,help,helpful,137,Why would you like to have a such `CpG` filter? Is it for methylation data analysis? Could you please show me some cases that it will be helpful?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:317,deployability,artifact,artifact,317,Using the pseudoalignments of [kallisto](https://pachterlab.github.io/kallisto/about) revealed an abundancy peak for alignments of template length 31 bp that seems to originate from polyA and (almost) pure GC reads. Each of these reads aligns to the same n position in the chosen transcriptome. I hoped to remove the artifact with fastp filters. Sadly the respective project was put on ice for other reasons.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:337,integrability,filter,filters,337,Using the pseudoalignments of [kallisto](https://pachterlab.github.io/kallisto/about) revealed an abundancy peak for alignments of template length 31 bp that seems to originate from polyA and (almost) pure GC reads. Each of these reads aligns to the same n position in the chosen transcriptome. I hoped to remove the artifact with fastp filters. Sadly the respective project was put on ice for other reasons.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:49,modifiability,pac,pachterlab,49,Using the pseudoalignments of [kallisto](https://pachterlab.github.io/kallisto/about) revealed an abundancy peak for alignments of template length 31 bp that seems to originate from polyA and (almost) pure GC reads. Each of these reads aligns to the same n position in the chosen transcriptome. I hoped to remove the artifact with fastp filters. Sadly the respective project was put on ice for other reasons.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:113,deployability,releas,released,113,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:347,energy efficiency,adapt,adapter,347,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:152,integrability,filter,filter,152,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:266,integrability,filter,filter,266,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:347,integrability,adapt,adapter,347,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:479,integrability,filter,filter,479,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:498,integrability,filter,filter,498,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:347,interoperability,adapt,adapter,347,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:347,modifiability,adapt,adapter,347,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:144,performance,content,content,144,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:234,testability,simpl,simple,234,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:234,usability,simpl,simple,234,"No, @katosh , this project is not on ice. I am intensively developing to provide new functions. Yesterday I just released v0.19.10. But this GC content filter, seems not commonly wanted, so I decided not to implement it to make fastp simple and easy. If you want to filter polyA, you can use the newly introduced --adapter_fasta to add polyA in a adapter FASTA file. And for GC, I suspect that they are most G, right? NovaSeq / NextSeq likes to have much more polyG, and you can filter it by polyG filter.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:147,deployability,continu,continue,147,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:192,modifiability,Concern,Concerning,192,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:186,performance,time,time,186,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:372,safety,compl,complexity,372,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:372,security,compl,complexity,372,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:192,testability,Concern,Concerning,192,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:119,usability,support,support,119,"Sorry, I did not mean the fastp project but our project that I am involved in that was put on ice. I thank you for the support and I would like to continue working with fastp at a later time. Concerning the reads: They mostly looked like `GCGCGCGCGCGCGC` with occasional defects in the chain. We expect those reads but wanted to ignore them and other ones with too little complexity in the mentioned study.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:211,deployability,observ,observe,211,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:33,integrability,topic,topic,33,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:443,interoperability,specif,specified,443,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:279,performance,content,content,279,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:333,performance,content,content,333,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/127:211,testability,observ,observe,211,"Hi, I would like to revisit this topic. I work with methylation data where the expected proportion of methylated bases (""C"" on R1 and ""G"" on R2) is much lower compared to the other nucleotides. We would like to observe differences between reads with high and low methylated base content, or have the option to remove reads with high content altogether (as these are likely to be false positives). . Something similar to `--n-base-limit` but a specified base would be fantastic. Thank you",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/127
https://github.com/OpenGene/fastp/issues/129:7,deployability,updat,update,7,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:52,deployability,releas,release,52,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:18,energy efficiency,adapt,adapter,18,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:18,integrability,adapt,adapter,18,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:18,interoperability,adapt,adapter,18,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:18,modifiability,adapt,adapter,18,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:7,safety,updat,update,7,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:26,safety,detect,detecting,26,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:76,safety,test,test,76,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:7,security,updat,update,7,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:26,security,detect,detecting,26,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:76,testability,test,test,76,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:68,usability,help,help,68,"I will update the adapter detecting feature in next release, please help to test it then. Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:129,availability,error,error,129,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:251,availability,error,error,251,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:153,energy efficiency,adapt,adapters,153,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:264,energy efficiency,Current,Currently,264,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:153,integrability,adapt,adapters,153,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:153,interoperability,adapt,adapters,153,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:153,modifiability,adapt,adapters,153,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:59,performance,time,times,59,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:129,performance,error,error,129,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:251,performance,error,error,251,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:43,reliability,doe,doesn,43,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:129,safety,error,error,129,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:251,safety,error,error,251,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:129,usability,error,error,129,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:251,usability,error,error,251,"Hey, just wanted to let you know that this doesn't work at times. I think it would be better that we introduce something like an error rate for matching adapters similar to Atropos. I think they implemented that to overcome the systemic biases and 3' error rates. Currently, I'm parsing dnapi.py results and feeding it off to fastp for correction.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:86,energy efficiency,adapt,adapters,86,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:86,integrability,adapt,adapters,86,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:86,interoperability,adapt,adapters,86,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:86,modifiability,adapt,adapters,86,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:64,reliability,doe,does,64,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:73,safety,detect,detect,73,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:73,security,detect,detect,73,"Hi! I was trying FastP with smallRNA data and efectively, FastP does not detect these adapters.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:91,availability,error,error,91,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:100,availability,ERROR,ERROR,100,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:52,energy efficiency,adapt,adapters,52,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:111,energy efficiency,adapt,adapter,111,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:52,integrability,adapt,adapters,52,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:111,integrability,adapt,adapter,111,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:52,interoperability,adapt,adapters,52,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:111,interoperability,adapt,adapter,111,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:52,modifiability,adapt,adapters,52,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:111,modifiability,adapt,adapter,111,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:91,performance,error,error,91,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:100,performance,ERROR,ERROR,100,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:91,safety,error,error,91,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:100,safety,ERROR,ERROR,100,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:91,usability,error,error,91,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/129:100,usability,ERROR,ERROR,100,"Indeed, I'm trying to include a fasta file with the adapters to check... and I obtain this error: . ERROR: the adapter <adapter_sequence> can only have bases in {A, T, C, G}, but the given sequence is: adapters_miRNAs_illumima.fasta. I attach to you the FASTA file. ![image](https://github.com/OpenGene/fastp/assets/26143966/f698bad8-e6f7-477f-a860-42171a477780).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/129
https://github.com/OpenGene/fastp/issues/130:4,usability,support,support,4,May support up to one INDEL in future implementation.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:75,energy efficiency,adapt,adapter,75,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:180,energy efficiency,adapt,adapter,180,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:75,integrability,adapt,adapter,75,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:180,integrability,adapt,adapter,180,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:75,interoperability,adapt,adapter,75,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:180,interoperability,adapt,adapter,180,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:75,modifiability,adapt,adapter,75,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:180,modifiability,adapt,adapter,180,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:189,safety,prevent,preventing,189,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/130:189,security,preven,preventing,189,"I'm having the same issue - I'm working with data that has extremely heavy adapter contamination at the 5' end, and I'm finding a lot of sequences that have a 1 bp deletion in the adapter, preventing it from being trimmed out.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/130
https://github.com/OpenGene/fastp/issues/131:40,availability,down,downloading,40,"Fixed, you can try the latest 0.19.7 by downloading the prebuilt binary or compiling from source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:31,availability,avail,available,31,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:71,performance,time,time,71,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:31,reliability,availab,available,31,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:51,reliability,Doe,Does,51,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:31,safety,avail,available,31,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:31,security,availab,available,31,Thanks! When is it going to be available on conda? Does it take a long time?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:34,deployability,releas,released,34,May take ~10 days since I haven't released this new version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:52,deployability,version,version,52,May take ~10 days since I haven't released this new version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:52,integrability,version,version,52,May take ~10 days since I haven't released this new version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:52,modifiability,version,version,52,May take ~10 days since I haven't released this new version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:31,usability,help,help,31,"0.19.7 is on conda now. please help to check and then close this issue, thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:54,usability,close,close,54,"0.19.7 is on conda now. please help to check and then close this issue, thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:201,deployability,compos,composed,201,"Hi,. That seems to be working fine now, But the poly A thing still seems to be not working completely. at I can still see some sequences with long polyA tails at the end of the reads or even sequences composed solely of poly As. fastp --umi --umi_loc read1 --umi_skip 12 --umi_len 6 -p -x -g --poly_g_min_len 2 --poly_x_min_len 2 -q 25 --cut_right_window_size 4 --cut_right_mean_quality 20 --cut_right -i AM27_S27_R1_001.fastq.gz -o ~/scratch/temp/AM27_S27_R1_001.fastq.gz -h ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.html -j ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.json -R AM27_S27_R1_001.fastq.gz --thread 4 -p --adapter_sequence=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. ![image](https://user-images.githubusercontent.com/40122452/53160618-3c1c6e80-35c0-11e9-822d-5441e142799c.png). Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:201,modifiability,compos,composed,201,"Hi,. That seems to be working fine now, But the poly A thing still seems to be not working completely. at I can still see some sequences with long polyA tails at the end of the reads or even sequences composed solely of poly As. fastp --umi --umi_loc read1 --umi_skip 12 --umi_len 6 -p -x -g --poly_g_min_len 2 --poly_x_min_len 2 -q 25 --cut_right_window_size 4 --cut_right_mean_quality 20 --cut_right -i AM27_S27_R1_001.fastq.gz -o ~/scratch/temp/AM27_S27_R1_001.fastq.gz -h ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.html -j ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.json -R AM27_S27_R1_001.fastq.gz --thread 4 -p --adapter_sequence=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. ![image](https://user-images.githubusercontent.com/40122452/53160618-3c1c6e80-35c0-11e9-822d-5441e142799c.png). Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:91,safety,compl,completely,91,"Hi,. That seems to be working fine now, But the poly A thing still seems to be not working completely. at I can still see some sequences with long polyA tails at the end of the reads or even sequences composed solely of poly As. fastp --umi --umi_loc read1 --umi_skip 12 --umi_len 6 -p -x -g --poly_g_min_len 2 --poly_x_min_len 2 -q 25 --cut_right_window_size 4 --cut_right_mean_quality 20 --cut_right -i AM27_S27_R1_001.fastq.gz -o ~/scratch/temp/AM27_S27_R1_001.fastq.gz -h ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.html -j ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.json -R AM27_S27_R1_001.fastq.gz --thread 4 -p --adapter_sequence=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. ![image](https://user-images.githubusercontent.com/40122452/53160618-3c1c6e80-35c0-11e9-822d-5441e142799c.png). Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:91,security,compl,completely,91,"Hi,. That seems to be working fine now, But the poly A thing still seems to be not working completely. at I can still see some sequences with long polyA tails at the end of the reads or even sequences composed solely of poly As. fastp --umi --umi_loc read1 --umi_skip 12 --umi_len 6 -p -x -g --poly_g_min_len 2 --poly_x_min_len 2 -q 25 --cut_right_window_size 4 --cut_right_mean_quality 20 --cut_right -i AM27_S27_R1_001.fastq.gz -o ~/scratch/temp/AM27_S27_R1_001.fastq.gz -h ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.html -j ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.json -R AM27_S27_R1_001.fastq.gz --thread 4 -p --adapter_sequence=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. ![image](https://user-images.githubusercontent.com/40122452/53160618-3c1c6e80-35c0-11e9-822d-5441e142799c.png). Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:694,usability,user,user-images,694,"Hi,. That seems to be working fine now, But the poly A thing still seems to be not working completely. at I can still see some sequences with long polyA tails at the end of the reads or even sequences composed solely of poly As. fastp --umi --umi_loc read1 --umi_skip 12 --umi_len 6 -p -x -g --poly_g_min_len 2 --poly_x_min_len 2 -q 25 --cut_right_window_size 4 --cut_right_mean_quality 20 --cut_right -i AM27_S27_R1_001.fastq.gz -o ~/scratch/temp/AM27_S27_R1_001.fastq.gz -h ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.html -j ~/scratch/temp/AM27_S27_R1_001.fastq.gz_fastp.json -R AM27_S27_R1_001.fastq.gz --thread 4 -p --adapter_sequence=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC. ![image](https://user-images.githubusercontent.com/40122452/53160618-3c1c6e80-35c0-11e9-822d-5441e142799c.png). Thanks",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/131:8,usability,close,close,8,"Can you close this issue, and re-open an issue about polyA problem?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/131
https://github.com/OpenGene/fastp/issues/132:12,usability,command,command,12,What's your command? Did you enable polyX trimming by `--trim_poly_x`,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:238,deployability,updat,updating,238,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:39,energy efficiency,adapt,adaptor,39,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:39,integrability,adapt,adaptor,39,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:39,interoperability,adapt,adaptor,39,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:39,modifiability,adapt,adaptor,39,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:238,safety,updat,updating,238,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:190,security,auth,author,190,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:238,security,updat,updating,238,"It really has this problem because the adaptor is trimmed after the polyA trimming according to the source code. You can change the order by editing the ""peprocessor.cpp"" source code or the author give an option to select the order after updating the source code.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:208,availability,sli,sliding,208,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:0,energy efficiency,Current,Currently,0,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:392,energy efficiency,adapt,adapter,392,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:463,energy efficiency,adapt,adapter,463,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:474,energy efficiency,adapt,adapter,474,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:392,integrability,adapt,adapter,392,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:463,integrability,adapt,adapter,463,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:474,integrability,adapt,adapter,474,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:392,interoperability,adapt,adapter,392,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:463,interoperability,adapt,adapter,463,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:474,interoperability,adapt,adapter,474,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:392,modifiability,adapt,adapter,392,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:463,modifiability,adapt,adapter,463,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:474,modifiability,adapt,adapter,474,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:208,reliability,sli,sliding,208,"Currently the order is:. ```. 1, UMI preprocessing (--umi). 2, global trimming at front (--trim_front). 3, global trimming at tail (--trim_tail). 4, quality pruning at 5' (--cut_front). 5, quality pruning by sliding window (--cut_right). 6, quality pruning at 3' (--cut_tail). 7, trim polyG (--trim_poly_g, enabled by default for NovaSeq/NextSeq data). 8, trim polyX (--trim_poly_x). 9, trim adapter by overlap analysis (enabled by default for PE data). 10, trim adapter by adapter sequence (--adapter_sequence, --adapter_sequence_r2. For PE data, this step is skipped if last step succeeded). 11, trim to max length (---max_len). ```. As @whhyh1314 pointed out, I may add options to change the orders. But before that you can change the order in the source.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:38,energy efficiency,adapt,adapter,38,Probably putting polyX trimming after adapter trimming is a better solution.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:38,integrability,adapt,adapter,38,Probably putting polyX trimming after adapter trimming is a better solution.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:38,interoperability,adapt,adapter,38,Probably putting polyX trimming after adapter trimming is a better solution.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:38,modifiability,adapt,adapter,38,Probably putting polyX trimming after adapter trimming is a better solution.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:82,usability,user,users,82,"Yes, adding options to change the different steps' orders is a perfect choice for users.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:153,deployability,updat,update,153,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:50,energy efficiency,adapt,adapter,50,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:50,integrability,adapt,adapter,50,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:80,integrability,sub,submitted,80,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:50,interoperability,adapt,adapter,50,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:50,modifiability,adapt,adapter,50,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:153,safety,updat,update,153,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:153,security,updat,update,153,"After consideration, I think polyX trimming after adapter trimming is better. I submitted a commit to change the order, please try the latest 0.19.7 and update here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:48,safety,test,test,48,Could you please upload a poly-A data for me to test?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:48,testability,test,test,48,Could you please upload a poly-A data for me to test?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:247,energy efficiency,adapt,adaptor,247,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:247,integrability,adapt,adaptor,247,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:247,interoperability,adapt,adaptor,247,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:571,interoperability,specif,specify,571,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:247,modifiability,adapt,adaptor,247,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:558,modifiability,paramet,parameter,558,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:547,security,control,controlled,547,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:547,testability,control,controlled,547,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:363,usability,workflow,workflow,363,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:542,usability,user,user-controlled,542,"hmm, .. okay. But is there any reason why ""global trimming"" (`--trim_front / --trim_tail`) takes place before all other trimming steps? . E.g. I need this this option to trim off 10 bases from the final, clean product (after bad quality, illumina adaptor and polyA/G have been removed). It makes IMHO no sense to hard-clip data in a ""more-than-one-thing-to-trim"" workflow before the sequence/pattern-based trimming steps. So I would need to run `fastp <quality/Illumina/polyAG params> | fastp <hard_clip params>`. . Maybe you could provide a user-controlled parameter to specify *when* to run hard clipping (`--trim_front/tail`)? Before or after sequence/pattern-based trimming steps.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:41,deployability,artifact,artifacts,41,"global trimming is used to fix sequencer artifacts, for example --trim_tail=1 to cut the 151 cycle for 150 PE sequencing.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:411,energy efficiency,adapt,adapter,411,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:411,integrability,adapt,adapter,411,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:411,interoperability,adapt,adapter,411,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:73,modifiability,paramet,parameter,73,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:411,modifiability,adapt,adapter,411,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/132:680,reliability,doe,doesn,680,"Hi! I'm trying to cut polyA tails with FastP and I've run twice changing parameter order. . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --trim_poly_g --trim_poly_x --detect_adapter_for_pe --cut_front 25 --cut_tail 25 --cut_mean_quality 25 -l 100 -h report_fastp.html . `. and after reading this issue in the following mode (polyT and polyX triming after adapter trimming): . `fastp -i S8_L001_R1_001.fastq.gz -I S8_L001_R2_001.fastq.gz -o out1.clean.fq.gz -O out2.clean.fq.gz --cut_front 25 --cut_tail 25 --cut_mean_quality 25 --detect_adapter_for_pe --trim_poly_g --trim_poly_x -l 100 -h report_fastp.html. `. However, it doesn't seem to work, as it remains polyA at the end of the files... (MultiQC report attached). . ![Captura de pantalla 2024-01-31 a las 22 27 04](https://github.com/OpenGene/fastp/assets/26143966/d4f808f4-35bf-4a50-bfe5-d82cec62afa7). FastP v0.23.4. Some suggestions??? Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/132
https://github.com/OpenGene/fastp/issues/133:30,deployability,version,version,30,I will fix this issue in next version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/133:30,integrability,version,version,30,I will fix this issue in next version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/133:30,modifiability,version,version,30,I will fix this issue in next version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/133:13,safety,valid,valid,13,"I think each valid FASTQ record should start with the ID row, which starts with an `@` . Do you agree?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/133:48,safety,valid,valid,48,"I just add a commit to skip the reads without a valid name, which should start with an `@`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/133:105,safety,valid,valid,105,"No, this will not fix the issue. You can see in my example, on line 5, there is a correct ""@"" symbol and valid ID line, but the sequence line and the quality sequence line are empty, and in the output, it gives only 2 lines for that entry instead of 4 lines, so the whole output is wrong. So it needs to check that those are not empty, you cannot just check the header name.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/133
https://github.com/OpenGene/fastp/issues/134:26,deployability,version,version,26,"It's discarded. Or in new version, it can be stored in unpaired files.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/134
https://github.com/OpenGene/fastp/issues/134:26,integrability,version,version,26,"It's discarded. Or in new version, it can be stored in unpaired files.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/134
https://github.com/OpenGene/fastp/issues/134:26,modifiability,version,version,26,"It's discarded. Or in new version, it can be stored in unpaired files.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/134
https://github.com/OpenGene/fastp/issues/135:46,safety,test,test,46,My mistake. I assumed the data i was using to test fastp was phred64 but realised it is phred33.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/135
https://github.com/OpenGene/fastp/issues/135:46,testability,test,test,46,My mistake. I assumed the data i was using to test fastp was phred64 but realised it is phred33.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/135
https://github.com/OpenGene/fastp/issues/136:105,energy efficiency,adapt,adaptors,105,@LucoLab you probably want to use https://github.com/rrwick/Porechop instead. It also looks for internal adaptors / chimeras etc.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/136
https://github.com/OpenGene/fastp/issues/136:105,integrability,adapt,adaptors,105,@LucoLab you probably want to use https://github.com/rrwick/Porechop instead. It also looks for internal adaptors / chimeras etc.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/136
https://github.com/OpenGene/fastp/issues/136:105,interoperability,adapt,adaptors,105,@LucoLab you probably want to use https://github.com/rrwick/Porechop instead. It also looks for internal adaptors / chimeras etc.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/136
https://github.com/OpenGene/fastp/issues/136:105,modifiability,adapt,adaptors,105,@LucoLab you probably want to use https://github.com/rrwick/Porechop instead. It also looks for internal adaptors / chimeras etc.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/136
https://github.com/OpenGene/fastp/issues/137:11,performance,time,times,11,"Repeated 3 times , got 3 different results. ![1](https://user-images.githubusercontent.com/18110346/53401358-9ff0ce00-39ea-11e9-8a4c-6bd61f808547.png)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:57,usability,user,user-images,57,"Repeated 3 times , got 3 different results. ![1](https://user-images.githubusercontent.com/18110346/53401358-9ff0ce00-39ea-11e9-8a4c-6bd61f808547.png)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:11,modifiability,paramet,parameters,11,"Hi,. which parameters did you use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:262,deployability,depend,depending,262,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:303,energy efficiency,adapt,adapter,303,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:262,integrability,depend,depending,262,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:303,integrability,adapt,adapter,303,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:303,interoperability,adapt,adapter,303,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:262,modifiability,depend,depending,262,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:303,modifiability,adapt,adapter,303,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:400,modifiability,paramet,parameter,400,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:447,performance,time,time,447,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:262,safety,depend,depending,262,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/137:262,testability,depend,depending,262,Dont know if you worked it out but i suspect it is due to the way the UMI algorithm works. You can see the differences arent great between the runs and that actually the percentage of Q20 and Q30 are the same. I guess there are a few reads in your data set that depending on how the UMI works will have adapter trimming or not... One way to check this out would be to make runs again without the umi parameter and check if the result changes this time. .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/137
https://github.com/OpenGene/fastp/issues/138:155,availability,sli,sliding,155,> The poly-G in the middle of reads are usually with low quality. > . > You can use `--cut_right` to trim them. Thanks. AfterQC can trim the poly-G with a sliding window. Is that correct?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/138
https://github.com/OpenGene/fastp/issues/138:155,reliability,sli,sliding,155,> The poly-G in the middle of reads are usually with low quality. > . > You can use `--cut_right` to trim them. Thanks. AfterQC can trim the poly-G with a sliding window. Is that correct?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/138
https://github.com/OpenGene/fastp/issues/139:69,deployability,updat,update,69,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:191,interoperability,specif,specifying,191,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:797,interoperability,specif,specify,797,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:972,modifiability,paramet,parameters,972,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:69,safety,updat,update,69,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:152,safety,input,input,152,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:940,safety,detect,detection,940,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:69,security,updat,update,69,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:940,security,detect,detection,940,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:61,usability,help,help,61,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:152,usability,input,input,152,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:165,usability,support,supports,165,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:362,usability,indicat,indicate,362,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/139:595,usability,prefer,prefers,595,"Hi guys, this function is implemented, please have a try and help to update this thread with the results. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode, the output will be a single file. In the output file, a tag will `merged_xxx_yyy` be added to the read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. For the pairs of reads that cannot be merged successfully, they will be both included in the output by default. But you can specify the `--chastity` option to discard the unmerged reads. Same as the base correction feature, this function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/139
https://github.com/OpenGene/fastp/issues/140:83,deployability,version,version,83,"I agree with @russHyde - if I ask for `--help` it should be `stdout`, same with `--version` (and return 0). However if you want to print the help because I did something wrong, it should be `stderr` (and return non-zero).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/140
https://github.com/OpenGene/fastp/issues/140:83,integrability,version,version,83,"I agree with @russHyde - if I ask for `--help` it should be `stdout`, same with `--version` (and return 0). However if you want to print the help because I did something wrong, it should be `stderr` (and return non-zero).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/140
https://github.com/OpenGene/fastp/issues/140:83,modifiability,version,version,83,"I agree with @russHyde - if I ask for `--help` it should be `stdout`, same with `--version` (and return 0). However if you want to print the help because I did something wrong, it should be `stderr` (and return non-zero).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/140
https://github.com/OpenGene/fastp/issues/140:41,usability,help,help,41,"I agree with @russHyde - if I ask for `--help` it should be `stdout`, same with `--version` (and return 0). However if you want to print the help because I did something wrong, it should be `stderr` (and return non-zero).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/140
https://github.com/OpenGene/fastp/issues/140:141,usability,help,help,141,"I agree with @russHyde - if I ask for `--help` it should be `stdout`, same with `--version` (and return 0). However if you want to print the help because I did something wrong, it should be `stderr` (and return non-zero).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/140
https://github.com/OpenGene/fastp/pull/142:15,safety,review,review,15,"Thanks, I will review it soon.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:15,testability,review,review,15,"Thanks, I will review it soon.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:27,safety,review,review,27,"Sorry, but after a careful review, I think both of your changes are incorrect, so I cannot merge them. Your future contributions are still welcome.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:27,testability,review,review,27,"Sorry, but after a careful review, I think both of your changes are incorrect, so I cannot merge them. Your future contributions are still welcome.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:49,energy efficiency,estimat,estimate,49,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:563,energy efficiency,estimat,estimation,563,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:155,integrability,buffer,buffer,155,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:317,safety,test,test,317,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:383,safety,test,tested,383,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:317,testability,test,test,317,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/pull/142:383,testability,test,tested,383,"thank you, I realized where am I wrong now, when estimate the read number, after the first read is readed, in fact there have been more bytes red into the buffer than that one read needed, so we minght just minus one read, the accurate amount is really so hard to calculate to my knowledge, but aftet minus - read, i test this function and found the results is still accurate for my tested fastq file, an I think this little offset will not affect the results if the fastq is large enough. anyway, keep it just like the original will not affect so much about the estimation as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/142
https://github.com/OpenGene/fastp/issues/143:150,energy efficiency,adapt,adapter,150,"oops, I've gotten it wrong. There's no sam/ubam output in fastp. Apologies. I'd need to work with the diff perhaps. Is there a way to just remove the adapter bases though? that might suffice.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/143
https://github.com/OpenGene/fastp/issues/143:150,integrability,adapt,adapter,150,"oops, I've gotten it wrong. There's no sam/ubam output in fastp. Apologies. I'd need to work with the diff perhaps. Is there a way to just remove the adapter bases though? that might suffice.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/143
https://github.com/OpenGene/fastp/issues/143:150,interoperability,adapt,adapter,150,"oops, I've gotten it wrong. There's no sam/ubam output in fastp. Apologies. I'd need to work with the diff perhaps. Is there a way to just remove the adapter bases though? that might suffice.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/143
https://github.com/OpenGene/fastp/issues/143:150,modifiability,adapt,adapter,150,"oops, I've gotten it wrong. There's no sam/ubam output in fastp. Apologies. I'd need to work with the diff perhaps. Is there a way to just remove the adapter bases though? that might suffice.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/143
https://github.com/OpenGene/fastp/pull/144:69,interoperability,conflict,conflicts,69,"Sorry, I didn't notice this PR. I would like to merge it, but it has conflicts now. Could you please resolve the conflicts?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/144
https://github.com/OpenGene/fastp/pull/144:113,interoperability,conflict,conflicts,113,"Sorry, I didn't notice this PR. I would like to merge it, but it has conflicts now. Could you please resolve the conflicts?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/144
https://github.com/OpenGene/fastp/issues/147:241,availability,consist,consistent,241,"```What happens with either R1 or R2 reads resulting from successful filtering procedures but lacking a related mate? ```. If we output `R1.clean.fq` and `R2.clean.fq` separately, the unpaired reads should be discarded to keep the read name consistent.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:69,integrability,filter,filtering,69,"```What happens with either R1 or R2 reads resulting from successful filtering procedures but lacking a related mate? ```. If we output `R1.clean.fq` and `R2.clean.fq` separately, the unpaired reads should be discarded to keep the read name consistent.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:241,usability,consist,consistent,241,"```What happens with either R1 or R2 reads resulting from successful filtering procedures but lacking a related mate? ```. If we output `R1.clean.fq` and `R2.clean.fq` separately, the unpaired reads should be discarded to keep the read name consistent.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:195,availability,consist,consistent,195,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:426,deployability,contain,containing,426,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:42,energy efficiency,Current,Currently,42,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:312,energy efficiency,current,currently,312,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:79,integrability,filter,filters,79,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:260,integrability,filter,filters,260,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:508,integrability,sub,subsequent,508,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:294,reliability,doe,does,294,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:93,safety,valid,valid,93,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:437,safety,valid,valid,437,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:626,safety,compl,completely,626,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:626,security,compl,completely,626,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:195,usability,consist,consistent,195,"Maybe my question was not precise enough. Currently, after passing all quality filters, only valid R1/R2 pairs are written to separate R1.clean.fq and R2.clean.fq files in an ordered manner with consistent read names. But if for instance R1 passes the quality filters, but R2 of this read pair does not... fastp currently discards the R1 as well. Couldn't you output the passing mate (R1 in this case) to a distinct file only containing valid but unpaired reads? Thus, more high-quality reads can be used in subsequent assemblies, for instance. Of course, the passing unpaired reads are not ordered anymore, but this would be completely acceptable anyways. What are your thoughts regarding the initial question?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:908,availability,error,error,908,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:941,energy efficiency,Current,Currently,941,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1008,integrability,filter,filtering,1008,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1180,integrability,filter,filters,1180,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:908,performance,error,error,908,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:715,safety,detect,detect,715,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:908,safety,error,error,908,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1515,safety,compl,complimented,1515,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:715,security,detect,detect,715,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1515,security,compl,complimented,1515,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:908,usability,error,error,908,"Hi,. a follow up...hopefully this clarifies what I am trying to ask/suggest. Below you find an extract from the SPAdes manual of how to provide PE data:. ```. Paired-end libraries. --pe<#>-1 <file_name> . File with left reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-2 <file_name> . File with right reads for paired-end library number <#> (<#> = 1,2,..,9). --pe<#>-m <file_name> . File with merged reads from paired-end library number <#> (<#> = 1,2,..,9) . If the properties of the library permit, paired reads can be merged using special software. Non-empty files with (remaining) unmerged left/right reads (separate or interlaced) must be provided for the same library for SPAdes to correctly detect the original read length. --pe<#>-s <file_name> . File with unpaired reads from paired-end library number <#> (<#> = 1,2,..,9) . For example, paired reads can become unpaired during the error correction procedure. ```. Currently, fastp can serve the R1 (pe-1) and R2 (pe-2) reads after filtering and recently, also merged R12 (pe-m). In order to utilize as much genome information as possible, it would be great if fastp could:. 1. apply the various quality filters and correction. 2. try to merge R1 and R2. 3. write merged R12 (pe-m) reads to one file, e.g. m.fastq. 4. write unmerged paired reads to R1 (pe-1) and R2 (pe-2) files, e.g. R1.fastq, R2.fastq. 5. write unmerged unpaired reads (pe-s) to another file, e.g. s.fastq. If I got it right, in step 5 R2 reads would have to be reverse complimented before writing them to s.fastq along with residual R1 reads. Unforutnately, I dont have much knowledge about fastp internals, but by this procedure, fastp could provide merged, paired and unpaired reads in a single step. This would definetly be very beneficial for assembies. . What do you think? Thanks a lot for considering and best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:35,safety,compl,completely,35,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:99,safety,compl,complicated,99,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:158,safety,compl,complicated,158,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:35,security,compl,completely,35,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:99,security,compl,complicated,99,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:158,security,compl,complicated,158,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:46,testability,understand,understand,46,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:170,usability,tool,tools,170,"Hi,. Thanks for your suggestion. I completely understand what you want. But it will make fastp too complicated if we implement all output. People hate to use complicated tools. I may first consider to add options to output unpaired R1 and R2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:475,energy efficiency,current,currently,475,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:379,interoperability,specif,specified,379,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:485,interoperability,specif,specified,485,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:288,modifiability,paramet,parameters,288,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:764,modifiability,paramet,parameter,764,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:866,modifiability,paramet,parameter,866,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1282,modifiability,paramet,parameters,1282,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:107,safety,compl,complicated,107,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:168,safety,compl,complexity,168,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:251,safety,input,input-,251,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:273,safety,input,input-,273,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:107,security,compl,complicated,107,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:168,security,compl,complexity,168,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:358,testability,simpl,simply,358,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:83,usability,tool,tools,83,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:251,usability,input,input-,251,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:273,usability,input,input-,273,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:309,usability,user,user,309,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:358,usability,simpl,simply,358,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1244,usability,tool,tools,1244,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1302,usability,clear,clearly,1302,"Hi, . sry for bothering ;-) that's a solid point and I totally agree with you that tools should not be too complicated! . But i guess there isn't so much of additional complexity involved here... Fastp knows when it deals with PE data due to the `-i <input-1-file>` / `-I <input-2-file>` parameters. - If the user wants the paired unmerged files, this could simply be implicitly specified by `-o <output-1-file>` / `-O <output-2-file>`. - If merged reads are wanted, this is currently specified by `-m`. All you need to add is a related argument, so it would become `-m <merged-output-file>`. - If residual unpaired and unmerged reads are desired, just go for `-s <residual-output-file>`. So everything that needs to be changed would be a new argument to the `-m` parameter... ...and in addition, a new **optional** (and distinct from the merged read functionality) parameter/argument `-s <residual-output-file>` could be added. . I see that at least the second one can't be implemented right away and might take a while. But I would love to see this on the agenda because, by fulfilling these requirements, **fastp** would make a giant leap in terms your **an ultra-fast all-in-one FASTQ preprocessor** credo. Otherwise one had to use several tools or restart fastp with different parameters which is clearly not the way to go... Best regards!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:325,integrability,filter,filters,325,"Just to jump in. The issue with the unmated reads being included in the clean fastq is one I just bumped into and I definitely agree with you. So i'm thinking that the unmated reads should go in a separate junk file, essentially **R1 no pass.fastq** and **R2 no pass.fastq**. That can include the reads that don't pass other filters as well i think. Should resolve a lot of pain (at least for me). Also, very nice tool, especially because its clean and simple to use, which is key. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:453,testability,simpl,simple,453,"Just to jump in. The issue with the unmated reads being included in the clean fastq is one I just bumped into and I definitely agree with you. So i'm thinking that the unmated reads should go in a separate junk file, essentially **R1 no pass.fastq** and **R2 no pass.fastq**. That can include the reads that don't pass other filters as well i think. Should resolve a lot of pain (at least for me). Also, very nice tool, especially because its clean and simple to use, which is key. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:414,usability,tool,tool,414,"Just to jump in. The issue with the unmated reads being included in the clean fastq is one I just bumped into and I definitely agree with you. So i'm thinking that the unmated reads should go in a separate junk file, essentially **R1 no pass.fastq** and **R2 no pass.fastq**. That can include the reads that don't pass other filters as well i think. Should resolve a lot of pain (at least for me). Also, very nice tool, especially because its clean and simple to use, which is key. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:453,usability,simpl,simple,453,"Just to jump in. The issue with the unmated reads being included in the clean fastq is one I just bumped into and I definitely agree with you. So i'm thinking that the unmated reads should go in a separate junk file, essentially **R1 no pass.fastq** and **R2 no pass.fastq**. That can include the reads that don't pass other filters as well i think. Should resolve a lot of pain (at least for me). Also, very nice tool, especially because its clean and simple to use, which is key. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:13,deployability,updat,update,13,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:207,deployability,fail,failed,207,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:207,reliability,fail,failed,207,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:13,safety,updat,update,13,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:13,security,updat,update,13,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:81,usability,support,support,81,"Just a quick update:. I am implementing the new features, and the new fastp will support 7 separate output files:. ```. 1 merged.fq. 2 unmerged.R1.fq. 3 unmerged.R2.fq. 4 unpaired.R1.fq. 5 unpaired.R2.fq. 6 failed.fq. ```. And a `--include_unmerged` option will be provided to redirect 2~5 to 1. 4 and 5 can be the same file, as well as 6 and 7.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:63,deployability,releas,released,63,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:87,deployability,updat,update,87,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1041,deployability,fail,failed,1041,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:428,integrability,filter,filtered,428,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:538,integrability,filter,filters,538,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:619,integrability,filter,filters,619,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:720,integrability,filter,filters,720,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1059,integrability,filter,filters,1059,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:186,interoperability,specif,specifying,186,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:285,interoperability,specif,specify,285,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1536,modifiability,paramet,parameters,1536,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:639,reliability,doe,doesn,639,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:740,reliability,doe,doesn,740,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1041,reliability,fail,failed,1041,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:87,safety,updat,update,87,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:147,safety,input,input,147,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1504,safety,detect,detection,1504,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:87,security,updat,update,87,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1504,security,detect,detection,1504,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:147,usability,input,input,147,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:160,usability,support,supports,160,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1150,usability,indicat,indicate,1150,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:1383,usability,prefer,prefers,1383,"Hi guys, this feature is implemented in fastp v0.19.9 (will be released soon), see the update here:. # merge paired-end reads. For paired-end (PE) input, fastp supports stiching them by specifying the `-m/--merge` option. In this `merging` mode: . * `--merged_out` shouuld be given to specify the file to store merged reads, otherwise you should enable `--stdout` to stream the merged reads to STDOUT. The merged reads are also filtered. * `--out1` and `--out2` will be the reads that cannot be merged successfully, but both pass all the filters. * `--unpaired1` will be the reads that cannot be merged, `read1` passes filters but `read2` doesn't. * `--unpaired2` will be the reads that cannot be merged, `read2` passes filters but `read1` doesn't. * `--include_unmerged` can be enabled to make reads of `--out1`, `--out2`, `--unpaired1` and `--unpaired2` redirected to `--merged_out`. So you will get a single output file. This option is disabled by default. `--failed_out` can still be given to store the reads (either merged or unmerged) failed to passing filters. In the output file, a tag like `merged_xxx_yyy`will be added to each read name to indicate that how many base pairs are from read1 and from read2, respectively. For example, `. @NB551106:9:H5Y5GBGX2:1:22306:18653:13119 1:N:0:GATCAG merged_150_15` . means that 150bp are from read1, and 15bp are from read2. `fastp` prefers the bases in read1 since they usually have higher quality than read2. This function is also based on overlapping detection, which has adjustable parameters `overlap_len_require (default 30)` and `overlap_diff_limit (default 5)`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:93,usability,command,command,93,"Thank you so much! Also for the super fast implementation, Awesome job! The new features and command line UI open new possibilities...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:106,usability,UI,UI,106,"Thank you so much! Also for the super fast implementation, Awesome job! The new features and command line UI open new possibilities...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:67,safety,input,input,67,"Hi, just found a small typo in the usage:. ```. --unpaired2 for PE input, if read2 passed QC but read1 not, it will be written to unpaired2. If --unpaired2 is same as --umpaired1 (default mode), both unpaired reads will be written to this same file. (string [=]). ```. -> ...same as --u**m**paired1 (default mode)...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:67,usability,input,input,67,"Hi, just found a small typo in the usage:. ```. --unpaired2 for PE input, if read2 passed QC but read1 not, it will be written to unpaired2. If --unpaired2 is same as --umpaired1 (default mode), both unpaired reads will be written to this same file. (string [=]). ```. -> ...same as --u**m**paired1 (default mode)...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/147:83,usability,close,close,83,"I just saw that this is still open. I'll create a pull request with a typo fix and close this one. Again, thanks a lot for this!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/147
https://github.com/OpenGene/fastp/issues/148:167,availability,down,download,167,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:52,deployability,version,version,52,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:88,deployability,releas,released,88,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:189,deployability,version,version,189,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:52,integrability,version,version,52,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:189,integrability,version,version,189,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:52,modifiability,version,version,52,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/148:189,modifiability,version,version,189,"Hi the merge function was just introduced I the new version v0.19.8, which has not been released. If you want to try it, please compile fastp from the latest code, or download the prebuilt version from http://opengene.org/fastp/fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/148
https://github.com/OpenGene/fastp/issues/150:11,energy efficiency,cloud,cloud,11,"If you use cloud, you can choose 4 cors, 4GB RAM.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/150
https://github.com/OpenGene/fastp/issues/151:22,deployability,version,version,22,Please use the latest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/151
https://github.com/OpenGene/fastp/issues/151:22,integrability,version,version,22,Please use the latest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/151
https://github.com/OpenGene/fastp/issues/151:22,modifiability,version,version,22,Please use the latest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/151
https://github.com/OpenGene/fastp/issues/152:9,safety,compl,complicated,9,"It's not complicated to implement it. But I'd like to know anybody else wants this feature? If many people want it, I can make it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:9,security,compl,complicated,9,"It's not complicated to implement it. But I'd like to know anybody else wants this feature? If many people want it, I can make it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:120,integrability,filter,filter,120,That would be very helpful! . Given that fastp is clearly faster than Trimmomatic having similar functionality like the filter by mean quality will help users to finally decide moving to fastp ;-),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:19,usability,help,helpful,19,That would be very helpful! . Given that fastp is clearly faster than Trimmomatic having similar functionality like the filter by mean quality will help users to finally decide moving to fastp ;-),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:50,usability,clear,clearly,50,That would be very helpful! . Given that fastp is clearly faster than Trimmomatic having similar functionality like the filter by mean quality will help users to finally decide moving to fastp ;-),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:148,usability,help,help,148,That would be very helpful! . Given that fastp is clearly faster than Trimmomatic having similar functionality like the filter by mean quality will help users to finally decide moving to fastp ;-),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:153,usability,user,users,153,That would be very helpful! . Given that fastp is clearly faster than Trimmomatic having similar functionality like the filter by mean quality will help users to finally decide moving to fastp ;-),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:80,deployability,pipelin,pipelines,80,I'm agree with @fortuno. I'm thinking to moving from trimmomatic to fastp in my pipelines and similar features will help to do it.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:80,integrability,pipelin,pipelines,80,I'm agree with @fortuno. I'm thinking to moving from trimmomatic to fastp in my pipelines and similar features will help to do it.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:116,usability,help,help,116,I'm agree with @fortuno. I'm thinking to moving from trimmomatic to fastp in my pipelines and similar features will help to do it.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:67,energy efficiency,current,currently,67,"Thanks @sfchen ! For now, I think that is the only functionality I currently miss from what I am using in Trimmomatic.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:8,availability,Sli,Sliding,8,Thanks! Sliding window (which is implemented already) and mean quality are my usual filters for Trimmomatic.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:84,integrability,filter,filters,84,Thanks! Sliding window (which is implemented already) and mean quality are my usual filters for Trimmomatic.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:8,reliability,Sli,Sliding,8,Thanks! Sliding window (which is implemented already) and mean quality are my usual filters for Trimmomatic.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:5,integrability,sub,submitted,5,Just submitted a commit to support this feature,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:27,usability,support,support,27,Just submitted a commit to support this feature,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:48,integrability,filter,filtering,48,"Thanks! I've tried using just --average_qual as filtering step for PE data, but -o output is not generated (-O, --unpaired1 and --unpaired2 outputs are correctly generated).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:50,integrability,filter,filtering,50,"> Thanks! I've tried using just --average_qual as filtering step for PE data, but -o output is not generated (-O, --unpaired1 and --unpaired2 outputs are correctly generated). Can you show your command and the output folder?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:194,usability,command,command,194,"> Thanks! I've tried using just --average_qual as filtering step for PE data, but -o output is not generated (-O, --unpaired1 and --unpaired2 outputs are correctly generated). Can you show your command and the output folder?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:115,deployability,releas,release,115,"Sorry, the command was wrong (-o output wasn't correct). The new filtering option works well! Go ahead for the new release. Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:65,integrability,filter,filtering,65,"Sorry, the command was wrong (-o output wasn't correct). The new filtering option works well! Go ahead for the new release. Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/152:11,usability,command,command,11,"Sorry, the command was wrong (-o output wasn't correct). The new filtering option works well! Go ahead for the new release. Thank you very much!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/152
https://github.com/OpenGene/fastp/issues/153:186,deployability,contain,contains,186,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:16,energy efficiency,adapt,adapter,16,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:63,energy efficiency,adapt,adapters,63,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:136,energy efficiency,adapt,adapter,136,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:206,energy efficiency,adapt,adapter,206,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:282,energy efficiency,adapt,adapter,282,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:337,energy efficiency,adapt,adapter,337,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:16,integrability,adapt,adapter,16,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:63,integrability,adapt,adapters,63,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:136,integrability,adapt,adapter,136,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:206,integrability,adapt,adapter,206,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:282,integrability,adapt,adapter,282,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:337,integrability,adapt,adapter,337,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:16,interoperability,adapt,adapter,16,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:63,interoperability,adapt,adapters,63,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:136,interoperability,adapt,adapter,136,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:206,interoperability,adapt,adapter,206,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:282,interoperability,adapt,adapter,282,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:337,interoperability,adapt,adapter,337,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:16,modifiability,adapt,adapter,16,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:63,modifiability,adapt,adapters,63,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:136,modifiability,adapt,adapter,136,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:206,modifiability,adapt,adapter,206,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:282,modifiability,adapt,adapter,282,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:337,modifiability,adapt,adapter,337,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:306,safety,detect,detected,306,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:348,safety,detect,detecting,348,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:306,security,detect,detected,306,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:348,security,detect,detecting,348,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:267,usability,tool,tool,267,"```. reads with adapter trimmed: 5743820. bases trimmed due to adapters: 64967338. ```. By average, one read was trimmed with only 10bp adapter. This is very short, seems that your data contains some short adapter contamination, that was not trimmed well by previous tool. Although adapter sequence is not detected, fastp can still trim adapter by detecting overlapping regions of PE reads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:8,interoperability,share,share,8,Can you share the HTML report here?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:69,energy efficiency,adapt,adapters,69,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:146,energy efficiency,adapt,adapter,146,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:288,energy efficiency,adapt,adapter,288,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:69,integrability,adapt,adapters,69,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:146,integrability,adapt,adapter,146,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:288,integrability,adapt,adapter,288,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:69,interoperability,adapt,adapters,69,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:146,interoperability,adapt,adapter,146,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:288,interoperability,adapt,adapter,288,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:69,modifiability,adapt,adapters,69,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:146,modifiability,adapt,adapter,146,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:288,modifiability,adapt,adapter,288,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:164,safety,compl,completely,164,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:164,security,compl,completely,164,"Thank you for the fast reply,. It is interesting that fastp can find adapters in that case, but worried me that my RNA-seq provider didn't remove adapter sequences completely. Attached please find the associated html report as a pdf file. Would it be beneficial to provide fastp with the adapter sequences in my case? Mike. [HD-0018V02.pdf](https://github.com/OpenGene/fastp/files/3100198/HD-0018V02.pdf).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:27,energy efficiency,adapt,adapters,27,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:61,energy efficiency,adapt,adapter,61,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:27,integrability,adapt,adapters,27,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:61,integrability,adapt,adapter,61,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:27,interoperability,adapt,adapters,27,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:61,interoperability,adapt,adapter,61,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:27,modifiability,adapt,adapters,27,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:61,modifiability,adapt,adapter,61,I checked your report. The adapters are true Illumina TruSeq adapter.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:54,energy efficiency,adapt,adapter,54,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:103,energy efficiency,adapt,adapter,103,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:54,integrability,adapt,adapter,54,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:103,integrability,adapt,adapter,103,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:54,interoperability,adapt,adapter,54,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:103,interoperability,adapt,adapter,103,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:54,modifiability,adapt,adapter,54,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/153:103,modifiability,adapt,adapter,103,"```. Would it be beneficial to provide fastp with the adapter sequences in my case. ```. Providing the adapter sequences may improve a little, but not much.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/153
https://github.com/OpenGene/fastp/issues/154:29,integrability,filter,filter,29,you can add `-q 20 -u 10` to filter out the reads that have >10% bases lower than Q20,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:125,reliability,Doe,Does,125,"Most read trimmers have an option to just remove the low quality bases from the end of the read, not discard the whole read. Does fastp have this option?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:68,availability,sli,sliding,68,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:136,availability,sli,sliding,136,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:197,availability,operat,operations,197,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:272,availability,sli,sliding,272,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:683,availability,sli,sliding,683,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1095,availability,sli,sliding,1095,"ating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will i",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1396,availability,SLI,SLIDINGWINDOW,1396," Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1447,availability,operat,operations,1447,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1641,interoperability,coordinat,coordination,1641,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:2201,interoperability,coordinat,coordination,2201,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1885,performance,perform,performed,1885,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:68,reliability,sli,sliding,68,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:136,reliability,sli,sliding,136,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:272,reliability,sli,sliding,272,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:683,reliability,sli,sliding,683,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1095,reliability,sli,sliding,1095,"ating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will i",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1396,reliability,SLI,SLIDINGWINDOW,1396," Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1925,safety,avoid,avoid,1925,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:50,usability,support,supports,50,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:176,usability,support,supports,176,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:388,usability,stop,stop,388,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:799,usability,stop,stop,799,"Yes. # per read cutting by quality score. `fastp` supports per read sliding window cutting by evaluating the mean quality scores in the sliding window. From `v0.19.6`, `fastp` supports 3 different operations, and you enable one or all of them:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1238,usability,stop,stop,1238,"em:. * `-5, --cut_front` move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped rea",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/154:1885,usability,perform,performed,1885,"The leading N bases are also trimmed. Use `cut_front_window_size` to set the widnow size, and `cut_front_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `LEADING` method. * `-3, --cut_tail` move a sliding window from tail (3') to front, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise. Default is disabled. The trailing N bases are also trimmed. Use `cut_tail_window_size` to set the widnow size, and `cut_tail_mean_quality` to set the mean quality threshold. If the window size is 1, this is similar as the Trimmomatic `TRAILING` method. * `-r, --cut_right` move a sliding window from front to tail, if meet one window with mean quality < threshold, drop the bases in the window and the right part, and then stop. Use `cut_right_window_size` to set the widnow size, and `cut_right_mean_quality` to set the mean quality threshold. This is similar as the Trimmomatic `SLIDINGWINDOW` method. ***WARNING: all these three operations will interfere deduplication for SE data, and `--cut_front` or `--cut_right` may also interfere deduplication for PE data. The deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs.***. If `--cut_right` is enabled, then there is no need to enable `--cut_tail`, since the former is more aggressive. If `--cut_right` is enabled together with `--cut_front`, `--cut_front` will be performed first before `--cut_right` to avoid dropping whole reads due to the low quality starting bases. Please be noted that `--cut_front` will interfere deduplication for both PE/SE data, and `--cut_tail` will interfere deduplication for SE data, since the deduplication algorithms rely on the exact matchment of coordination regions of the grouped reads/pairs. If you don't set window size and mean quality threshold for these function respectively, `fastp` will use the values from `-W, --cut_window_size` and `-M, --cut_mean_quality `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/154
https://github.com/OpenGene/fastp/issues/155:27,deployability,version,version,27,Can you please try the new version v0.20.0? Some related changes have been made since v0.19.4.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/155
https://github.com/OpenGene/fastp/issues/155:27,integrability,version,version,27,Can you please try the new version v0.20.0? Some related changes have been made since v0.19.4.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/155
https://github.com/OpenGene/fastp/issues/155:27,modifiability,version,version,27,Can you please try the new version v0.20.0? Some related changes have been made since v0.19.4.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/155
https://github.com/OpenGene/fastp/issues/156:1718,availability,echo,echo,1718,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:0,deployability,Patch,Patches,0,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:21,deployability,updat,updated,21,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1566,deployability,stage,staged,1566,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1573,deployability,instal,installs,1573,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1604,deployability,manag,managers,1604,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1615,deployability,instal,install,1615,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1627,deployability,instal,install,1627,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1668,deployability,instal,install,1668,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1724,deployability,Instal,Installed,1724,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1756,deployability,manag,managers,1756,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1769,deployability,instal,install-strip,1769,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1820,deployability,instal,install-strip,1820,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1835,deployability,instal,install,1835,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2223,deployability,version,version,2223,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1604,energy efficiency,manag,managers,1604,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1756,energy efficiency,manag,managers,1756,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2223,integrability,version,version,2223,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:202,interoperability,BIND,BINDIR,202,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:287,interoperability,BIND,BINDIR,287,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1098,interoperability,standard,standard,1098,". @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1647,interoperability,BIND,BINDIR,1647,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1698,interoperability,BIND,BINDIR,1698,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1867,interoperability,BIND,BINDIR,1867,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:202,modifiability,BIND,BINDIR,202,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:287,modifiability,BIND,BINDIR,287,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1596,modifiability,pac,package,1596,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1647,modifiability,BIND,BINDIR,1647,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1698,modifiability,BIND,BINDIR,1698,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1748,modifiability,pac,package,1748,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1867,modifiability,BIND,BINDIR,1867,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2223,modifiability,version,version,2223,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2071,performance,time,time,2071,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:0,safety,Patch,Patches,0,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:21,safety,updat,updated,21,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1604,safety,manag,managers,1604,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:1756,safety,manag,managers,1756,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2377,safety,test,test,2377,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2399,safety,test,tester,2399,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:0,security,Patch,Patches,0,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:21,security,updat,updated,21,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2048,testability,unit,unittest,2048,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2377,testability,test,test,2377,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2390,testability,Unit,UnitTest,2390,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2399,testability,test,tester,2399,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:690,usability,user,user,690,"Patches improved and updated for 0.23.1:. ```. --- Makefile.orig 2021-10-19 02:19:29 UTC. +++ Makefile. @@ -2,11 +2,13 @@ DIR_INC := ./inc. DIR_SRC := ./src. DIR_OBJ := ./obj. . -PREFIX ?= /usr/local. -BINDIR ?= $(PREFIX)/bin. -INCLUDE_DIRS ?=. -LIBRARY_DIRS ?=. +PREFIX ?= /usr/local. +BINDIR ?= $(PREFIX)/bin. +INCLUDE_DIRS ?=. +LIBRARY_DIRS ?=. . +STRIP ?= strip. +. SRC := $(wildcard ${DIR_SRC}/*.cpp). OBJ := $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2275,usability,help,help,2275,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/156:2291,usability,help,help,2291,":= $(patsubst %.cpp,${DIR_OBJ}/%.o,$(notdir ${SRC})). . @@ -15,15 +17,19 @@ TARGET := fastp. BIN_TARGET := ${TARGET}. . CXX ?= g++. -CXXFLAGS := -std=c++11 -pthread -g -O3 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)) ${CXXFLAGS}. +# Optional flags that the user can override by setting CXXFLAGS in the. +# env or make argument. +CXXFLAGS ?= -g -O3. +# Required flags. +CXXFLAGS += -std=c++11 -I${DIR_INC} $(foreach includedir,$(INCLUDE_DIRS),-I$(includedir)). LIBS := -lisal -ldeflate -lpthread. STATIC_FLAGS := -static -Wl,--no-as-needed -pthread. -LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS) $(LD_FLAGS). +# Append required flags to standard LDFLAGS from env. +LDFLAGS += $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(LIBS). STATIC_LD_FLAGS := $(foreach librarydir,$(LIBRARY_DIRS),-L$(librarydir)) $(STATIC_FLAGS) $(LIBS) $(STATIC_LD_FLAGS). . -. ${BIN_TARGET}:${OBJ}. - $(CXX) $(OBJ) -o $@ $(LD_FLAGS). + $(CXX) $(OBJ) -o $@ $(LDFLAGS). . static:${OBJ}. $(CXX) $(OBJ) -o ${BIN_TARGET} $(STATIC_LD_FLAGS). @@ -49,6 +55,11 @@ make_obj_dir:. mkdir $(DIR_OBJ) ; \. fi. . +# Respect DESTDIR for staged installs (used by most package managers). install:. - install $(TARGET) $(BINDIR)/$(TARGET). + install $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET). @echo ""Installed."". +. +# Many package managers use install-strip target if debugging is not enabled. +install-strip: install. + $(STRIP) $(DESTDIR)$(BINDIR)/$(TARGET). --- src/main.cpp.orig 2021-10-19 02:19:29 UTC. +++ src/main.cpp. @@ -1,4 +1,5 @@. #include <stdio.h>. +#include <sysexits.h>. #include ""fastqreader.h"". #include ""unittest.h"". #include <time.h>. @@ -18,7 +19,7 @@ int main(int argc, char* argv[]){. if(argc == 1) {. cerr << ""fastp: an ultra-fast all-in-one FASTQ preprocessor"" << endl << ""version "" << FASTP_VER << endl;. //cerr << ""fastp --help to see the help""<<endl;. - //return 0;. + return EX_USAGE;. }. if (argc == 2 && strcmp(argv[1], ""test"")==0){. UnitTest tester;. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/156
https://github.com/OpenGene/fastp/issues/158:108,energy efficiency,adapt,adaptors,108,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:230,energy efficiency,adapt,adapter,230,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:296,energy efficiency,adapt,adaptor,296,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:108,integrability,adapt,adaptors,108,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:230,integrability,adapt,adapter,230,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:296,integrability,adapt,adaptor,296,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:108,interoperability,adapt,adaptors,108,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:230,interoperability,adapt,adapter,230,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:296,interoperability,adapt,adaptor,296,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:108,modifiability,adapt,adaptors,108,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:230,modifiability,adapt,adapter,230,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:296,modifiability,adapt,adaptor,296,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:121,safety,detect,detected,121,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:216,safety,detect,detected,216,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:121,security,detect,detected,121,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/158:216,security,detect,detected,216,"I believe you raised a very good question. For PE data, most reads would be trimmed symmetrically since the adaptors are detected by finding the overlapped regions. But for some cases (rarely happen), if one read is detected with adapter and the other one is not, fastp only trimmed the one with adaptor found. But I am considering to implement symmetrical trimming for this case, although it happens rarely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/158
https://github.com/OpenGene/fastp/issues/159:52,reliability,doe,doesn,52,"The naive trimming, which is called global trimming doesn't use quality scores. But the quality cutting use quality scores. See the doc here: https://github.com/OpenGene/fastp#per-read-cutting-by-quality-score",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:22,energy efficiency,adapt,adaptor,22,"But you mentioned the adaptor trimming. Actually that is another trimming, different from naive trimming or quality trimming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:22,integrability,adapt,adaptor,22,"But you mentioned the adaptor trimming. Actually that is another trimming, different from naive trimming or quality trimming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:22,interoperability,adapt,adaptor,22,"But you mentioned the adaptor trimming. Actually that is another trimming, different from naive trimming or quality trimming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:22,modifiability,adapt,adaptor,22,"But you mentioned the adaptor trimming. Actually that is another trimming, different from naive trimming or quality trimming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:327,availability,error,error,327,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:410,energy efficiency,adapt,adapter,410,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:410,integrability,adapt,adapter,410,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:410,interoperability,adapt,adapter,410,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:752,interoperability,format,format,752,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:410,modifiability,adapt,adapter,410,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:327,performance,error,error,327,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:327,safety,error,error,327,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:650,testability,simpl,simplify,650,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:327,usability,error,error,327,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:650,usability,simpl,simplify,650,"Hi,. I think global trimming is just removing a fixed number of bases from either end of the reads. And for trimming by quality, both Naive and Phred algorithms use quality scores (http://seqanswers.com/forums/showpost.php?p=144154&postcount=17), but naive takes the quality score as an integer without taking into account the error probability it represents unlike the Phred algorithm. The reason I mentioned adapter trimming is because it outperforms `bbduk.sh` from `BBTools` in that particular task, however `bbduk.sh` uses the PHRED algorithm to trim by quality which makes it better suited for the trimming. At the end, I am looking forward to simplify my pre-processing of the reads ideally using a single program. By the way, I really like the format of the reports, is a really good idea.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:219,availability,error,errors,219,"Actually PHRED score is not that precise and not that useful. Think about the Illumina NovaSeq data, it only has four different quality bins: `F`, `#`, `:`, `,`, how can they represent the accurate possibility of being errors? Some `smart` algorithms apply PHRED algorithms, but actually they may get worse results since the PHRED scores are not as precise as they expected. In contrast, naive threshold can work much more stably for modern FASTQ data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:219,performance,error,errors,219,"Actually PHRED score is not that precise and not that useful. Think about the Illumina NovaSeq data, it only has four different quality bins: `F`, `#`, `:`, `,`, how can they represent the accurate possibility of being errors? Some `smart` algorithms apply PHRED algorithms, but actually they may get worse results since the PHRED scores are not as precise as they expected. In contrast, naive threshold can work much more stably for modern FASTQ data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:219,safety,error,errors,219,"Actually PHRED score is not that precise and not that useful. Think about the Illumina NovaSeq data, it only has four different quality bins: `F`, `#`, `:`, `,`, how can they represent the accurate possibility of being errors? Some `smart` algorithms apply PHRED algorithms, but actually they may get worse results since the PHRED scores are not as precise as they expected. In contrast, naive threshold can work much more stably for modern FASTQ data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:219,usability,error,errors,219,"Actually PHRED score is not that precise and not that useful. Think about the Illumina NovaSeq data, it only has four different quality bins: `F`, `#`, `:`, `,`, how can they represent the accurate possibility of being errors? Some `smart` algorithms apply PHRED algorithms, but actually they may get worse results since the PHRED scores are not as precise as they expected. In contrast, naive threshold can work much more stably for modern FASTQ data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:0,energy efficiency,Cool,Cool,0,"Cool,. However I still have lots of old HiSeq data :) , one last question:. If I want to trim by quality from 5' and 3' and then discard reads that don't pass certain average quality how would I setup my command? I did something like:. ```. -5 6 -3 6 -e 10. ```. but that eliminates most of my data, do the filter by average quality happens before or after the trimming from the ends?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:307,integrability,filter,filter,307,"Cool,. However I still have lots of old HiSeq data :) , one last question:. If I want to trim by quality from 5' and 3' and then discard reads that don't pass certain average quality how would I setup my command? I did something like:. ```. -5 6 -3 6 -e 10. ```. but that eliminates most of my data, do the filter by average quality happens before or after the trimming from the ends?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:204,usability,command,command,204,"Cool,. However I still have lots of old HiSeq data :) , one last question:. If I want to trim by quality from 5' and 3' and then discard reads that don't pass certain average quality how would I setup my command? I did something like:. ```. -5 6 -3 6 -e 10. ```. but that eliminates most of my data, do the filter by average quality happens before or after the trimming from the ends?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/159:0,integrability,filter,filtering,0,filtering by average quality happens after all trimming.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/159
https://github.com/OpenGene/fastp/issues/160:28,deployability,version,version,28,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:190,energy efficiency,adapt,adapters,190,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:28,integrability,version,version,28,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:190,integrability,adapt,adapters,190,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:190,interoperability,adapt,adapters,190,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:28,modifiability,version,version,28,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:190,modifiability,adapt,adapters,190,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:232,safety,detect,detection,232,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:232,security,detect,detection,232,"Thanks for your info. Which version did you use? Can you upload a file with the first 100K reads here, so I can reproduce the problem? You can remove `--detect_adapter_for_pe` for WAR. Most adapters will be still trimmed by overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:52,safety,detect,detected,52,"I am using v. 0.20.0. The telomeric sequence is not detected as adadpter when I remove `--detect_adapter_for_pe` from the command. I just included that option because I read in your manual it makes it more sensitive. I also attach the first 100k reads, thanks for the help. [100k_R1.fq.gz](https://github.com/OpenGene/fastp/files/3241732/100k_R1.fq.gz). [100k_R2.fq.gz](https://github.com/OpenGene/fastp/files/3241733/100k_R2.fq.gz).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:52,security,detect,detected,52,"I am using v. 0.20.0. The telomeric sequence is not detected as adadpter when I remove `--detect_adapter_for_pe` from the command. I just included that option because I read in your manual it makes it more sensitive. I also attach the first 100k reads, thanks for the help. [100k_R1.fq.gz](https://github.com/OpenGene/fastp/files/3241732/100k_R1.fq.gz). [100k_R2.fq.gz](https://github.com/OpenGene/fastp/files/3241733/100k_R2.fq.gz).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:122,usability,command,command,122,"I am using v. 0.20.0. The telomeric sequence is not detected as adadpter when I remove `--detect_adapter_for_pe` from the command. I just included that option because I read in your manual it makes it more sensitive. I also attach the first 100k reads, thanks for the help. [100k_R1.fq.gz](https://github.com/OpenGene/fastp/files/3241732/100k_R1.fq.gz). [100k_R2.fq.gz](https://github.com/OpenGene/fastp/files/3241733/100k_R2.fq.gz).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:268,usability,help,help,268,"I am using v. 0.20.0. The telomeric sequence is not detected as adadpter when I remove `--detect_adapter_for_pe` from the command. I just included that option because I read in your manual it makes it more sensitive. I also attach the first 100k reads, thanks for the help. [100k_R1.fq.gz](https://github.com/OpenGene/fastp/files/3241732/100k_R1.fq.gz). [100k_R2.fq.gz](https://github.com/OpenGene/fastp/files/3241733/100k_R2.fq.gz).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:373,energy efficiency,adapt,adapter,373,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:475,energy efficiency,adapt,adapter,475,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:373,integrability,adapt,adapter,373,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:475,integrability,adapt,adapter,475,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:373,interoperability,adapt,adapter,373,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:475,interoperability,adapt,adapter,475,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:373,modifiability,adapt,adapter,373,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:475,modifiability,adapt,adapter,475,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:339,performance,time,time,339,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:363,safety,Detect,Detecting,363,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:465,safety,Detect,Detecting,465,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:363,security,Detect,Detecting,363,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:465,security,Detect,Detecting,465,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:74,usability,progress,progress,74,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:113,usability,command,command,113,"Hi, @sfchen . I have the same issue with @edgardomortiz . Did it have any progress or solution ? . . Here is the command I use. ```shell. fastp -w 6 -6 -i s1.R1.fastq.gz -I s1.R2.fastq.gz --detect_adapter_for_pe --length_required 45 -o s1.Clean.R1.fastq.gz -O s1.Clean.R2.fastq.gz --json s1.fastp.json --html s1.fastp.html. fastp v0.20.0, time used: 397 seconds. Detecting adapter sequence for read1... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. Detecting adapter sequence for read2... CTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAAACCCTAA. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:591,energy efficiency,adapt,adapter,591,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:626,energy efficiency,adapt,adapter,626,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:728,energy efficiency,adapt,adapter,728,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:908,energy efficiency,adapt,adapter-contaminated,908,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:984,energy efficiency,adapt,adapter,984,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:591,integrability,adapt,adapter,591,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:626,integrability,adapt,adapter,626,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:728,integrability,adapt,adapter,728,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:908,integrability,adapt,adapter-contaminated,908,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:984,integrability,adapt,adapter,984,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:591,interoperability,adapt,adapter,591,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:626,interoperability,adapt,adapter,626,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:728,interoperability,adapt,adapter,728,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:908,interoperability,adapt,adapter-contaminated,908,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:984,interoperability,adapt,adapter,984,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:591,modifiability,adapt,adapter,591,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:626,modifiability,adapt,adapter,626,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:728,modifiability,adapt,adapter,728,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:908,modifiability,adapt,adapter-contaminated,908,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:984,modifiability,adapt,adapter,984,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:599,safety,detect,detection,599,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:616,safety,Detect,Detecting,616,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:718,safety,Detect,Detecting,718,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:974,safety,avoid,avoid,974,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:996,safety,detect,detection,996,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:599,security,detect,detection,599,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:616,security,Detect,Detecting,616,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:718,security,Detect,Detecting,718,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:996,security,detect,detection,996,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:84,usability,command,command,84,"Hi, @sfchen. I also have the same issue with @edgardomortiz and @baozg . Here's the command that I use:. ```. fastp --detect_adapter_for_pe \. --unqualified_percent_limit 50 \. --cut_right --cut_right_window_size 4 --cut_right_mean_quality 20 \. --correction \. --in1 SRR10260015_1.fastq.gz \. --in2 SRR10260015_2.fastq.gz \. --out1 SRR10260015_1_trimmed.fastq.gz \. --out2 SRR10260015_2_trimmed.fastq.gz \. --unpaired1 SRR10260015_1_passed.fastq.gz \. --unpaired2 SRR10260015_2_passed.fastq.gz \. --failed_out fail_out.fastq.gz \. --thread 4 \. 2> fastp_log . ```. and here's the stderr on adapter detection:. ```. Detecting adapter sequence for read1... CTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGTCTGT. Detecting adapter sequence for read2... CAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGACAGA. ```. Just as mentioned above, to remove the `--detect_adapter_for_pe ` will still allow adapter-contaminated reads trimmed based on overlap analysis, but avoid the adapter mis-detection for repeated sequence.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:224,deployability,version,version,224,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:110,energy efficiency,adapt,adapter,110,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:110,integrability,adapt,adapter,110,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:224,integrability,version,version,224,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:110,interoperability,adapt,adapter,110,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:110,modifiability,adapt,adapter,110,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:224,modifiability,version,version,224,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:75,safety,detect,detects,75,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/160:75,security,detect,detects,75,"I also had the same issue, in 4 out of 32 of my datasets (bird WGS), fastp detects the telomeric repeat as an adapter (`CTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACCCTAACC`) when I use `--detect_adapter_for_pe`, in version 0.23.2.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/160
https://github.com/OpenGene/fastp/issues/161:350,integrability,sub,subject,350,"I think this might be a good additional function. For one, working with non-Illumina technologies uBAM is not uncommon. As I am working with datasets that require metadata-attachment I would like this option for that reason alone. Although bigger and bulkier the uBAM format has some benefits. . This post over at BROAD has some good thoughts on the subject https://gatkforums.broadinstitute.org/gatk/discussion/5990/what-is-ubam-and-why-is-it-better-than-fastq-for-storing-unmapped-sequence-data",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/161
https://github.com/OpenGene/fastp/issues/161:268,interoperability,format,format,268,"I think this might be a good additional function. For one, working with non-Illumina technologies uBAM is not uncommon. As I am working with datasets that require metadata-attachment I would like this option for that reason alone. Although bigger and bulkier the uBAM format has some benefits. . This post over at BROAD has some good thoughts on the subject https://gatkforums.broadinstitute.org/gatk/discussion/5990/what-is-ubam-and-why-is-it-better-than-fastq-for-storing-unmapped-sequence-data",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/161
https://github.com/OpenGene/fastp/issues/162:59,integrability,filter,filtering,59,I figured out the reason. The reason is that fastp will do filtering based on base quality. This will remove some reads. The filtering could be disabled using `--disable_quality_filtering`,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:125,integrability,filter,filtering,125,I figured out the reason. The reason is that fastp will do filtering based on base quality. This will remove some reads. The filtering could be disabled using `--disable_quality_filtering`,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:101,deployability,contain,contain,101,"Hi Team,. With the same situation mentioned by Xie, what will happen if the paired end files doesn't contain equal/ordered read mates. Does fastp split command take care of the sequence IDs while splitting the PE fastq files? I would expect, after splitting sample_1-001_R1.fastq and sample_1-001_R2.fastq files should have reads only for matched ID. Thanks, . Rajneesh",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:93,reliability,doe,doesn,93,"Hi Team,. With the same situation mentioned by Xie, what will happen if the paired end files doesn't contain equal/ordered read mates. Does fastp split command take care of the sequence IDs while splitting the PE fastq files? I would expect, after splitting sample_1-001_R1.fastq and sample_1-001_R2.fastq files should have reads only for matched ID. Thanks, . Rajneesh",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:135,reliability,Doe,Does,135,"Hi Team,. With the same situation mentioned by Xie, what will happen if the paired end files doesn't contain equal/ordered read mates. Does fastp split command take care of the sequence IDs while splitting the PE fastq files? I would expect, after splitting sample_1-001_R1.fastq and sample_1-001_R2.fastq files should have reads only for matched ID. Thanks, . Rajneesh",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:3,security,Team,Team,3,"Hi Team,. With the same situation mentioned by Xie, what will happen if the paired end files doesn't contain equal/ordered read mates. Does fastp split command take care of the sequence IDs while splitting the PE fastq files? I would expect, after splitting sample_1-001_R1.fastq and sample_1-001_R2.fastq files should have reads only for matched ID. Thanks, . Rajneesh",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/162:152,usability,command,command,152,"Hi Team,. With the same situation mentioned by Xie, what will happen if the paired end files doesn't contain equal/ordered read mates. Does fastp split command take care of the sequence IDs while splitting the PE fastq files? I would expect, after splitting sample_1-001_R1.fastq and sample_1-001_R2.fastq files should have reads only for matched ID. Thanks, . Rajneesh",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/162
https://github.com/OpenGene/fastp/issues/163:90,integrability,filter,filtered,90,"You can just don't specify the output files (-o/-O), then, you get the QC results, but no filtered data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/163
https://github.com/OpenGene/fastp/issues/163:19,interoperability,specif,specify,19,"You can just don't specify the output files (-o/-O), then, you get the QC results, but no filtered data.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/163
https://github.com/OpenGene/fastp/issues/163:11,usability,tip,tip,11,Nice! Good tip! Thanks very much!,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/163
https://github.com/OpenGene/fastp/issues/166:39,availability,consist,consistent,39,Will add an option to enable read name consistent comparing,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:39,usability,consist,consistent,39,Will add an option to enable read name consistent comparing,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:5,availability,error,error,5,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:878,availability,error,error,878,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:5,performance,error,error,5,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:878,performance,error,error,878,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:5,safety,error,error,5,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:878,safety,error,error,878,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:5,usability,error,error,5,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:878,usability,error,error,878,"Same error when using bwa after preprocessing with fastp. ```. [M::bwa_idx_load_from_disk] read 0 ALT contigs. [W::bseq_read] the 2nd file has fewer sequences. [M::process] read 108 sequences (10897 bp)... [W::bseq_read] the 2nd file has fewer sequences. [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). [M::mem_pestat] skip orientation FF as there are not enough pairs. [M::mem_pestat] skip orientation FR as there are not enough pairs. [M::mem_pestat] skip orientation RF as there are not enough pairs. [M::mem_pestat] skip orientation RR as there are not enough pairs. [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". ```. It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen . ```. $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. @SRR8652095.142629001 142629001 length=101. @SRR8652095.142629002 142629002 length=101. @SRR8652095.142629003 142629003 length=101. @SRR8652095.142629004 142629004 length=101. @SRR8652095.142629005 142629005 length=101. @SRR8652095.142629006 142629006 length=101. @SRR8652095.142629007 142629007 length=101. @SRR8652095.142629008 142629008 length=101. @SRR8652095.142629011 142629011 length=101. @SRR8652095.142629012 142629012 length=101. gzip: SRR8652095_1.fq.gz: unexpected end of file. $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. gzip: SRR8652095_2.fq.gz: unexpected end of file. @SRR8652095.142645001 142645001 length=101. @SRR8652095.142645002 142645002 length=101. @SRR8652095.142645003 142645003 length=101. @SRR8652095.142645004 142645004 length=101. @SRR8652095.142645007 142645007 length=101. @SRR8652095.142645008 142645008 length=101. @SRR8652095.142645012 142645012 length=101. @SRR8652095.142645013 142645013 length=101. @SRR8652095.142645014 142645014 length=101. @SRR8652095.142645015 142645015 le",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:7,availability,error,error,7,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:920,availability,error,error,920,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:2171,availability,error,error,2171,"::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 142645013 length=101. > @SRR8652095.142645014 142645014 length=101. > @SRR8652095.142645015 142645015 length=101. > ```. Hello，have you solve this problem, I also get this error",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:7,performance,error,error,7,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:920,performance,error,error,920,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:2171,performance,error,error,2171,"::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 142645013 length=101. > @SRR8652095.142645014 142645014 length=101. > @SRR8652095.142645015 142645015 length=101. > ```. Hello，have you solve this problem, I also get this error",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:7,safety,error,error,7,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:920,safety,error,error,920,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:2171,safety,error,error,2171,"::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 142645013 length=101. > @SRR8652095.142645014 142645014 length=101. > @SRR8652095.142645015 142645015 length=101. > ```. Hello，have you solve this problem, I also get this error",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:7,usability,error,error,7,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:920,usability,error,error,920,"> Same error when using bwa after preprocessing with fastp. > . > ```. > [M::bwa_idx_load_from_disk] read 0 ALT contigs. > [W::bseq_read] the 2nd file has fewer sequences. > [M::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:2171,usability,error,error,2171,"::process] read 108 sequences (10897 bp)... > [W::bseq_read] the 2nd file has fewer sequences. > [M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 0, 0, 0). > [M::mem_pestat] skip orientation FF as there are not enough pairs. > [M::mem_pestat] skip orientation FR as there are not enough pairs. > [M::mem_pestat] skip orientation RF as there are not enough pairs. > [M::mem_pestat] skip orientation RR as there are not enough pairs. > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629002"", ""SRR8652095.142645002"". > . > [mem_sam_pe] paired reads have different names: ""SRR8652095.142629004"", ""SRR8652095.142645004"". > ```. > . > It indeed has different names. How should I rerun the data with fastp to fix the error? @sfchen. > . > ```. > $ gunzip -c SRR8652095_1.fq.gz | paste - - - - | cut -f 1| head. > @SRR8652095.142629001 142629001 length=101. > @SRR8652095.142629002 142629002 length=101. > @SRR8652095.142629003 142629003 length=101. > @SRR8652095.142629004 142629004 length=101. > @SRR8652095.142629005 142629005 length=101. > @SRR8652095.142629006 142629006 length=101. > @SRR8652095.142629007 142629007 length=101. > @SRR8652095.142629008 142629008 length=101. > @SRR8652095.142629011 142629011 length=101. > @SRR8652095.142629012 142629012 length=101. > . > gzip: SRR8652095_1.fq.gz: unexpected end of file. > $ gunzip -c SRR8652095_2.fq.gz | paste - - - - | cut -f 1| head. > . > gzip: SRR8652095_2.fq.gz: unexpected end of file. > @SRR8652095.142645001 142645001 length=101. > @SRR8652095.142645002 142645002 length=101. > @SRR8652095.142645003 142645003 length=101. > @SRR8652095.142645004 142645004 length=101. > @SRR8652095.142645007 142645007 length=101. > @SRR8652095.142645008 142645008 length=101. > @SRR8652095.142645012 142645012 length=101. > @SRR8652095.142645013 142645013 length=101. > @SRR8652095.142645014 142645014 length=101. > @SRR8652095.142645015 142645015 length=101. > ```. Hello，have you solve this problem, I also get this error",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:41,availability,consist,consistent,41,> Will add an option to enable read name consistent comparing. Have you add it?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/166:41,usability,consist,consistent,41,> Will add an option to enable read name consistent comparing. Have you add it?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/166
https://github.com/OpenGene/fastp/issues/167:28,usability,help,helpful,28,"agree, this would be really helpful!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/167
https://github.com/OpenGene/fastp/issues/167:4,deployability,updat,updates,4,Any updates on this?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/167
https://github.com/OpenGene/fastp/issues/167:4,safety,updat,updates,4,Any updates on this?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/167
https://github.com/OpenGene/fastp/issues/167:4,security,updat,updates,4,Any updates on this?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/167
https://github.com/OpenGene/fastp/issues/167:41,usability,progress,progress,41,Would be great to have this feature. Any progress?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/167
https://github.com/OpenGene/fastp/issues/168:7,integrability,discover,discovered,7,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:7,interoperability,discover,discovered,7,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:153,safety,input,input,153,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:7,usability,discov,discovered,7,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:153,usability,input,input,153,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:198,usability,document,documented,198,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:216,usability,user,user,216,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:221,usability,guid,guide,221,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/168:234,usability,user,user,234,"I also discovered this strange output today. When I count all of the lines in the hundreds of resulting files, they add up to the number of lines in the input file. This is strange and it should be documented in the user guide so the user knows it is not a bug.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/168
https://github.com/OpenGene/fastp/issues/169:112,deployability,loader,loader,112,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:157,deployability,depend,depends,157,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:112,energy efficiency,load,loader,112,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:157,integrability,depend,depends,157,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:157,modifiability,depend,depends,157,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:112,performance,load,loader,112,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:157,safety,depend,depends,157,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:157,testability,depend,depends,157,"--thread 2 means use 2 processing worker threads. Besides the worker threads, fastp uses one master thread, one loader thread, and one or two writer thread (depends on SE or PE)",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:224,performance,parallel,parallelization,224,Fair enough. A feature request from me then would be to include that info in the documentation or in the `--thread` switch description. Conventional use of a thread switch usually defines the max threads it will consume for parallelization purposes.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/169:81,usability,document,documentation,81,Fair enough. A feature request from me then would be to include that info in the documentation or in the `--thread` switch description. Conventional use of a thread switch usually defines the max threads it will consume for parallelization purposes.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/169
https://github.com/OpenGene/fastp/issues/170:15,performance,multi-thread,multi-threaded,15,"Since fastp is multi-threaded, a seed is not able to achieve determinism.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/170
https://github.com/OpenGene/fastp/issues/171:100,energy efficiency,adapt,adapters,100,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/171:100,integrability,adapt,adapters,100,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/171:100,interoperability,adapt,adapters,100,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/171:100,modifiability,adapt,adapters,100,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/171:139,safety,detect,detection,139,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/171:139,security,detect,detection,139,"It's normal that RNA-seq data has rRNA. I think you can disable --detect_adapter_for_PE, since most adapters will be trimmed by PE overlap detection.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/171
https://github.com/OpenGene/fastp/issues/174:67,deployability,version,versions,67,It's expected that there will be some difference between different versions. Normally you should use the newer one since it improved a lot. What's your command?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/174
https://github.com/OpenGene/fastp/issues/174:67,integrability,version,versions,67,It's expected that there will be some difference between different versions. Normally you should use the newer one since it improved a lot. What's your command?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/174
https://github.com/OpenGene/fastp/issues/174:67,modifiability,version,versions,67,It's expected that there will be some difference between different versions. Normally you should use the newer one since it improved a lot. What's your command?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/174
https://github.com/OpenGene/fastp/issues/174:152,usability,command,command,152,It's expected that there will be some difference between different versions. Normally you should use the newer one since it improved a lot. What's your command?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/174
https://github.com/OpenGene/fastp/issues/175:36,integrability,INTERFAC,INTERFACE,36,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:57,integrability,sub,subcommand,57,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:87,integrability,filter,filter,87,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:36,interoperability,INTERFAC,INTERFACE,36,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:36,modifiability,INTERFAC,INTERFACE,36,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:31,usability,USER,USER,31,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/175:49,usability,support,support,49,I think fastp need to redesign USER INTERFACE to support subcommand. Like:. ```. fastp filter | fastp trim | fastp split | fastp merge | fastp report | fastp helloworld. ```. Enjoy pipe~,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/175
https://github.com/OpenGene/fastp/issues/176:15,security,team,team,15,"> Hello, Fastp team members! > . > https://github.com/jvivian/fastq_pair. > https://github.com/linsalrob/fastq-pair. > [lh3/seqtk#82](https://github.com/lh3/seqtk/issues/82). > . > If we have two files, R1.fa, R2.fa. > R1.fa. > . > ```. > >a/1. > AT. > >b/1. > AC. > >d/1. > AG. > ```. > . > R2.fa. > . > ```. > >a/2. > AA. > >d/2. > CC. > >e/2. > TT. > ```. > . > then, using fastp, we get:. > paried.R1.fa. > . > ```. > >a/1. > AT. > >d/1. > AG. > ```. > . > paried.R2.fa. > . > ```. > >a/2. > AA. > >d/2. > CC. > ```. > . > single.fa. > . > ```. > >b/1. > AC. > >e/2. > TT. > ```. which options did you use? My fastq files have different amounts of reads and I want to discard the orphaned reads (the reads are sorted by name) but I don't see the correct options.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/176
https://github.com/OpenGene/fastp/issues/177:389,availability,down,downstream,389,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:315,deployability,contain,contain,315,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:634,deployability,contain,contain,634,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:91,energy efficiency,adapt,adapter,91,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:171,energy efficiency,adapt,adapter,171,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:243,energy efficiency,adapt,adapter,243,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:327,energy efficiency,adapt,adapter,327,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:376,energy efficiency,adapt,adapter,376,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:472,energy efficiency,adapt,adapter,472,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:664,energy efficiency,adapt,adapter,664,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:869,energy efficiency,adapt,adapter,869,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:947,energy efficiency,adapt,adapter,947,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:1025,energy efficiency,adapt,adapter,1025,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:91,integrability,adapt,adapter,91,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:171,integrability,adapt,adapter,171,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:243,integrability,adapt,adapter,243,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:327,integrability,adapt,adapter,327,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:376,integrability,adapt,adapter,376,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:472,integrability,adapt,adapter,472,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:664,integrability,adapt,adapter,664,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:869,integrability,adapt,adapter,869,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:947,integrability,adapt,adapter,947,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:1025,integrability,adapt,adapter,1025,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:91,interoperability,adapt,adapter,91,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:171,interoperability,adapt,adapter,171,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:243,interoperability,adapt,adapter,243,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:327,interoperability,adapt,adapter,327,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:376,interoperability,adapt,adapter,376,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:472,interoperability,adapt,adapter,472,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:664,interoperability,adapt,adapter,664,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:869,interoperability,adapt,adapter,869,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:947,interoperability,adapt,adapter,947,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:1025,interoperability,adapt,adapter,1025,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:91,modifiability,adapt,adapter,91,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:171,modifiability,adapt,adapter,171,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:243,modifiability,adapt,adapter,243,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:327,modifiability,adapt,adapter,327,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:376,modifiability,adapt,adapter,376,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:472,modifiability,adapt,adapter,472,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:664,modifiability,adapt,adapter,664,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:869,modifiability,adapt,adapter,869,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:947,modifiability,adapt,adapter,947,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:1025,modifiability,adapt,adapter,1025,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:747,safety,compl,complete,747,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:747,security,compl,complete,747,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:568,usability,tool,tool,568,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:812,usability,behavi,behavior,812,"This is similar to issue #191 but I think there is an additional thing going on. The given adapter *is* trimmed from the reads, but since fastp assumes everything is a 3' adapter, it has no way of knowing you may want to keep things 3' of the adapter sequence (and remove things 5' of that sequence). All the reads contain the adapter within 15 bases, so when fastp trims the adapter (and downstream sequence), the remaining 15mers are thrown out. . I would argue that 5' adapter trimming is probably the only feature fastp is missing to make it the ultimate trimming tool. The additional thing here is that the two reads that remain contain a bit of the Illumina adapter at the 3' end, which fastp trims. It appears that fastp considers trimming complete when it finds that one sequence. **Is this the expected behavior?** I think it would make more sense to find the adapter that trims the largest portion of the read, or at least make ""greedy"" adapter trimming an option. Cutadapt enables this by an option to do repeated adapter trimming on each read (option `-n` I think).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:98,energy efficiency,adapt,adapter,98,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:148,energy efficiency,adapt,adapter,148,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:98,integrability,adapt,adapter,98,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:148,integrability,adapt,adapter,148,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:98,interoperability,adapt,adapter,98,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:148,interoperability,adapt,adapter,148,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:98,modifiability,adapt,adapter,98,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:148,modifiability,adapt,adapter,148,"@donutbrew I found this problem when i was dealing with my UMI datas, my read-structure, [umi] + [adapter] + [sequence], and I just want to cut the adapter bases.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:159,energy efficiency,adapt,adapter,159,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:232,energy efficiency,adapt,adapter,232,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:430,energy efficiency,current,currently,430,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:454,energy efficiency,adapt,adapter,454,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:159,integrability,adapt,adapter,159,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:232,integrability,adapt,adapter,232,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:454,integrability,adapt,adapter,454,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:159,interoperability,adapt,adapter,159,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:232,interoperability,adapt,adapter,232,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:454,interoperability,adapt,adapter,454,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:159,modifiability,adapt,adapter,159,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:232,modifiability,adapt,adapter,232,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:454,modifiability,adapt,adapter,454,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:384,usability,tool,tool,384,"So are you presorting the UMIs and wanting to retain only [sequence] or are you trying to retain the UMI sequence and stitch it on the the sequence like [umi][adapter][sequence] --> [umi][sequence] ? . In the first case, we need 5' adapter as a new option (what I was talking about above). In the second case, that would take some additional wrangling, and I'm not sure what existing tool handles this. . In either case, fastp is currently trimming your adapter as if it is meant to be a 3' trimming boundary, and your reads are discarded because the remaining sequences are too short.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:57,energy efficiency,adapt,adapter,57,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:137,energy efficiency,adapt,adapters,137,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:57,integrability,adapt,adapter,57,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:137,integrability,adapt,adapters,137,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:57,interoperability,adapt,adapter,57,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:137,interoperability,adapt,adapters,137,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:57,modifiability,adapt,adapter,57,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/177:137,modifiability,adapt,adapters,137,"@sfchen @donutbrew , maybe I need the second case, [umi][adapter][sequence] --> [umi][sequence]. Should I use my own code to cut off the adapters?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/177
https://github.com/OpenGene/fastp/issues/178:27,deployability,version,version,27,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:47,deployability,version,version,47,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:27,integrability,version,version,27,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:47,integrability,version,version,47,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:27,modifiability,version,version,27,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:47,modifiability,version,version,47,You may be using the older version. What's the version number?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,deployability,version,version,11,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:38,deployability,updat,update,38,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:60,deployability,version,version,60,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:52,energy efficiency,current,current,52,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,integrability,version,version,11,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:60,integrability,version,version,60,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,modifiability,version,version,11,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:60,modifiability,version,version,60,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:38,safety,updat,update,38,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:38,security,updat,update,38,I am using version 0.14.1-0. How do I update to the current version?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,availability,down,download,11,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:28,deployability,version,version,28,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:40,deployability,updat,update,40,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:28,integrability,version,version,28,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:28,modifiability,version,version,28,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:40,safety,updat,update,40,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:40,security,updat,update,40,"You should download the new version, or update using conda",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,deployability,updat,updating,11,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:52,deployability,version,version,52,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:52,integrability,version,version,52,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:52,modifiability,version,version,52,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:67,reliability,doe,doesn,67,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,safety,updat,updating,11,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/178:11,security,updat,updating,11,"When I try updating with conda or reinstalling, the version number doesn't change.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/178
https://github.com/OpenGene/fastp/issues/179:21,energy efficiency,adapt,adapter,21,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:75,energy efficiency,adapt,adapter,75,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:21,integrability,adapt,adapter,21,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:75,integrability,adapt,adapter,75,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:21,interoperability,adapt,adapter,21,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:75,interoperability,adapt,adapter,75,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:92,interoperability,specif,specify,92,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:21,modifiability,adapt,adapter,21,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:75,modifiability,adapt,adapter,75,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:29,safety,detect,detection,29,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/179:29,security,detect,detection,29,"Em, polyA may affect adapter detection, I will check that. If you know the adapter, you can specify it by `--adapter_sequence` option directly",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/179
https://github.com/OpenGene/fastp/issues/180:173,safety,compl,complete,173,"@sfchen Yes, but the reads number is different from the reads_number_after_filter in json file. And read1 number is not same as read2 number.It seems like the fa.gz did not complete!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:173,security,compl,complete,173,"@sfchen Yes, but the reads number is different from the reads_number_after_filter in json file. And read1 number is not same as read2 number.It seems like the fa.gz did not complete!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:28,availability,down,downstream,28,"Same here, FastQC and other downstream programs refuse to accept fastp .gz output. ""invalid gzip format""",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:97,interoperability,format,format,97,"Same here, FastQC and other downstream programs refuse to accept fastp .gz output. ""invalid gzip format""",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:25,deployability,version,version,25,What's your OS and fastp version? Is it in cloud or in local server?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:43,energy efficiency,cloud,cloud,43,What's your OS and fastp version? Is it in cloud or in local server?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:25,integrability,version,version,25,What's your OS and fastp version? Is it in cloud or in local server?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:25,modifiability,version,version,25,What's your OS and fastp version? Is it in cloud or in local server?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:27,deployability,version,version,27,"> What's your OS and fastp version? Is it in cloud or in local server? ""Ubuntu 18.04.2 LTS (Bionic Beaver)"". fastp 0.20.0 . it is a local machine. . Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:45,energy efficiency,cloud,cloud,45,"> What's your OS and fastp version? Is it in cloud or in local server? ""Ubuntu 18.04.2 LTS (Bionic Beaver)"". fastp 0.20.0 . it is a local machine. . Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:27,integrability,version,version,27,"> What's your OS and fastp version? Is it in cloud or in local server? ""Ubuntu 18.04.2 LTS (Bionic Beaver)"". fastp 0.20.0 . it is a local machine. . Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:27,modifiability,version,version,27,"> What's your OS and fastp version? Is it in cloud or in local server? ""Ubuntu 18.04.2 LTS (Bionic Beaver)"". fastp 0.20.0 . it is a local machine. . Thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:8,usability,confirm,confirm,8,Can you confirm that the fastp process has finished correctly?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:10,usability,confirm,confirm,10,"> Can you confirm that the fastp process has finished correctly? I ended up printing to stdout and piping to gzip, so I didn't use fastp's internal gzip, but fastp's processing of the reads worked out just fine, thanks! fastp -i $prereq --stdout 	| gzip -f --best 	> $target",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:58,availability,error,error,58,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:71,deployability,log,log,71,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:95,deployability,log,log,95,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:723,deployability,fail,failed,723,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:764,deployability,fail,failed,764,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:804,deployability,fail,failed,804,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:843,energy efficiency,adapt,adapter,843,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:890,energy efficiency,adapt,adapters,890,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:123,integrability,filter,filtering,123,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:262,integrability,filter,filtering,262,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:400,integrability,filter,filtering,400,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:541,integrability,filter,filtering,541,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:667,integrability,Filter,Filtering,667,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:699,integrability,filter,filter,699,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:843,integrability,adapt,adapter,843,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:890,integrability,adapt,adapters,890,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:843,interoperability,adapt,adapter,843,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:890,interoperability,adapt,adapters,890,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:1455,interoperability,format,format,1455,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:1547,interoperability,format,format,1547,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:843,modifiability,adapt,adapter,843,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:890,modifiability,adapt,adapters,890,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:58,performance,error,error,58,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:1279,performance,time,time,1279,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:723,reliability,fail,failed,723,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:764,reliability,fail,failed,764,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:804,reliability,fail,failed,804,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:58,safety,error,error,58,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:71,safety,log,log,71,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:95,safety,log,log,95,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:71,security,log,log,71,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:95,security,log,log,95,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:71,testability,log,log,71,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:95,testability,log,log,95,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:58,usability,error,error,58,"Hi @sfchen fastp process finished correctly, with not any error in the log file. . Here is the log file. ```. Read1 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4932327219(97.1603%). Q30 bases: 4585968494(90.3375%). Read2 before filtering:. total reads: 33843222. total bases: 5076483300. Q20 bases: 4890775279(96.3418%). Q30 bases: 4505376147(88.7499%). Read1 after filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4895952444(97.3896%). Q30 bases: 4554343615(90.5944%). Read2 aftering filtering:. total reads: 33571200. total bases: 5027181154. Q20 bases: 4858594974(96.6465%). Q30 bases: 4479078663(89.0972%). Filtering result:. reads passed filter: 67142400. reads failed due to low quality: 154266. reads failed due to too many N: 389778. reads failed due to too short: 0. reads with adapter trimmed: 1207960. bases trimmed due to adapters: 17008918. reads corrected by overlap analysis: 7810769. bases corrected by overlap analysis: 12483875. Duplication rate: 2.91815%. Insert size peak (evaluated by paired-end reads): 215. JSON report: xxx.fastp.json. HTML report: xxx.fastp.html. fastp -c -i xxx_1.fq.gz -I xxx_2.fq.gz -o xxx.clean.1.fq.gz -O xxx.2.fq.gz --html xxx.fastp.html --json xxx.fastp.json. fastp v0.20.0, time used: 374 seconds. ```. But the clean fastq files were not compressed correctly as shown. ```. gunzip xxx.clean.2.fq.gz. gzip: xxx.clean.2.fq.gz: invalid compressed data--format violated. gunzip xxxclean.1.fq.gz. gzip: xxx.clean.1.fq.gz: invalid compressed data--format violated. ```. I think if the fastp could comfirm the output file before it really finish. Thanks.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:318,availability,down,downstream,318,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:350,availability,error,error,350,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:350,performance,error,error,350,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:76,safety,test,test,76,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:110,safety,compl,completed,110,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:255,safety,compl,completion,255,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:350,safety,error,error,350,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:110,security,compl,completed,110,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:255,security,compl,completion,255,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:76,testability,test,test,76,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:137,usability,help,help,137,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:290,usability,help,helped,290,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/180:350,usability,error,error,350,"Hi @ellisellen, as the `fastp` hasn't fixed this issue, I used `gzip -t` to test if output `fq.gz` files were completed. Hope this would help you. ```. fastp xxxxxxx && gzip -t read1_clean_fq.gz && gzip -t read2_clean_fq.gz. ```. Even this only check the completion of the gzip process, it helped me from going to the downstream analysis without any error raise.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/180
https://github.com/OpenGene/fastp/issues/181:29,availability,error,error,29,turned out that there was an error on my side.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/181
https://github.com/OpenGene/fastp/issues/181:29,performance,error,error,29,turned out that there was an error on my side.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/181
https://github.com/OpenGene/fastp/issues/181:29,safety,error,error,29,turned out that there was an error on my side.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/181
https://github.com/OpenGene/fastp/issues/181:29,usability,error,error,29,turned out that there was an error on my side.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/181
https://github.com/OpenGene/fastp/issues/182:30,usability,command,command,30,This is abnormal. What's your command?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:91,deployability,version,version,91,fastp -q 5 -u 50 -n 15 -l 150 -j sampleA.json -i sampleA_L3_1.fq.gz -I sampleA_L3_2.fq.gz. version 0.19.7,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:91,integrability,version,version,91,fastp -q 5 -u 50 -n 15 -l 150 -j sampleA.json -i sampleA_L3_1.fq.gz -I sampleA_L3_2.fq.gz. version 0.19.7,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:91,modifiability,version,version,91,fastp -q 5 -u 50 -n 15 -l 150 -j sampleA.json -i sampleA_L3_1.fq.gz -I sampleA_L3_2.fq.gz. version 0.19.7,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:26,usability,confirm,confirm,26,This seems weird. Can you confirm that?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:26,energy efficiency,adapt,adapter,26,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:70,energy efficiency,adapt,adapter,70,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:26,integrability,adapt,adapter,26,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:70,integrability,adapt,adapter,70,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:26,interoperability,adapt,adapter,26,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:70,interoperability,adapt,adapter,70,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:26,modifiability,adapt,adapter,26,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:70,modifiability,adapt,adapter,70,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:94,performance,memor,memory,94,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/182:94,usability,memor,memory,94,"Maybe it's about the high adapter rate, not nova or xten. Will higher adapter rate cause more memory use?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/182
https://github.com/OpenGene/fastp/issues/183:27,performance,time,times,27,You can run fastp multiple times,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:38,integrability,sub,substitution,38,@lozybean I would suggest use process substitution of bash to achieve this. You can still use one linear command line. for example `fastp --in1 <(zcat sample*_R1_001.fastq.gz) --in2 <(zcat sample*_R2_001.fastq.gz)`.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:105,usability,command,command,105,@lozybean I would suggest use process substitution of bash to achieve this. You can still use one linear command line. for example `fastp --in1 <(zcat sample*_R1_001.fastq.gz) --in2 <(zcat sample*_R2_001.fastq.gz)`.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:2302,availability,echo,echo,2302," total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 1:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R1.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:7934:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10267:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:210",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:2348,availability,echo,echo,2348," bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 1:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R1.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:7934:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10267:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12201:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:3896,availability,echo,echo,3896,RXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 1:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R1.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:7934:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10267:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12201:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:26955:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:16984:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18069:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:32009:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:9543:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10664:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14714:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. $ for R2 in R2*.out.fq ; do echo $R2; awk 'NR % 4 == 1 && NR < 40' ${R2}; echo; done. R2.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 2:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:21,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:3942,availability,echo,echo,3942,TGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 1:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R1.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:7934:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10267:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12201:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:26955:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:16984:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18069:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:32009:34350 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:9543:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10664:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14714:34366 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. $ for R2 in R2*.out.fq ; do echo $R2; awk 'NR % 4 == 1 && NR < 40' ${R2}; echo; done. R2.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 2:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:787,deployability,fail,failed,787,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:823,deployability,fail,failed,823,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:858,deployability,fail,failed,858,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1843,deployability,fail,failed,1843,"N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1879,deployability,fail,failed,1879," 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1914,deployability,fail,failed,1914,"bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5531,deployability,version,version,5531," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5583,deployability,contain,contain,5583," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:897,energy efficiency,adapt,adapter,897,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:938,energy efficiency,adapt,adapters,938,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1953,energy efficiency,adapt,adapter,1953,"ation rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1994,energy efficiency,adapt,adapters,1994,"valuated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:24,integrability,sub,substitution,24,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:235,integrability,filter,filtering,235,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:363,integrability,filter,filtering,363,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:489,integrability,filter,filtering,489,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:618,integrability,filter,filtering,618,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:733,integrability,Filter,Filtering,733,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:765,integrability,filter,filter,765,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:897,integrability,adapt,adapter,897,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:938,integrability,adapt,adapters,938,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1293,integrability,filter,filtering,1293,"s: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ;",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1420,integrability,filter,filtering,1420,"es: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1546,integrability,filter,filtering,1546,"es: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1675,integrability,filter,filtering,1675,"es: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDR",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1789,integrability,Filter,Filtering,1789,"due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTG",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1821,integrability,filter,filter,1821,"ailed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5K",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1953,integrability,adapt,adapter,1953,"ation rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1994,integrability,adapt,adapters,1994,"valuated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5531,integrability,version,version,5531," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6084,integrability,sub,substitution,6084," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:897,interoperability,adapt,adapter,897,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:938,interoperability,adapt,adapters,938,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1953,interoperability,adapt,adapter,1953,"ation rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1994,interoperability,adapt,adapters,1994,"valuated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:897,modifiability,adapt,adapter,897,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:938,modifiability,adapt,adapters,938,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1953,modifiability,adapt,adapter,1953,"ation rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1994,modifiability,adapt,adapters,1994,"valuated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5531,modifiability,version,version,5531," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1149,performance,time,time,1149,"t match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:2252,performance,time,time,2252,"cess_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 1:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R1.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:7934:34334 1:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:10267:34334 1:N:0:CGGA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:37,reliability,doe,does,37,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:787,reliability,fail,failed,787,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:823,reliability,fail,failed,823,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:858,reliability,fail,failed,858,"@Jiawei-Navican Process substitution does not work with fastp. If you check the output FASTQ files you will see that the read names for R1 and R2 do not match. ```bash. $ fastp -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. Read1 before filtering:. total reads: 100000. total bases: 4854072. Q20 bases: 4788994(98.6593%). Q30 bases: 4661071(96.0239%). Read2 before filtering:. total reads: 100000. total bases: 4761161. Q20 bases: 4693657(98.5822%). Q30 bases: 4564765(95.875%). Read1 after filtering:. total reads: 100000. total bases: 4854019. Q20 bases: 4788947(98.6594%). Q30 bases: 4661025(96.024%). Read2 aftering filtering:. total reads: 100000. total bases: 4761088. Q20 bases: 4693591(98.5823%). Q30 bases: 4564703(95.8752%). Filtering result:. reads passed filter: 200000. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapte",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1843,reliability,fail,failed,1843,"N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1879,reliability,fail,failed,1879," 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:1914,reliability,fail,failed,1914,"bases trimmed due to adapters: 0. Duplication rate: 5.24207%. Insert size peak (evaluated by paired-end reads): 54. JSON report: fastp.json. HTML report: fastp.html. fastq -i R1.fq -I R2.fq -o R1.out.fq -O R2.out.fq. fastp v0.20.0, time used: 1 seconds. $ fastp -i <(cat R1.fq) -I <(cat R2.fq) -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. Read1 before filtering:. total reads: 87915. total bases: 4267649. Q20 bases: 4211066(98.6741%). Q30 bases: 4099762(96.0661%). Read2 before filtering:. total reads: 87915. total bases: 4185671. Q20 bases: 4126665(98.5903%). Q30 bases: 4013551(95.8879%). Read1 after filtering:. total reads: 87915. total bases: 4267551. Q20 bases: 4210974(98.6743%). Q30 bases: 4099674(96.0662%). Read2 aftering filtering:. total reads: 87915. total bases: 4185566. Q20 bases: 4126569(98.5905%). Q30 bases: 4013460(95.8881%). Filtering result:. reads passed filter: 175830. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 6. bases trimmed due to adapters: 87. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 32. JSON report: fastp.json. HTML report: fastp.html. fastq -i /dev/fd/63 -I /dev/fd/62 -o R1.process_substitution.out.fq -O R2.process_substitution.out.fq. fastp v0.20.0, time used: 0 seconds. $ for R1 in R1*.out.fq ; do echo $R1; awk 'NR % 4 == 1 && NR < 40' ${R1}; echo; done. R1.out.fq. @A00305:250:HTY5KDRXX:1:2101:4652:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:12789:1031 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:20907:1031 1:N:0:NGGAATAT+CGGTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:8910:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:11496:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 1:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6158,reliability,doe,does,6158," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5883,safety,input,input,5883," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6026,safety,input,input,6026," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6118,safety,input,input,6118," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5426,usability,command,commands,5426," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:5883,usability,input,input,5883," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6026,usability,input,input,6026," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6100,usability,support,supported,6100," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:6118,usability,input,input,6118," 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:13286:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14570:1047 2:N:0:NGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:27642:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:28944:1047 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:3604:1063 2:N:0:CGGAATAT+CGGTGCTGGTGTAGAT. R2.process_substitution.out.fq. @A00305:250:HTY5KDRXX:1:2101:11885:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14633:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14886:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:22064:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:24596:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:31250:18192 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:5999:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:14859:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. @A00305:250:HTY5KDRXX:1:2101:18204:18208 2:N:0:CGGAATAT+CGTTGCTGGTGTAGAT. ```. As you can see from the `fastp` commands with the actual files and with `<(cat $fastq)`, fastp claims there are less reads in the second version. As you can see `R1.out.fq` and `R2.out.fq` contain the same read IDs. `R1.process_substitution.out.fq` and `R1.out.fq` are different, but also `R1.process_substitution.out.fq` and `R2.process_substitution.out.fq`. So not only is it eating reads but not even the same number in both R1 and R2 FASTQ file. I think fastp is trying to seek in the input fastq files, and it can't seek back in the files as they are a pipe and correspondingly looses data. @sfchen Can multiple FASTQ files as input for both `-i` and `-I` be added or at least process substitution be supported for the input files. It also looks like `fastp` does not check if the read names for R1 and R2 are matching. The latter would at least have warned me that something weird was going on.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:43,deployability,updat,update,43,@KimBioInfoStudio and @y9c and @sfchen any update on this issue is appreciated.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:43,safety,updat,update,43,@KimBioInfoStudio and @y9c and @sfchen any update on this issue is appreciated.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/183:43,security,updat,update,43,@KimBioInfoStudio and @y9c and @sfchen any update on this issue is appreciated.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/183
https://github.com/OpenGene/fastp/issues/185:21,deployability,contain,contains,21,"Seems that your file contains one read, which has different length of sequence and quality, and then fastp exits at once. @HISEQ:349:C9CG2ANXX:2:1101:1389:1976 2:N:0:TCCTAT. CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA. +. BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBBFFFFFFFFFFFFFFFFFB<FFFFB. Can you check this read? You can grep the sequence to take a look.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:185,availability,error,error,185,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:60,deployability,contain,contain,60,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:185,performance,error,error,185,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:185,safety,error,error,185,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:47,usability,confirm,confirm,47,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:185,usability,error,error,185,"These fasta files are about 20-300mb, so I can confirm they contain more than a single read. What's more is that files that were successfully trimmed by fastp months ago have this same error now as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,deployability,log,log,34,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:188,deployability,contain,contain,188,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,safety,log,log,34,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,security,log,log,34,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,testability,log,log,34,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:16,usability,clear,clear,16,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:229,usability,command,command,229,"To make it more clear:. From your log, fastp found one read that its sequence length and quality length is different, and then exit at once. Could you please check whether your FASTQ file contain such read? You can use following command to check:. ```. grep -a 5 CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA filename.fastq. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2428,performance,time,time,2428,2ANXX:2:1203:20541:82072 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:1659:82257 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:1850:82257 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:2229:82345 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:2551:82431 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:3377:82252 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:3445:82258 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4158:82296 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4250:82357 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4389:82359 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5085:82361 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5498:82362 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5829:82364 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5961:82380 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7195:82369 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7775:82426 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7896:82495 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8281:82275 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8328:82485 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8633:82315 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8571:82351 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8550:82377 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8928:82295 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8953:82367 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:10134:82365 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:10511:82286 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11210:82456 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11507:82261 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11569:82463 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:12696:82455 1:N:0:TCCTAT. ```. except this goes on for a long time.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2397,safety,except,except,2397,2ANXX:2:1203:20541:82072 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:1659:82257 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:1850:82257 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:2229:82345 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:2551:82431 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:3377:82252 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:3445:82258 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4158:82296 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4250:82357 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:4389:82359 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5085:82361 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5498:82362 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5829:82364 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:5961:82380 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7195:82369 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7775:82426 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:7896:82495 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8281:82275 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8328:82485 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8633:82315 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8571:82351 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8550:82377 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8928:82295 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:8953:82367 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:10134:82365 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:10511:82286 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11210:82456 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11507:82261 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:11569:82463 1:N:0:TCCTAT. ST_5372.F.fq:@HISEQ:349:C9CG2ANXX:2:1203:12696:82455 1:N:0:TCCTAT. ```. except this goes on for a long time.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:126,interoperability,standard,standard,126,"See! Your read is strange, it has different length of the sequence line and quality line, that is inconsistent with the FASTQ standard. ```. @HISEQ:349:C9CG2ANXX:2:1101:1389:1976 2:N:0:TCCTAT. CTTTGATTCAGCCAGCTGGGAGCATACACTGGTTTAATATTTATATCGTTCATTACTCCCGCATATGCACCATGAAATAATCTATTTCAATTGTTGTCGGGTCATTTCACTGGA. +. BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBBFFFFFFFFFFFFFFFFFB<FFFFB. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:146,availability,consist,consistency,146,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:215,deployability,version,version,215,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:215,integrability,version,version,215,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:215,modifiability,version,version,215,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:93,safety,reme,remember,93,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:74,usability,tool,tools,74,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:146,usability,consist,consistency,146,"1, I don't know why you get so weird FASTQ, you should check the upstream tools. 2, I cannot remember exactly, but it is possible that the length consistency check is introduced recently. So you can try older fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:121,deployability,scale,scales,121,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:142,deployability,updat,updates,142,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:175,deployability,version,version,175,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:80,energy efficiency,sustainab,sustainable,80,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:121,energy efficiency,scale,scales,121,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:600,energy efficiency,optim,optimizations,600,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:175,integrability,version,version,175,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:121,modifiability,scal,scales,121,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:175,modifiability,version,version,175,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:121,performance,scale,scales,121,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:600,performance,optimiz,optimizations,600,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,reliability,diagno,diagnose,34,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:662,reliability,diagno,diagnose,662,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:142,safety,updat,updates,142,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:142,security,updat,updates,142,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:34,testability,diagno,diagnose,34,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:662,testability,diagno,diagnose,662,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:92,usability,workflow,workflow,92,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:411,usability,custom,custom,411,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:492,usability,tool,toolbox,492,"Alright, thank you. I'm trying to diagnose this more thoroughly so as to have a sustainable workflow moving forward that scales with software updates, so while using an older version of fastp would circumvent the problem now, it will not fix something that seems to be wide-spread affecting our data. . This issue seems to be widespread in every sample we have, which is problematic(!). Is it possible that our custom de-duplication script is causing this? https://github.com/pdimens/genomic-toolbox/blob/master/dDuplicator ? I didn't write this code initially, but I ported it to Py3 and added some optimizations, however I'm not a super-strong python coder to diagnose the heavy-lifting part of this code. .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:105,performance,time,time,105,"Wow, you have an **incredibly** sharp eye. Thank you! More seriously, I really appreciate you taking the time to diagnose what's been going wrong on my end. Thank you. Genuinely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:113,reliability,diagno,diagnose,113,"Wow, you have an **incredibly** sharp eye. Thank you! More seriously, I really appreciate you taking the time to diagnose what's been going wrong on my end. Thank you. Genuinely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:113,testability,diagno,diagnose,113,"Wow, you have an **incredibly** sharp eye. Thank you! More seriously, I really appreciate you taking the time to diagnose what's been going wrong on my end. Thank you. Genuinely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:16,usability,help,help,16,"Welcome! Please help to promote fastp to your colleagues if you feel it is helpful. And a kind note:. your FASTQ previously processed using your dDuplicator has a problem, the quality scores and the corresponding bases are not aligned, which means the quality scores are totally wrong. You'd better to re-run it to get correct result.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:75,usability,help,helpful,75,"Welcome! Please help to promote fastp to your colleagues if you feel it is helpful. And a kind note:. your FASTQ previously processed using your dDuplicator has a problem, the quality scores and the corresponding bases are not aligned, which means the quality scores are totally wrong. You'd better to re-run it to get correct result.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:86,security,dDo,dDocent,86,"I can promise you I've been promoting fastp since we replaced trimmomatic with it in [dDocent](https://github.com/jpuritz/dDocent). As for re-running, I had guessed this would be necessary. Thank you!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:122,security,dDo,dDocent,122,"I can promise you I've been promoting fastp since we replaced trimmomatic with it in [dDocent](https://github.com/jpuritz/dDocent). As for re-running, I had guessed this would be necessary. Thank you!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:79,availability,error,error,79,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:171,availability,ERROR,ERROR,171,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:585,availability,ERROR,ERROR,585,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1061,availability,ERROR,ERROR,1061," however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1435,availability,ERROR,ERROR,1435,"FFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2255,deployability,fail,failed,2255,"TTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2291,deployability,fail,failed,2291,"AGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2326,deployability,fail,failed,2326,"FFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTG",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:555,energy efficiency,adapt,adapter,555,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:962,energy efficiency,adapt,adapter,962,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1000,energy efficiency,adapt,adapter,1000,"ve made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1033,energy efficiency,adapt,adapter,1033,"o the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2365,energy efficiency,adapt,adapter,2365,"FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2406,energy efficiency,adapt,adapters,2406,":F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.g",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:555,integrability,adapt,adapter,555,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:962,integrability,adapt,adapter,962,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1000,integrability,adapt,adapter,1000,"ve made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1033,integrability,adapt,adapter,1033,"o the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1822,integrability,filter,filtering,1822,"+. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1921,integrability,filter,filtering,1921,"F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2019,integrability,filter,filtering,2019,"d2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `gr",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2120,integrability,filter,filtering,2120,"H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2206,integrability,Filter,Filtering,2206,"GGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2238,integrability,filter,filter,2238,"TATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2365,integrability,adapt,adapter,2365,"FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2406,integrability,adapt,adapters,2406,":F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.g",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:555,interoperability,adapt,adapter,555,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:962,interoperability,adapt,adapter,962,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1000,interoperability,adapt,adapter,1000,"ve made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1033,interoperability,adapt,adapter,1033,"o the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2365,interoperability,adapt,adapter,2365,"FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2406,interoperability,adapt,adapters,2406,":F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.g",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:555,modifiability,adapt,adapter,555,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:962,modifiability,adapt,adapter,962,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1000,modifiability,adapt,adapter,1000,"ve made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1033,modifiability,adapt,adapter,1033,"o the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2365,modifiability,adapt,adapter,2365,"FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2406,modifiability,adapt,adapters,2406,":F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.g",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:79,performance,error,error,79,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:171,performance,ERROR,ERROR,171,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:585,performance,ERROR,ERROR,585,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1061,performance,ERROR,ERROR,1061," however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1435,performance,ERROR,ERROR,1435,"FFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2932,performance,time,time,2932,"FFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.gz. ```. ```. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2974,performance,time,time,2974,"FFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.gz. ```. ```. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2255,reliability,fail,failed,2255,"TTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2291,reliability,fail,failed,2291,"AGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGT",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:2326,reliability,fail,failed,2326,"FFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTG",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:79,safety,error,error,79,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:171,safety,ERROR,ERROR,171,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:545,safety,Detect,Detecting,545,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:585,safety,ERROR,ERROR,585,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:970,safety,detect,detected,970,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:990,safety,Detect,Detecting,990,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1041,safety,detect,detected,1041,"duplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1061,safety,ERROR,ERROR,1061," however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1435,safety,ERROR,ERROR,1435,"FFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:545,security,Detect,Detecting,545,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:970,security,detect,detected,970,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:990,security,Detect,Detecting,990,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1041,security,detect,detected,1041,"duplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:79,usability,error,error,79,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:171,usability,ERROR,ERROR,171,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:585,usability,ERROR,ERROR,585,"I have made the appropriate changes to the deduplication script, however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1061,usability,ERROR,ERROR,1061," however, this error persists:. ```. WARNING: cut_by_quality5 is deprecated, please use cut_front instead. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:1435,usability,ERROR,ERROR,1435,"FFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Detecting adapter sequence for read1... ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. No adapter detected for read1. Detecting adapter sequence for read2... No adapter detected for read2. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:3028,usability,command,command,3028,"FFF,FFF. ERROR: sequence and quality have different length:. @A00405:108:H3N7VDRXX:2:1101:3188:1031 1:N:0:TAGCTT. ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA. +. FFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,:FFFFFFFFFF,FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFF,F:FF:F:F:F:FF:FF:FFFFFFFFFF,FFF. Read1 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 before filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read1 after filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Read2 aftering filtering:. total reads: 0. total bases: 0. Q20 bases: 0(-nan%). Q30 bases: 0(-nan%). Filtering result:. reads passed filter: 0. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. reads corrected by overlap analysis: 0. bases corrected by overlap analysis: 0. Duplication rate: 0%. Insert size peak (evaluated by paired-end reads): 0. JSON report: YFTL_003_R.json. HTML report: YFTL_003_R.html. fastp --in1 YFTL_003_R.F.fq.gz --in2 YFTL_003_R.R.fq.gz --out1 YFTL_003_R.R1.fq.gz --out2 YFTL_003_R.R2.fq.gz --cut_by_quality5 20 --cut_by_quality3 20 --cut_window_size 5 --cut_mean_quality 15 --correction -q 15 -u 50 -j YFTL_003_R.json -h YFTL_003_R.html --detect_adapter_for_pe . fastp v0.20.0, time used: 24 seconds. ```. However, this time I'm not getting any output when using the `grep` command on the sequence:. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.R.fq.gz. ```. ```. ```. ```. $ grep -a5 ACTTTTGCATTAGTGTTGATTGAATACATTGAGTAGTTTTTGGGTGGGTTTTTTTTTTGTTAAGACCAGTTGTTTTATTGTGGAACTGCCTGTTTCCATTTTTATTTTGGCTCTTTTTATTATTTTGGAGCAGTA YFTL_003_R.F.fq.gz. ```. ```. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:36,reliability,diagno,diagnosis,36,"If it will help the troubleshooting/diagnosis, here are links to the forward and reverse reads of a single low coverage individual:. https://mega.nz/#!fUIHDSxJ!COmRo4M-ERMCZHoGe_lEgUI6I9r2hlqAUJPLYcvTbGY. https://mega.nz/#!mNRX2KIS!_O04G7SFRmSHEmtGBMHAdpfCBp8bdmb4aMyXly3TOJA. Along with the pre-processing de-duplication script that incorporate your edits:. https://mega.nz/#!eVR3WIhT!RH3nJOUiYtdeLv3pPZDg1UIPoIagYMJZAkmMa1xjh_A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:36,testability,diagno,diagnosis,36,"If it will help the troubleshooting/diagnosis, here are links to the forward and reverse reads of a single low coverage individual:. https://mega.nz/#!fUIHDSxJ!COmRo4M-ERMCZHoGe_lEgUI6I9r2hlqAUJPLYcvTbGY. https://mega.nz/#!mNRX2KIS!_O04G7SFRmSHEmtGBMHAdpfCBp8bdmb4aMyXly3TOJA. Along with the pre-processing de-duplication script that incorporate your edits:. https://mega.nz/#!eVR3WIhT!RH3nJOUiYtdeLv3pPZDg1UIPoIagYMJZAkmMa1xjh_A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:111,testability,coverag,coverage,111,"If it will help the troubleshooting/diagnosis, here are links to the forward and reverse reads of a single low coverage individual:. https://mega.nz/#!fUIHDSxJ!COmRo4M-ERMCZHoGe_lEgUI6I9r2hlqAUJPLYcvTbGY. https://mega.nz/#!mNRX2KIS!_O04G7SFRmSHEmtGBMHAdpfCBp8bdmb4aMyXly3TOJA. Along with the pre-processing de-duplication script that incorporate your edits:. https://mega.nz/#!eVR3WIhT!RH3nJOUiYtdeLv3pPZDg1UIPoIagYMJZAkmMa1xjh_A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:11,usability,help,help,11,"If it will help the troubleshooting/diagnosis, here are links to the forward and reverse reads of a single low coverage individual:. https://mega.nz/#!fUIHDSxJ!COmRo4M-ERMCZHoGe_lEgUI6I9r2hlqAUJPLYcvTbGY. https://mega.nz/#!mNRX2KIS!_O04G7SFRmSHEmtGBMHAdpfCBp8bdmb4aMyXly3TOJA. Along with the pre-processing de-duplication script that incorporate your edits:. https://mega.nz/#!eVR3WIhT!RH3nJOUiYtdeLv3pPZDg1UIPoIagYMJZAkmMa1xjh_A",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:139,availability,error,error,139,"The grep'ing of a gzipped file was definitely a rookie oversight. Thanks for the reminder. Regarding the uneven lengths, so where can this error be originating from in the deduplication script?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:139,performance,error,error,139,"The grep'ing of a gzipped file was definitely a rookie oversight. Thanks for the reminder. Regarding the uneven lengths, so where can this error be originating from in the deduplication script?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:139,safety,error,error,139,"The grep'ing of a gzipped file was definitely a rookie oversight. Thanks for the reminder. Regarding the uneven lengths, so where can this error be originating from in the deduplication script?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:139,usability,error,error,139,"The grep'ing of a gzipped file was definitely a rookie oversight. Thanks for the reminder. Regarding the uneven lengths, so where can this error be originating from in the deduplication script?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:5,performance,time,time,5,"Take time to debug your script, that will be not hard to find.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:47,availability,error,error,47,"Yep, you're right. That was the pretty obvious error on my part. Thank you (again)!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:47,performance,error,error,47,"Yep, you're right. That was the pretty obvious error on my part. Thank you (again)!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:47,safety,error,error,47,"Yep, you're right. That was the pretty obvious error on my part. Thank you (again)!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/185:47,usability,error,error,47,"Yep, you're right. That was the pretty obvious error on my part. Thank you (again)!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/185
https://github.com/OpenGene/fastp/issues/186:19,energy efficiency,adapt,adapter,19,like I need to cut adapter and then cut tail， I wander how the order when I use this,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/186
https://github.com/OpenGene/fastp/issues/186:19,integrability,adapt,adapter,19,like I need to cut adapter and then cut tail， I wander how the order when I use this,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/186
https://github.com/OpenGene/fastp/issues/186:19,interoperability,adapt,adapter,19,like I need to cut adapter and then cut tail， I wander how the order when I use this,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/186
https://github.com/OpenGene/fastp/issues/186:19,modifiability,adapt,adapter,19,like I need to cut adapter and then cut tail， I wander how the order when I use this,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/186
https://github.com/OpenGene/fastp/issues/189:21,usability,support,support,21,"Ok, reasonable. Will support it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/189
https://github.com/OpenGene/fastp/issues/190:10,deployability,version,version,10,Your zlib version should be too old.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:10,integrability,version,version,10,Your zlib version should be too old.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:10,modifiability,version,version,10,Your zlib version should be too old.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:17,deployability,version,version,17,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:75,deployability,version,version,75,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:91,deployability,updat,update,91,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:17,integrability,version,version,17,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:75,integrability,version,version,75,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:17,modifiability,version,version,17,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:75,modifiability,version,version,75,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:91,safety,updat,update,91,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:91,security,updat,update,91,"i know that zlib version can be too old, so i ask you what should use zlib version? i will update it",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:5,deployability,updat,update,5,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:26,deployability,version,version,26,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:26,integrability,version,version,26,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:26,modifiability,version,version,26,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:5,safety,updat,update,5,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/190:5,security,updat,update,5,Just update to the newest version,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/190
https://github.com/OpenGene/fastp/issues/191:114,performance,time,times,114,"Scan from 5' end to find a given sequence, then trim that sequence AND everything to the left. This is useful for times when you are sequencing amplicons and you want to be sure and trim the primer sequences. I edited the example above for hopefully more clarity.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:255,usability,clarit,clarity,255,"Scan from 5' end to find a given sequence, then trim that sequence AND everything to the left. This is useful for times when you are sequencing amplicons and you want to be sure and trim the primer sequences. I edited the example above for hopefully more clarity.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:171,energy efficiency,adapt,adapter,171,"Hi @sfchen,. Thank you for the awesome program, it's pretty fast with modern visualizations. I've the same request here, it will be great to have a feature to trim the 5' adapter sequence (TSO) just like cutadapt's `-g/-G` option. obenno",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:171,integrability,adapt,adapter,171,"Hi @sfchen,. Thank you for the awesome program, it's pretty fast with modern visualizations. I've the same request here, it will be great to have a feature to trim the 5' adapter sequence (TSO) just like cutadapt's `-g/-G` option. obenno",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:171,interoperability,adapt,adapter,171,"Hi @sfchen,. Thank you for the awesome program, it's pretty fast with modern visualizations. I've the same request here, it will be great to have a feature to trim the 5' adapter sequence (TSO) just like cutadapt's `-g/-G` option. obenno",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:171,modifiability,adapt,adapter,171,"Hi @sfchen,. Thank you for the awesome program, it's pretty fast with modern visualizations. I've the same request here, it will be great to have a feature to trim the 5' adapter sequence (TSO) just like cutadapt's `-g/-G` option. obenno",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/191:77,usability,visual,visualizations,77,"Hi @sfchen,. Thank you for the awesome program, it's pretty fast with modern visualizations. I've the same request here, it will be great to have a feature to trim the 5' adapter sequence (TSO) just like cutadapt's `-g/-G` option. obenno",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/191
https://github.com/OpenGene/fastp/issues/192:24,deployability,version,version,24,Will support it in next version.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/192
https://github.com/OpenGene/fastp/issues/192:24,integrability,version,version,24,Will support it in next version.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/192
https://github.com/OpenGene/fastp/issues/192:24,modifiability,version,version,24,Will support it in next version.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/192
https://github.com/OpenGene/fastp/issues/192:5,usability,support,support,5,Will support it in next version.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/192
https://github.com/OpenGene/fastp/issues/193:64,modifiability,deco,decompressing,64,"That's because that the bottleneck is the I/O, which means gzip decompressing and compressing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:24,performance,bottleneck,bottleneck,24,"That's because that the bottleneck is the I/O, which means gzip decompressing and compressing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:42,performance,I/O,I/O,42,"That's because that the bottleneck is the I/O, which means gzip decompressing and compressing",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:263,energy efficiency,CPU,CPU,263,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:66,modifiability,deco,decompressing,66,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:199,modifiability,deco,decompression,199,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:26,performance,bottleneck,bottleneck,26,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:44,performance,I/O,I/O,44,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:122,performance,parallel,parallel,122,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:237,performance,I/O,I/O,237,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:263,performance,CPU,CPU,263,"> That's because that the bottleneck is the I/O, which means gzip decompressing and compressing. You should incorporate a parallel gzip streamer like [pigz](https://zlib.net/pigz/). . @sfchen really decompression is the only one that is I/O bound, compression is CPU bound and should take all the threads you throw at it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:116,performance,parallel,parallel,116,"Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:362,deployability,automat,automatically,362,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:304,energy efficiency,CPU,CPU,304,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:308,energy efficiency,load,load,308,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:340,energy efficiency,CPU,CPU,340,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:389,energy efficiency,CPU,CPUs,389,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:194,modifiability,deco,decompression,194,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:118,performance,parallel,parallel,118,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:229,performance,I/O,I/O,229,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:304,performance,CPU,CPU,304,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:308,performance,load,load,308,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:340,performance,CPU,CPU,340,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:389,performance,CPU,CPUs,389,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:503,performance,parallel,parallelism,503,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/193:362,testability,automat,automatically,362,"> Hello, I have pigz but can't get it work with gzip. I'm not very good with CLI. Please explain how to implement the parallel option. Thank you. `pigz` activates multithreading by default. For decompression since it’s much more I/O bound then you will likely see only 3 threads running and not a lot of CPU load. But for compression it is CPU bound and it will automatically use all your CPUs and you will see they are all used. So not sure what problem you are having because you don’t need to enable parallelism or the `-p` threads spec option by default, because it will for you.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/193
https://github.com/OpenGene/fastp/issues/196:77,deployability,releas,release,77,"As many users requested this, I will start to implement this feature in next release.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:8,usability,user,users,8,"As many users requested this, I will start to implement this feature in next release.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:50,deployability,releas,release,50,@sfchen do you already have an estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:31,energy efficiency,estimat,estimate,31,@sfchen do you already have an estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:8,deployability,releas,release,8,Plan to release a new version before 2020.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:22,deployability,version,version,22,Plan to release a new version before 2020.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:22,integrability,version,version,22,Plan to release a new version before 2020.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:22,modifiability,version,version,22,Plan to release a new version before 2020.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:0,testability,Plan,Plan,0,Plan to release a new version before 2020.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:23,deployability,updat,updated,23,@sfchen do you have an updated estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:50,deployability,releas,release,50,@sfchen do you have an updated estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:31,energy efficiency,estimat,estimate,31,@sfchen do you have an updated estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:23,safety,updat,updated,23,@sfchen do you have an updated estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:23,security,updat,updated,23,@sfchen do you have an updated estimate about the release date?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:79,deployability,releas,release,79,"@sfchen .. just curious. Is this ""improvement"" somewhere on the roadmap? ""Next release"" is out .. I generally like how things get done with `fastp` .. except for the lacking side-by-side feature.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/196:151,safety,except,except,151,"@sfchen .. just curious. Is this ""improvement"" somewhere on the roadmap? ""Next release"" is out .. I generally like how things get done with `fastp` .. except for the lacking side-by-side feature.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/196
https://github.com/OpenGene/fastp/issues/198:3,testability,plan,plan,3,No plan yet. It's not hard to parse the JSON report by scripts.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/198
https://github.com/OpenGene/fastp/issues/200:0,energy efficiency,Current,Currently,0,"Currently, one mismatch is allowed for every 8 bases. I may expose a parameter to optionally set it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:15,interoperability,mismatch,mismatch,15,"Currently, one mismatch is allowed for every 8 bases. I may expose a parameter to optionally set it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:69,modifiability,paramet,parameter,69,"Currently, one mismatch is allowed for every 8 bases. I may expose a parameter to optionally set it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:60,security,expos,expose,60,"Currently, one mismatch is allowed for every 8 bases. I may expose a parameter to optionally set it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:22,usability,help,helpful,22,thanks. That would be helpful. hubert,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:154,energy efficiency,adapt,adaptor,154,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:154,integrability,adapt,adaptor,154,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:131,interoperability,mismatch,mismatch,131,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:154,interoperability,adapt,adaptor,154,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:140,modifiability,paramet,parameter,140,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/200:154,modifiability,adapt,adaptor,154,"Hello,. I notice there's the PR for this issue and probably it's already implemented, could you point me to how to set the allowed mismatch parameter for adaptor trimming for Single-end sequencing? Many Thanks. May",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/200
https://github.com/OpenGene/fastp/issues/201:15,energy efficiency,Current,Currently,15,"@donutbrew . > Currently I tack on `--json /dev/null --html /dev/null`. Just out of curiosity: How would native `--no-json`/`--no-html` option be any better? If it's just about the typing, how about `alias fpnr=""fastp --json /dev/null --html /dev/null""`? :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:128,interoperability,conflict,conflicts,128,"I actually think it would be a better default to have the report generation off, rather than default to a single filename which conflicts with parallel fastp processes. The user should be required to explicitly give a filename through `--json <file>` / `--html <file>` so that unwanted data is not generated and that _wanted_ data is not overwritten.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:143,performance,parallel,parallel,143,"I actually think it would be a better default to have the report generation off, rather than default to a single filename which conflicts with parallel fastp processes. The user should be required to explicitly give a filename through `--json <file>` / `--html <file>` so that unwanted data is not generated and that _wanted_ data is not overwritten.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:173,usability,user,user,173,"I actually think it would be a better default to have the report generation off, rather than default to a single filename which conflicts with parallel fastp processes. The user should be required to explicitly give a filename through `--json <file>` / `--html <file>` so that unwanted data is not generated and that _wanted_ data is not overwritten.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:338,interoperability,specif,specify,338,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:547,interoperability,compatib,compatibility,547,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:355,modifiability,paramet,parameters,355,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:85,usability,behavi,behaviour,85,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:217,usability,behavi,behaviour,217,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:515,usability,workflow,workflows,515,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:661,usability,behavi,behaviour,661,"@donutbrew:. While I get your angle and I might even agree if we were discussing the behaviour of our own (yet unreleased!) software, I think at this point the number of scripts/Snakefiles broken that rely on the old behaviour outweigh the potential advantages. I this case, the best solution IMHO would be to make sure `fastp` allows to specify the same parameters repeatedly, with the last instance taking precedence. I didn't check if that's the case but if not it could be changed without affecting established workflows by breaking backwards compatibility. Then, you could declare `alias fastp=""fastp --json /dev/null --html /dev/null""` to get the default behaviour you want.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:63,deployability,deploy,deployed,63,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:124,interoperability,compatib,compatibility,124,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:2,safety,compl,completely,2,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:139,safety,Reme,Remember,139,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:2,security,compl,completely,2,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:44,usability,tool,tool,44,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:192,usability,custom,customize,192,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:252,usability,minim,minimal,252,"I completely agree with @mschilli87 . For a tool that has been deployed widely, the first priority is to keep the backwards compatibility. Remember that, although fastp offers many options to customize your processing, it is designed to work well with minimal options. That's why I assigned default filenames for JSON/HTML reports. Output reports to `/dev/null` may be not the graceful solution, but is a good work around.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:66,deployability,production environ,production environment,66,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:135,deployability,continu,continue,135,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:147,deployability,fail,fail,147,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:189,deployability,rollback,rollback,189,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:235,interoperability,compatib,compatibility,235,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:147,reliability,fail,fail,147,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:189,reliability,rollback,rollback,189,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/201:189,security,rollback,rollback,189,"I have to agree, I would like to promote the latest flyway to our production environment but I cannot disable or turn off reports that continue to fail generating so we're going to have to rollback. The reports are great but backwards compatibility should have been considered here.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/201
https://github.com/OpenGene/fastp/issues/202:40,integrability,filter,filtering,40,"+1 this, median length before and after filtering would be super helpful as it should not be assumed that read lengths follow a normal distribution. Thanks for your consideration!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/202
https://github.com/OpenGene/fastp/issues/202:135,interoperability,distribut,distribution,135,"+1 this, median length before and after filtering would be super helpful as it should not be assumed that read lengths follow a normal distribution. Thanks for your consideration!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/202
https://github.com/OpenGene/fastp/issues/202:65,usability,help,helpful,65,"+1 this, median length before and after filtering would be super helpful as it should not be assumed that read lengths follow a normal distribution. Thanks for your consideration!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/202
https://github.com/OpenGene/fastp/issues/204:135,energy efficiency,adapt,adapter,135,> Have a look at the README https://github.com/OpenGene/fastp#global-trimming. Thanks for the link @sklages . It is still not clear if adapter trimming happens first or quality trimming,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/204
https://github.com/OpenGene/fastp/issues/204:135,integrability,adapt,adapter,135,> Have a look at the README https://github.com/OpenGene/fastp#global-trimming. Thanks for the link @sklages . It is still not clear if adapter trimming happens first or quality trimming,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/204
https://github.com/OpenGene/fastp/issues/204:135,interoperability,adapt,adapter,135,> Have a look at the README https://github.com/OpenGene/fastp#global-trimming. Thanks for the link @sklages . It is still not clear if adapter trimming happens first or quality trimming,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/204
https://github.com/OpenGene/fastp/issues/204:135,modifiability,adapt,adapter,135,> Have a look at the README https://github.com/OpenGene/fastp#global-trimming. Thanks for the link @sklages . It is still not clear if adapter trimming happens first or quality trimming,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/204
https://github.com/OpenGene/fastp/issues/204:126,usability,clear,clear,126,> Have a look at the README https://github.com/OpenGene/fastp#global-trimming. Thanks for the link @sklages . It is still not clear if adapter trimming happens first or quality trimming,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/204
https://github.com/OpenGene/fastp/issues/205:74,energy efficiency,adapt,adapters,74,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:136,energy efficiency,adapt,adapters,136,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:170,energy efficiency,adapt,adapter,170,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:74,integrability,adapt,adapters,74,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:136,integrability,adapt,adapters,136,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:170,integrability,adapt,adapter,170,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:74,interoperability,adapt,adapters,74,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:136,interoperability,adapt,adapters,136,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:158,interoperability,specif,specify,158,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:170,interoperability,adapt,adapter,170,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:74,modifiability,adapt,adapters,74,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:136,modifiability,adapt,adapters,136,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:170,modifiability,adapt,adapter,170,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/205:191,usability,command,command,191,"Probably in this seq, your library length is quiet long, so that very few adapters are sequenced. In this case, fastp will not find the adapters. But you can specify the adapter sequences by command line.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/205
https://github.com/OpenGene/fastp/issues/206:32,performance,time,time,32,@sfchen ... have you ever found time to think about these suggestions?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/206
https://github.com/OpenGene/fastp/issues/207:18,usability,command,command,18,Can you give your command line?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/207
https://github.com/OpenGene/fastp/issues/209:8,testability,simpl,simply,8,You can simply achieve this by scripts. No plan to support yet.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/209
https://github.com/OpenGene/fastp/issues/209:43,testability,plan,plan,43,You can simply achieve this by scripts. No plan to support yet.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/209
https://github.com/OpenGene/fastp/issues/209:8,usability,simpl,simply,8,You can simply achieve this by scripts. No plan to support yet.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/209
https://github.com/OpenGene/fastp/issues/209:51,usability,support,support,51,You can simply achieve this by scripts. No plan to support yet.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/209
https://github.com/OpenGene/fastp/issues/211:72,energy efficiency,core,cores,72,I/O is and will be limiting. That's probably why you see only a handful cores actually working. . Our fastq files range from 2G to 50G per read .. it sometimes takes ages to read the files (indepedently from tool). .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:0,performance,I/O,I/O,0,I/O is and will be limiting. That's probably why you see only a handful cores actually working. . Our fastq files range from 2G to 50G per read .. it sometimes takes ages to read the files (indepedently from tool). .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:208,usability,tool,tool,208,I/O is and will be limiting. That's probably why you see only a handful cores actually working. . Our fastq files range from 2G to 50G per read .. it sometimes takes ages to read the files (indepedently from tool). .,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:25,availability,cluster,cluster,25,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:25,deployability,cluster,cluster,25,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:71,energy efficiency,core,cores,71,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:242,performance,I/O,I/O,242,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:329,performance,time,time,329,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:311,testability,simpl,simply,311,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:262,usability,tool,tool,262,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:311,usability,simpl,simply,311,"same issue. I am using a cluster with client servers that each have 48 cores with hyperthreading up to 192 and want to trim PE fastq files that have ~ 400 million reads. I am reading from a dedicated raid 0 striped server which mitigates the I/O issue, but this tool ends up taking way longer than Trimmomatic, simply due to the time that it is taking to read the files and limiting its use to 16 threads.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:31,energy efficiency,core,core,31,I just hit this too using a 96 core machine on AWS. It would be nice if it were a warning but then attempted to use all the cores.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:124,energy efficiency,core,cores,124,I just hit this too using a 96 core machine on AWS. It would be nice if it were a warning but then attempted to use all the cores.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:54,performance,bottleneck,bottleneck,54,Since using >16 threads cannot make fastp faster. The bottleneck is I/O when thread number > 8.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/211:68,performance,I/O,I/O,68,Since using >16 threads cannot make fastp faster. The bottleneck is I/O when thread number > 8.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/211
https://github.com/OpenGene/fastp/issues/214:12,energy efficiency,adapt,adapter,12,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:104,energy efficiency,adapt,adapter,104,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:12,integrability,adapt,adapter,12,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:104,integrability,adapt,adapter,104,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:12,interoperability,adapt,adapter,12,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:104,interoperability,adapt,adapter,104,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:12,modifiability,adapt,adapter,12,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:104,modifiability,adapt,adapter,104,"If you have adapter at the beginning (5' end), this should be indepedently from the insert size and the adapter should probably be of known length: `--trim_front1/2 ` should work for that.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:63,energy efficiency,adapt,adapter,63,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:63,integrability,adapt,adapter,63,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:63,interoperability,adapt,adapter,63,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:63,modifiability,adapt,adapter,63,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:208,modifiability,extens,extension,208,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:329,security,auth,author,329,"Hi Sklages,. Thanks a lot. Generally, it is easy to remove the adapter at 5-prime of each read, but we may do not konw the actual bases at the end of 3-prime of each read, due to any reason(incompleteness or extension and so on), which may trim too much, including real sequence by --trim_front1/2 or --trim_tail1/2. I think the author has noticed this question. . Best,. Decen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:77,energy efficiency,adapt,adapters,77,If I get you correct this should be covered by the overlap-based trimming of adapters. If you have a short insert (insert_size<read_length) this should trim very exact.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:77,integrability,adapt,adapters,77,If I get you correct this should be covered by the overlap-based trimming of adapters. If you have a short insert (insert_size<read_length) this should trim very exact.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:77,interoperability,adapt,adapters,77,If I get you correct this should be covered by the overlap-based trimming of adapters. If you have a short insert (insert_size<read_length) this should trim very exact.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/214:77,modifiability,adapt,adapters,77,If I get you correct this should be covered by the overlap-based trimming of adapters. If you have a short insert (insert_size<read_length) this should trim very exact.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/214
https://github.com/OpenGene/fastp/issues/215:23,usability,close,closed,23,Forgot to search among closed issues. Here's the answer #138,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/215
https://github.com/OpenGene/fastp/issues/216:595,availability,down,downstream,595,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:547,deployability,build,build,547,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:606,deployability,pipelin,pipeline,606,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:132,integrability,filter,filter,132,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:271,integrability,pub,pubmed,271,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:606,integrability,pipelin,pipeline,606,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:452,modifiability,maintain,maintain,452,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:121,safety,compl,complexity,121,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:452,safety,maintain,maintain,452,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:651,safety,input,input,651,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:121,security,compl,complexity,121,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:438,usability,prefer,prefer,438,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/216:651,usability,input,input,651,"Hello @sfchen, thank you for fastp; like previous commenters (here and #332), we're interested in enhancing the built-in complexity filter. We can work on the implementation. Would you be open to a pull request that incorporates the widely-used [SDUST algorithm](https://pubmed.ncbi.nlm.nih.gov/16796549/), perhaps by linking in @lh3's [standalone C implementation](https://github.com/lh3/sdust)? Thanks -- asking in advance because we'd prefer not to maintain a separate fork of fastp forever; so if you don't think this is the right approach to build into fastp, then we might use a separate, downstream pipeline step instead. Alternate suggestions/input welcome too. cc @katrinakalantar @morsecodist @rzlim08 @robertaboukhalil @tfrcarvalho",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/216
https://github.com/OpenGene/fastp/issues/218:30,performance,time,time,30,"Hi, sorry for not replying on time. MGISEQ read name looks like this:. Read 1:. ```. @v300022634L1C001R0040000003/1. TCTGAAGTCCTCCTCTCCAGAAGCCCTGCCCAAGAAGAGCCAACAGACTTCCTGAGCCGCCTTCGAAGATGTCTTCCCTGCTCCCTGGGGCGAGGAGCAG. +. F?FDCAEFCBEB@FAECC<A?D<84DFBAC>FC7E@<D>>DFFABDD:?D6=E7?@:@C<EEAA99=1CE=9EEE>>E?D/93>CED+56A>=;>@C><D. ```. Read 2:. ```. @v300022634L1C001R0040000003/2. ACGGTTCTGTCCTGAAGGCTGGTGCTAGAGACTCCACACAGCCACCCCCTAGCTGAGTGATCTTAAACTAGCACCTTATCCCGTGTTCTGCCGGCTTCAT. +. DDA?8<@FEAC8FD2?5C=DDD6BDE@<:CBCD@=EDE:<E?EEE?EDEBDDDEC<;=9B?3F:B5@>BEEC@5BEED68FE;@:@DD2F<E5ECAFBA@. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:144,availability,error,error,144,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:68,integrability,sub,submitformats,68,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:119,interoperability,format,format,119,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:151,interoperability,Format,Format,151,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:144,performance,error,error,144,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:144,safety,error,error,144,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:144,usability,error,error,144,"Additionally, the [old style](https://www.ncbi.nlm.nih.gov/sra/docs/submitformats/#older-illumina-fastq) Illumina read format produces the same error. Format:. @<machine_id>:<lane>:<tile>:<x_coord>:<y_coord>#<index>/<read>. Read 1 and 2 example:. ```. @HS26:339:H7MKKBCX3:1:1101:4290:1975/1 . @HS26:339:H7MKKBCX3:2:1101:1858:1984/2. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:14,deployability,version,version,14,"latest fastp (version 0.20.1) already support this type fastq by adding --fix_mgi_id. . for example, ./fastp -i R1.fq -I R2.fq -o O1.fq -O O2.fq --fix_mgi_id --umi --umi_loc=per_read --umi_len=4 --umi_prefix=UMI",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:14,integrability,version,version,14,"latest fastp (version 0.20.1) already support this type fastq by adding --fix_mgi_id. . for example, ./fastp -i R1.fq -I R2.fq -o O1.fq -O O2.fq --fix_mgi_id --umi --umi_loc=per_read --umi_len=4 --umi_prefix=UMI",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:14,modifiability,version,version,14,"latest fastp (version 0.20.1) already support this type fastq by adding --fix_mgi_id. . for example, ./fastp -i R1.fq -I R2.fq -o O1.fq -O O2.fq --fix_mgi_id --umi --umi_loc=per_read --umi_len=4 --umi_prefix=UMI",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:38,usability,support,support,38,"latest fastp (version 0.20.1) already support this type fastq by adding --fix_mgi_id. . for example, ./fastp -i R1.fq -I R2.fq -o O1.fq -O O2.fq --fix_mgi_id --umi --umi_loc=per_read --umi_len=4 --umi_prefix=UMI",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:37,usability,help,helps,37,"Thanks for all developers, it really helps ! I will close this issues, thanks !",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/218:52,usability,close,close,52,"Thanks for all developers, it really helps ! I will close this issues, thanks !",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/218
https://github.com/OpenGene/fastp/issues/222:27,energy efficiency,adapt,adaptors,27,I think it only checks for adaptors at the 5' end (start of a read) ? Or the 35bp SE reads are below some length threshold?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/222
https://github.com/OpenGene/fastp/issues/222:27,integrability,adapt,adaptors,27,I think it only checks for adaptors at the 5' end (start of a read) ? Or the 35bp SE reads are below some length threshold?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/222
https://github.com/OpenGene/fastp/issues/222:27,interoperability,adapt,adaptors,27,I think it only checks for adaptors at the 5' end (start of a read) ? Or the 35bp SE reads are below some length threshold?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/222
https://github.com/OpenGene/fastp/issues/222:27,modifiability,adapt,adaptors,27,I think it only checks for adaptors at the 5' end (start of a read) ? Or the 35bp SE reads are below some length threshold?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/222
https://github.com/OpenGene/fastp/issues/223:26,integrability,filter,filtering,26,"Don't mind the the ""after filtering"" section if you don't do any real filtering.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:70,integrability,filter,filtering,70,"Don't mind the the ""after filtering"" section if you don't do any real filtering.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:47,integrability,filter,filtering,47,"It is kind of confusing having the results for filtering when none is done. Especially when one sends the report to a no-user. Also, the runtime could be cut into half if the graphs are not computed again ""after filtering"".",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:212,integrability,filter,filtering,212,"It is kind of confusing having the results for filtering when none is done. Especially when one sends the report to a no-user. Also, the runtime could be cut into half if the graphs are not computed again ""after filtering"".",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:121,usability,user,user,121,"It is kind of confusing having the results for filtering when none is done. Especially when one sends the report to a no-user. Also, the runtime could be cut into half if the graphs are not computed again ""after filtering"".",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:80,integrability,filter,filtering,80,"I think I should add a `qc_only` option to just do quality control, without any filtering.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:59,security,control,control,59,"I think I should add a `qc_only` option to just do quality control, without any filtering.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/223:59,testability,control,control,59,"I think I should add a `qc_only` option to just do quality control, without any filtering.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/223
https://github.com/OpenGene/fastp/issues/225:260,deployability,contain,contain,260,"@ignadb: How did you obtain the FASTQ files? If you use `bcl2fastq` to convert your raw Illumina data, PhiX reads should end up in the 'undetermined' fraction as they don't have a sample barcode used for demultiplexing. Thus, none of the actual samples should contain any PhiX. Or do you run the undetermined reads through fastp?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:154,modifiability,deco,decontamination,154,This is an important comment that should not be ignored. PhiX can end up in the pre-processed reads for a variety of reasons. It would be great if a PhiX decontamination feature were added.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:202,energy efficiency,current,currently,202,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:1052,energy efficiency,reduc,reduced,1052,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:1018,interoperability,platform,platform,1018,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:494,performance,multiplex,multiplexed,494,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:448,safety,test,testing,448,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:610,safety,safe,safe,610,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:700,safety,detect,detected,700,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:700,security,detect,detected,700,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:448,testability,test,testing,448,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:145,usability,tool,tool,145,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:237,usability,user,users,237,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/225:281,usability,user,users,281,"Removing PhiX is especially important for reads that are used in _de novo_ assemblies. Which is also when one will likely be using a trimming/QC tool like fastp. I gather the design philosophy of fastp currently is ""Set good defaults so users don't have to."" Removing PhiX without users having to think about it is a good idea. In a perfect world, bcl2fastq should remove all PhiX, but a small fraction of PhiX reads get assigned to samples. In my testing, it's usually between 0-100 reads per multiplexed sample, but I have had a few examples of several thousand reads mapping to PhiX. It's more of a 'better safe than sorry' situation. I'll also stress that NCBI will not take assemblies that have detected PhiX contamination - those contigs/scaffolds that have PhiX must be removed prior to acceptance into the NCBI assembly database. Edit - Also, in preps that use a single index (i7) vs dual index (i5 + i7), PhiX contamination is much more of a problem. Especially as use of low cost sequencing like the SeqWell platform that can use only i7 for reduced cost. I get in the thousands of PhiX per sample in that instance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/225
https://github.com/OpenGene/fastp/issues/227:67,safety,compl,complexity,67,"You can set different read length limit for R1 and R2, but the low complexity option is for both reads,",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/227
https://github.com/OpenGene/fastp/issues/227:67,security,compl,complexity,67,"You can set different read length limit for R1 and R2, but the low complexity option is for both reads,",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/227
https://github.com/OpenGene/fastp/issues/229:31,availability,down,down,31,I'm having similar issues with down stream analysis with fastp produced reads. Has a solution been obtained yet?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/229
https://github.com/OpenGene/fastp/issues/230:39,usability,support,supported,39,De-duplication from FASTQ level is not supported by fastp yet. You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:119,usability,tool,tool,119,De-duplication from FASTQ level is not supported by fastp yet. You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:396,availability,slo,slow,396,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:396,reliability,slo,slow,396,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:288,security,team,team,288,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:469,security,ident,identify,469,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:581,security,ident,identify,581,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:41,usability,support,supported,41,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:127,usability,tool,tool,127,"> De-duplication from FASTQ level is not supported by fastp yet. > . > You can use the BAM file to deduplicate using our other tool gencore https://github.com/OpenGene/gencore. Fastp is quite fast, and in some cases，such as metagenomics which is hard to use reference, I really hope your team can consider adding this feature. As far as I konw, the other de novo de-duplication software is quite slow to run in metagenomics. . Otherwise, I am wondering since fastp can identify the duplication, why would not mark it in the sequence header or remove it? I guess maybe the software identify the duplication without considering all reads? Thanks a lot.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:3,deployability,version,version,3,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:3,integrability,version,version,3,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:3,modifiability,version,version,3,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:244,performance,time,time,244,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:92,reliability,doe,does,92,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:112,usability,support,support,112,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:346,usability,prefer,prefer,346,"in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? . In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? thanks. Ming.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:5,deployability,version,version,5,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:5,integrability,version,version,5,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:462,interoperability,compatib,compatible,462,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:5,modifiability,version,version,5,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:244,performance,time,time,244,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:94,reliability,doe,does,94,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:114,usability,support,support,114,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:346,usability,prefer,prefer,346,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/230:406,usability,support,supports,406,"> in version 0.23.0 or later, the read me on github show a function of deduplication with -D, does it means fastp support deduplication from fastq level now? In this case of UMI, can I use both UMI mode -U and deduplication mode -U at the same time? Or I need to do it sequentially, -D then -U, or -U then -D, or deduplication at bam level still prefer? > . > thanks. > . > Ming. Yes, since v0.22.0, fastp supports FASTQ level deduplication. And this feature is compatible with UMI features.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/230
https://github.com/OpenGene/fastp/issues/231:198,availability,error,errors,198,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:157,deployability,Log,Log,157,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:219,deployability,releas,release,219,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:269,deployability,log,log,269,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1238,deployability,fail,failed,1238,". Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1280,deployability,fail,failed,1280," sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1319,deployability,fail,failed,1319,". ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3322,deployability,fail,failed,3322,"tq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3364,deployability,fail,failed,3364," a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3403,deployability,fail,failed,3403,"loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fas",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:339,energy efficiency,adapt,adapter,339,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:386,energy efficiency,Adapt,Adapter,386,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:447,energy efficiency,adapt,adapter,447,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:494,energy efficiency,Adapt,Adapter,494,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1364,energy efficiency,adapt,adapter,1364," >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1413,energy efficiency,adapt,adapters,1413,"ACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2438,energy efficiency,adapt,adapter,2438,"ation rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2485,energy efficiency,Adapt,Adapter,2485,"ed by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed d",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2546,energy efficiency,adapt,adapter,2546,"02003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Inser",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2593,energy efficiency,Adapt,Adapter,2593,"tp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3447,energy efficiency,adapt,adapter,3447,"nce for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3495,energy efficiency,adapt,adapters,3495,". AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Met",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:339,integrability,adapt,adapter,339,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:386,integrability,Adapt,Adapter,386,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:447,integrability,adapt,adapter,447,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:494,integrability,Adapt,Adapter,494,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:622,integrability,filter,filtering,622,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:765,integrability,filter,filtering,765,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:907,integrability,filter,filtering,907,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1052,integrability,filter,filtering,1052," loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And th",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1181,integrability,Filter,Filtering,1181,"ed fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 s",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1213,integrability,filter,filter,1213,"st release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1364,integrability,adapt,adapter,1364," >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1413,integrability,adapt,adapters,1413,"ACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2438,integrability,adapt,adapter,2438,"ation rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2485,integrability,Adapt,Adapter,2485,"ed by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed d",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2546,integrability,adapt,adapter,2546,"02003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Inser",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2593,integrability,Adapt,Adapter,2593,"tp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2721,integrability,filter,filtering,2721,"q.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srl",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2861,integrability,filter,filtering,2861,"p-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2999,integrability,filter,filtering,2999,". fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-tr",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3140,integrability,filter,filtering,3140,"p_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking f",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3265,integrability,Filter,Filtering,3265,"ite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3297,integrability,filter,filter,3297,"12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.f",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3447,integrability,adapt,adapter,3447,"nce for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3495,integrability,adapt,adapters,3495,". AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Met",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:339,interoperability,adapt,adapter,339,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:386,interoperability,Adapt,Adapter,386,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:447,interoperability,adapt,adapter,447,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:494,interoperability,Adapt,Adapter,494,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:595,interoperability,specif,specified,595,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1364,interoperability,adapt,adapter,1364," >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1413,interoperability,adapt,adapters,1413,"ACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2438,interoperability,adapt,adapter,2438,"ation rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2485,interoperability,Adapt,Adapter,2485,"ed by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed d",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2546,interoperability,adapt,adapter,2546,"02003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Inser",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2593,interoperability,Adapt,Adapter,2593,"tp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2694,interoperability,specif,specified,2694,".gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3447,interoperability,adapt,adapter,3447,"nce for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3495,interoperability,adapt,adapters,3495,". AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Met",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:4990,interoperability,format,formatting,4990,"ltering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Meth14.fastp-trim.202003064415.report.html. -rw-r--r-- 1 samwhite hyak-coenv 136830 Mar 6 07:54 Meth14.fastp-trim.202003064415.report.json. -rwx------ 1 samwhite hyak-coenv 4095048456 Nov 12 15:36 Meth14_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 4341693331 Nov 12 15:34 Meth14_R2_001.fastq.gz. ```. Then, to add to the issues, it turns out that some samples generated reports, but _no trimmed outputs_. Any suggestions as to what I can do to resolve this? EDITED: Fixed some code block formatting.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:339,modifiability,adapt,adapter,339,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:386,modifiability,Adapt,Adapter,386,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:447,modifiability,adapt,adapter,447,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:494,modifiability,Adapt,Adapter,494,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1364,modifiability,adapt,adapter,1364," >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1413,modifiability,adapt,adapters,1413,"ACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2438,modifiability,adapt,adapter,2438,"ation rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads ",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2485,modifiability,Adapt,Adapter,2485,"ed by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed d",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2546,modifiability,adapt,adapter,2546,"02003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Inser",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2593,modifiability,Adapt,Adapter,2593,"tp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3447,modifiability,adapt,adapter,3447,"nce for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3495,modifiability,adapt,adapters,3495,". AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Met",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:198,performance,error,errors,198,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2021,performance,time,time,2021,"89(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:4107,performance,time,time,4107,"ltering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fastp-trim.202003064415_R2_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 492118 Mar 6 07:54 Meth14.fastp-trim.202003064415.report.html. -rw-r--r-- 1 samwhite hyak-coenv 136830 Mar 6 07:54 Meth14.fastp-trim.202003064415.report.json. -rwx------ 1 samwhite hyak-coenv 4095048456 Nov 12 15:36 Meth14_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 4341693331 Nov 12 15:34 Meth14_R2_001.fastq.gz. ```. Then, to add to the issues, it turns out that some samples generated reports, but _no trimmed outputs_. Any suggestions as to what I can do to resolve this? EDITED: Fixed some code block formatting.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1238,reliability,fail,failed,1238,". Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1280,reliability,fail,failed,1280," sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coen",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:1319,reliability,fail,failed,1319,". ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3322,reliability,fail,failed,3322,"tq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3364,reliability,fail,failed,3364," a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:3403,reliability,fail,failed,3403,"loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.8926%. Insert size peak (evaluated by paired-end reads): 76. JSON report: Meth14.fastp-trim.202003064415.report.json. HTML report: Meth14.fastp-trim.202003064415.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth14_R1_001.fastq.gz --in2 Meth14_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth14.fastp-trim.202003064415.report.html --json Meth14.fastp-trim.202003064415.report.json --out1 Meth14.fastp-trim.202003064415_R1_001.fastq.gz --out2 Meth14.fastp-trim.202003064415_R2_001.fastq.gz . fastp v0.20.0, time used: 633 seconds. ```. Looking for those files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth14*. -rw-r--r-- 1 samwhite hyak-coenv 3377028561 Mar 6 07:54 Meth14.fastp-trim.202003064415_R1_001.fastq.gz. -rw-r--r-- 1 samwhite hyak-coenv 3424338302 Mar 6 07:54 Meth14.fas",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:157,safety,Log,Log,157,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:198,safety,error,errors,198,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:269,safety,log,log,269,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:329,safety,Detect,Detecting,329,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:437,safety,Detect,Detecting,437,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2428,safety,Detect,Detecting,2428,"8. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 67292",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2536,safety,Detect,Detecting,2536,"tp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.892",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:157,security,Log,Log,157,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:269,security,log,log,269,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:329,security,Detect,Detecting,329,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:437,security,Detect,Detecting,437,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2428,security,Detect,Detecting,2428,"8. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 67292",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:2536,security,Detect,Detecting,2536,"tp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq.gz . fastp v0.20.0, time used: 1410 seconds. ```. And then, looking for any of the output files:. ```. [samwhite@n2232 20200305_methcompare_fastp_trimming]$ ls -l Meth4*. -rwx------ 1 samwhite hyak-coenv 9108629272 Nov 12 15:35 Meth4_R1_001.fastq.gz. -rwx------ 1 samwhite hyak-coenv 9542931017 Nov 12 15:37 Meth4_R2_001.fastq.gz. ```. ---. And, here's an example of a successful sample from the same for loop being run:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 10198313165(97.8633%). Q30 bases: 9841157500(94.436%). Read2 before filtering:. total reads: 69473196. total bases: 10420979400. Q20 bases: 9979752821(95.766%). Q30 bases: 9482026446(90.9898%). Read1 after filtering:. total reads: 67906601. total bases: 7080800743. Q20 bases: 6989910141(98.7164%). Q30 bases: 6770779855(95.6217%). Read2 aftering filtering:. total reads: 67906601. total bases: 6951222579. Q20 bases: 6831357390(98.2756%). Q30 bases: 6575093010(94.589%). Filtering result:. reads passed filter: 135813202. reads failed due to low quality: 2449114. reads failed due to too many N: 11154. reads failed due to too short: 672922. reads with adapter trimmed: 90478418. bases trimmed due to adapters: 5069818461. Duplication rate: 40.892",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:157,testability,Log,Log,157,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:269,testability,log,log,269,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:161,usability,indicat,indicates,161,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/231:198,usability,error,errors,198,"Same thing is happening to me. Processing samples via for loop. Some samples produce the expected output files/report, but others don't generate any output. Log indicates everything worked fine; no errors. Using latest release (fastp-0.20.0). Here's a snippet from the log file for a sample that didn't produce any output:. ```. Detecting adapter sequence for read1... >Illumina TruSeq Adapter Read 1. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. Detecting adapter sequence for read2... >Illumina TruSeq Adapter Read 2. AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT. WARNING: fastp uses up to 16 threads although you specified 27. Read1 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21870791149(96.8005%). Q30 bases: 20882138585(92.4247%). Read2 before filtering:. total reads: 150624528. total bases: 22593679200. Q20 bases: 21365323197(94.5633%). Q30 bases: 20203436607(89.4207%). Read1 after filtering:. total reads: 146726267. total bases: 15227125519. Q20 bases: 15017358478(98.6224%). Q30 bases: 14537882989(95.4736%). Read2 aftering filtering:. total reads: 146726267. total bases: 14942248145. Q20 bases: 14672244517(98.193%). Q30 bases: 14113507245(94.4537%). Filtering result:. reads passed filter: 293452534. reads failed due to low quality: 6057788. reads failed due to too many N: 23538. reads failed due to too short: 1715196. reads with adapter trimmed: 205117254. bases trimmed due to adapters: 10879676168. Duplication rate: 37.4725%. Insert size peak (evaluated by paired-end reads): 146. JSON report: Meth4.fastp-trim.202003065338.report.json. HTML report: Meth4.fastp-trim.202003065338.report.html. /gscratch/srlab/programs/fastp-0.20.0/fastp --in1 Meth4_R1_001.fastq.gz --in2 Meth4_R2_001.fastq.gz --detect_adapter_for_pe --trim_tail1 2 --trim_front2 2 --thread 27 --html Meth4.fastp-trim.202003065338.report.h. tml --json Meth4.fastp-trim.202003065338.report.json --out1 Meth4.fastp-trim.202003065338_R1_001.fastq.gz --out2 Meth4.fastp-trim.202003065338_R2_001.fastq",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/231
https://github.com/OpenGene/fastp/issues/233:72,availability,mainten,maintenance,72,use the `-n` parameter in `cutadapt`... Seems that `fastp` is not under maintenance now.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:13,modifiability,paramet,parameter,13,use the `-n` parameter in `cutadapt`... Seems that `fastp` is not under maintenance now.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:72,reliability,mainten,maintenance,72,use the `-n` parameter in `cutadapt`... Seems that `fastp` is not under maintenance now.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:80,availability,mainten,maintenance,80,"> use the `-n` parameter in `cutadapt`... > . > Seems that `fastp` is not under maintenance now. No, I was too busy on anti-COVID19 activities. But I am still maintaining fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:15,modifiability,paramet,parameter,15,"> use the `-n` parameter in `cutadapt`... > . > Seems that `fastp` is not under maintenance now. No, I was too busy on anti-COVID19 activities. But I am still maintaining fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:159,modifiability,maintain,maintaining,159,"> use the `-n` parameter in `cutadapt`... > . > Seems that `fastp` is not under maintenance now. No, I was too busy on anti-COVID19 activities. But I am still maintaining fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:80,reliability,mainten,maintenance,80,"> use the `-n` parameter in `cutadapt`... > . > Seems that `fastp` is not under maintenance now. No, I was too busy on anti-COVID19 activities. But I am still maintaining fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/233:159,safety,maintain,maintaining,159,"> use the `-n` parameter in `cutadapt`... > . > Seems that `fastp` is not under maintenance now. No, I was too busy on anti-COVID19 activities. But I am still maintaining fastp",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/233
https://github.com/OpenGene/fastp/issues/236:376,availability,state,state,376,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:446,deployability,version,version,446,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:376,integrability,state,state,376,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:446,integrability,version,version,446,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:446,modifiability,version,version,446,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:709,performance,time,time,709,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:681,usability,help,helps,681,My best guess is that one of the following lines should match the other as they seem to be supposed do the same job but differ:. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L116-L118. https://github.com/OpenGene/fastp/blob/e01e9402c3d5afded49b21c8303be51d7cbb2d27/src/fastqreader.cpp#L145-L147. Right now I'm not in the state of mind to dig deeper but it looks like the latter is the older version and the former was changed fixing https://github.com/OpenGene/fastp/issues/133 in https://github.com/OpenGene/fastp/commit/e01e9402c3d5afded49b21c8303be51d7cbb2d27. Maybe this gives @sfchen an idea what's happening or maybe it helps someone else that has time to tackle this.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:23,availability,error,error,23,"Hi, I have the similar error. But my fastq file is the windows format, which has endings of \r\n. I have removed any mBuf[end-1]=='\r' or mBuf[end]=='\r' in getLine(). and it works well",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:63,interoperability,format,format,63,"Hi, I have the similar error. But my fastq file is the windows format, which has endings of \r\n. I have removed any mBuf[end-1]=='\r' or mBuf[end]=='\r' in getLine(). and it works well",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:23,performance,error,error,23,"Hi, I have the similar error. But my fastq file is the windows format, which has endings of \r\n. I have removed any mBuf[end-1]=='\r' or mBuf[end]=='\r' in getLine(). and it works well",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:23,safety,error,error,23,"Hi, I have the similar error. But my fastq file is the windows format, which has endings of \r\n. I have removed any mBuf[end-1]=='\r' or mBuf[end]=='\r' in getLine(). and it works well",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/236:23,usability,error,error,23,"Hi, I have the similar error. But my fastq file is the windows format, which has endings of \r\n. I have removed any mBuf[end-1]=='\r' or mBuf[end]=='\r' in getLine(). and it works well",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/236
https://github.com/OpenGene/fastp/issues/240:154,energy efficiency,adapt,adapter,154,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:343,energy efficiency,adapt,adapter,343,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:154,integrability,adapt,adapter,154,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:343,integrability,adapt,adapter,343,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:364,integrability,sub,substring,364,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:154,interoperability,adapt,adapter,154,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:343,interoperability,adapt,adapter,343,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:154,modifiability,adapt,adapter,154,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:343,modifiability,adapt,adapter,343,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:110,performance,perform,performed,110,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:98,safety,test,test,98,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:236,safety,detect,detects,236,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:249,safety,detect,detection,249,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:303,safety,detect,detect,303,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:391,safety,detect,detected,391,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:236,security,detect,detects,236,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:249,security,detect,detection,249,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:303,security,detect,detect,303,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:391,security,detect,detected,391,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:98,testability,test,test,98,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:110,usability,perform,performed,110,"Just as example, in case I didn't explain myself well. This is the output of a ab-initio trimming test that I performed. What you (presumably) see is the adapter sequence that you get from your list as well as the ones that the program detects. The detection works perfectly fine! But, the sequence you detect is misclassified as an incorrect adapter (it's just a substring of the correctly detected sequence):. ""adapter_cutting"": {. ""adapter_trimmed_reads"": 15252489,. ""adapter_trimmed_bases"": 275911139,. ""read1_adapter_sequence"": ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"",. ""read2_adapter_sequence"": ""GATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"",. ""read1_adapter_counts"": {""A"":258256, ""AG"":255461, ""AGA"":251408, ""AGAT"":252294, ""AGATC"":266313, ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTC",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/240:2683,usability,help,help,2683,", ""AGATCG"":250919, ""AGATCGG"":246263, ""AGATCGGA"":244905, ""AGATCGGAA"":239915, ""AGATCGGAAG"":238869, ""AGATCGGAAGA"":232727, ""AGATCGGAAGAG"":228236, ""AGATCGGAAGAGC"":222700, ""AGATCGGAAGAGCA"":215512, ""AGATCGGAAGAGCAC"":209235, ""AGATCGGAAGAGCACA"":206374, ""AGATCGGAAGAGCACAC"":207388, ""AGATCGGAAGAGCACACG"":199146, ""AGATCGGAAGAGCACACGT"":189425, ""AGATCGGAAGAGCACACGTC"":180821, ""AGATCGGAAGAGCACACGTCT"":174541, ""AGATCGGAAGAGCACACGTCTG"":164492, ""AGATCGGAAGAGCACACGTCTGA"":155202, ""AGATCGGAAGAGCACACGTCTGAA"":147726, ""AGATCGGAAGAGCACACGTCTGAAC"":140842, ""AGATCGGAAGAGCACACGTCTGAACT"":132633, ""AGATCGGAAGAGCACACGTCTGAACTC"":127846, ""AGATCGGAAGAGCACACGTCTGAACTCC"":121901, ""AGATCGGAAGAGCACACGTCTGAACTCCA"":114267, ""AGATCGGAAGAGCACACGTCTGAACTCCAG"":106994, ""AGATCGGAAGAGCACACGTCTGAACTCCAGT"":112076, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTC"":100202, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCA"":83444, ""AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC"":77601, ""others"":1284915},. ""read2_adapter_counts"": {""A"":254429, ""AG"":251422, ""AGA"":248266, ""AGAT"":248779, ""AGATC"":244706, ""AGATCG"":245271, ""AGATCGG"":241971, ""AGATCGGA"":241349, ""AGATCGGAA"":236832, ""AGATCGGAAG"":235637, ""AGATCGGAAGA"":229437, ""AGATCGGAAGAG"":225478, ""AGATCGGAAGAGC"":219571, ""AGATCGGAAGAGCG"":212924, ""AGATCGGAAGAGCGT"":205831, ""AGATCGGAAGAGCGTC"":203689, ""AGATCGGAAGAGCGTCG"":205204, ""AGATCGGAAGAGCGTCGT"":195968, ""AGATCGGAAGAGCGTCGTG"":187239, ""AGATCGGAAGAGCGTCGTGT"":178116, ""AGATCGGAAGAGCGTCGTGTA"":172266, ""AGATCGGAAGAGCGTCGTGTAG"":162462, ""AGATCGGAAGAGCGTCGTGTAGG"":153343, ""AGATCGGAAGAGCGTCGTGTAGGG"":145902, ""AGATCGGAAGAGCGTCGTGTAGGGA"":139406, ""AGATCGGAAGAGCGTCGTGTAGGGAA"":131260, ""AGATCGGAAGAGCGTCGTGTAGGGAAA"":126247, ""AGATCGGAAGAGCGTCGTGTAGGGAAAG"":120275, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGA"":112856, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAG"":105885, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGT"":98076, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTG"":91036, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"":82723, ""AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTT"":76530, ""others"":1381254}. Please let me know if I can help in any way! Best regards,. Christopher.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/240
https://github.com/OpenGene/fastp/issues/244:30,interoperability,specif,specifying,30,You can set the file names by specifying `--html` and `--json`,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:567,interoperability,specif,specify,567,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:592,interoperability,specif,specify,592,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:665,security,auth,authored,665,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:1019,security,auth,auth,1019,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:310,usability,person,persons,310,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/244:358,usability,person,persons,358,"ah, thank you! -- . Prof. Douglas W. Yu. School of Biological Sciences, University of East Anglia, Norwich, Norfolk NR4 7TJ UK, mob +44-7510-308-272. Kunming Institute of Zoology, 21 Qingsong Lu, Kunming, Yunnan 650201 China 中国云南昆明市盘龙区茨坝青松路21号, ofc +86-871-519 9178, mob +86 183 138 29970. people.uea.ac.uk/en/persons/douglas-yu <https://people.uea.ac.uk/en/persons/douglas-yu>, eastanglia.academia.edu/DouglasYu/Papers <http://eastanglia.academia.edu/DouglasYu/Papers> for pdfs. > On 5 Mar 2020, at 23:50, Shifu Chen <notifications@github.com> wrote:. > . > You can specify the filenames by specify --html and --json. > . > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub <https://github.com/OpenGene/fastp/issues/244?email_source=notifications&email_token=ADB4EPY3BFKZOA5HP4JV2V3RGA3ENA5CNFSM4LCTVSUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEN7J7BA#issuecomment-595500932>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ADB4EP63FVWHRBAQBYX4DYDRGA3ENANCNFSM4LCTVSUA>. > .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/244
https://github.com/OpenGene/fastp/issues/245:53,integrability,filter,filtering,53,I've also started using Guppy's trimming and quality filtering options during basecalling. @tseemann I'd love to hear your opinion on this vs porechop,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/245
https://github.com/OpenGene/fastp/issues/246:190,integrability,filter,filtering,190,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/246:323,integrability,filter,filtering,323,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/246:63,performance,time,time,63,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/246:43,usability,command,command,43,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/246:218,usability,user,user-images,218,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/246:351,usability,user,user-images,351,"Thanks so much for the quick response. The command worked this time, but I'm afraid the first 14 bases which were of low quality (<30) are not removed. Here is the quality score plot before filtering. ![image](https://user-images.githubusercontent.com/62525759/79085058-5d1ec080-7d7a-11ea-9c90-8bb6170e8b5c.png). and after filtering. ![image](https://user-images.githubusercontent.com/62525759/79085118-a111c580-7d7a-11ea-924c-e165f00081cc.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/246
https://github.com/OpenGene/fastp/issues/247:36,deployability,contain,containing,36,"I also tried preparing a FASTA file containing the poly-A and poly-T sequences and submitting it through the ""--adapter_fasta"" option, but no success.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/247
https://github.com/OpenGene/fastp/issues/247:83,integrability,sub,submitting,83,"I also tried preparing a FASTA file containing the poly-A and poly-T sequences and submitting it through the ""--adapter_fasta"" option, but no success.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/247
https://github.com/OpenGene/fastp/issues/247:102,usability,user,user-images,102,"for some reason I am on the same boat. used --trim_poly_x and --trim_poly_g options. ![polyX](https://user-images.githubusercontent.com/20404754/84063275-1ab3e180-a9c1-11ea-80b5-d82b2d554941.png). ./fastp -i A006850047_113702_S1_L002_R1_001.fastq.gz . -o A006850047_113702_S1_L002_R1_001_trim.fastq.gz . -I A006850047_113702_S1_L002_R2_001.fastq.gz . -O A006850047_113702_S1_L002_R2_001_trim.fastq.gz . --unpaired1 A006850047_113702_S1_L002_R1_001_unpaired.fastq.gz . --unpaired2 A006850047_113702_S1_L002_R2_001_unpaied.fastq.gz. --failed_out A006850047_113702_S1_L002_R2_001_failed.fastq.gz. -Q --correction --trim_front1 16 --overrepresentation_analysis --detect_adapter_for_pe --trim_poly_x --trim_poly_g --split 10. --json /projects/ccg-ngs/fastq/LR05/A006850047_113702.json . --html /projects/ccg-ngs/fastq/LR05/A006850047_113702.html . --report_title /projects/ccg-ngs/fastq/LR05/A006850047_113702. fastp 0.20.1, at 2020-06-08 17:11:37",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/247
https://github.com/OpenGene/fastp/issues/249:17,energy efficiency,adapt,adapter,17,"You can add both adapter sequences to a FASTQ file, and specify the file name by `--adapter_fasta`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:17,integrability,adapt,adapter,17,"You can add both adapter sequences to a FASTQ file, and specify the file name by `--adapter_fasta`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:17,interoperability,adapt,adapter,17,"You can add both adapter sequences to a FASTQ file, and specify the file name by `--adapter_fasta`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:56,interoperability,specif,specify,56,"You can add both adapter sequences to a FASTQ file, and specify the file name by `--adapter_fasta`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:17,modifiability,adapt,adapter,17,"You can add both adapter sequences to a FASTQ file, and specify the file name by `--adapter_fasta`",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:23,deployability,version,version,23,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:50,deployability,updat,update,50,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:69,deployability,version,version,69,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4724,deployability,pipelin,pipeline,4724,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:168,energy efficiency,adapt,adapter,168,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:261,energy efficiency,adapt,adapter,261,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:450,energy efficiency,adapt,adapter,450,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:721,energy efficiency,adapt,adapter,721,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4314,energy efficiency,adapt,adapter,4314,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4683,energy efficiency,adapt,adapter,4683,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4763,energy efficiency,power,powerful,4763,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:23,integrability,version,version,23,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:69,integrability,version,version,69,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:168,integrability,adapt,adapter,168,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:261,integrability,adapt,adapter,261,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:450,integrability,adapt,adapter,450,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:721,integrability,adapt,adapter,721,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4314,integrability,adapt,adapter,4314,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4683,integrability,adapt,adapter,4683,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4724,integrability,pipelin,pipeline,4724,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:168,interoperability,adapt,adapter,168,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:261,interoperability,adapt,adapter,261,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:450,interoperability,adapt,adapter,450,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:721,interoperability,adapt,adapter,721,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4314,interoperability,adapt,adapter,4314,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4683,interoperability,adapt,adapter,4683,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:23,modifiability,version,version,23,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:69,modifiability,version,version,69,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:168,modifiability,adapt,adapter,168,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:261,modifiability,adapt,adapter,261,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:450,modifiability,adapt,adapter,450,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:721,modifiability,adapt,adapter,721,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4314,modifiability,adapt,adapter,4314,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4683,modifiability,adapt,adapter,4683,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:458,performance,content,content,458,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:824,performance,content,content,824,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:4327,performance,content,content,4327,"----7-7--77----77<7--7---7-7---------7---------7-----7-----. @E00528:603:H7HKCCCX2:1:1101:2270:61855. CGCCTACCCCAGATGTGAGTGGAACCATACAAAAACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAACCCGCCGGCCTCCCCCCACCCAGAACCAAGCTCCGCCTGACCT. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJAJJJJAFJJJJJJJJJJJJJJJJJJJJJJJJJ--<-77----7AA--77-------7-7--7--7------7---. @E00528:603:H7HKCCCX2:1:1101:2270:64738. ACCTTAGGGAGGCGGGAAGTGAACTTCTTGATGGGGTCACGCGAAGCCCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTAATAATAGGGCAACCACCGAG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJ-FJJJJJJJJJJJJJJJJJJJJJJJJ7<<AJJJJAJ-<-----77<--7--F----. @E00528:603:H7HKCCCX2:1:1101:2270:66320. ATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCGTCTGCTTGAAAAAAATGGGGGGGGGGTGGGGGGGGGCTCGGTGGGGCGGCGGTGCGTGCTCCGGCGTGAGCGTGGGCCTGC. +. AAFFFJJJJJJJJJ7JFJJJJJJJJJJJJJJJJJJJJJJAJJJJJJJJJJ7JJFJJ--AJFA<F<JAJ-77FJJJJF7F<AFF7<--7777-777--7AAJ-A77-7-77--777<F<-7A77-77A---7-A-----------7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:70363. GATTAATAATGTTGTGTTAGTTTCAGCTGTACAGCATAGTGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATAAACGATCGCGGCGGCTGCGGCTTTGCCCACGTTGC. +. AAAFFJJJJJJJFJAJJJJJFJAJJJJ<JJFJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJFJJJJJJJJJJJFJJJJJJFJJJJJJJ--7------777---7--7<7-7--7A-77----7--. adapter file content:. >PrefixNX/1. AGATGTGTATAAGAGACAG. >PrefixNX/2. AGATGTGTATAAGAGACAG. >Trans1. TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG. >Trans1_rc. CTGTCTCTTATACACATCTGACGCTGCCGACGA. >Trans2. GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG. >Trans2_rc. CTGTCTCTTATACACATCTCCGAGCCCACGAGAC. i have used the Trimmomatic trim this file and view result by fastqc,and it show that have no adapter,but i do not like Trimmomatic,my pipeline use by fastp,because fastp is powerful in my other projects, so any suggestions this this? Looking forward to your reply,thanks!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:50,safety,updat,update,50,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:50,security,updat,update,50,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:288,usability,command,command,288,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:312,usability,user,user-images,312,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:495,usability,user,user-images,495,"thanks@sfchen,my fastp version is below 0.20,so i update my fastp to version 0.20.1,and now it's can run with --adapter_fasta, but the results may not be accurate, the adapter ""CTGTCTCTTATACACATCT"" in my data, after process by fastp,the data is alse enrich the adapter,below ids my linux command:. ![图片](https://user-images.githubusercontent.com/13416926/79442328-024fc800-800b-11ea-9dd9-7b2426036c49.png). then i use fastqc view the result, but the adapter content is alse high:. ![图片](https://user-images.githubusercontent.com/13416926/79442864-acc7eb00-800b-11ea-852d-b7f3eef9459f.png). and i am alse try with ""detect_adapter_for_pe"",but it can not work, None of the data was removed. there are my fastq data file and adapter file（sorry for that i don't konw how to upload this issue）,i paste my files as follows:. fastq content:. @E00528:603:H7HKCCCX2:1:1101:2260:72139. TCTCCGAGCCCACTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATCGATGAAGGAGGGGGACCCTCGGGTGCGGGGGGAAGTCAGAGATCGGACGGCGCTGTGAGCGCTG. +. AAFFFJAJJJJJJJJ<J77JFFJJJJJFJJJJJJJJFJJJJJJJJJJJJJFJJJJJJ-<FJJJJJJJJJJJAJJJJJJJFJJJJ-<7-7--<7<-77--7-77----7A-77--7-77----7----77-777--7-7--7--77---7-. @E00528:603:H7HKCCCX2:1:1101:2270:54471. GTGTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAAGAGACGGTCACCCACAGGCCAACGATGGCGCCTCCTCATGGCGCACGCGTGGGAGCTGGCGCG. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJFFJJJJJJJJJJJJJJJJJJJJJJJJJ7---------7---7--------7<----77-7--7--7---7-----7--7--7--7---7-. @E00528:603:H7HKCCCX2:1:1101:2270:57038. GTATAAGAGACAGCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAAAAAATACTGGGGGGCGCGGGTACGACGCCGGCCGGGATCGTAAATGGCGTCTGGTCCGTCGTGAGACGG. +. A<AFFJJJJJJJJJJJJJJJJJJFJJJJJJFJJJJJJJJJJJJJJJJJJJJFJJJFFFFFJJJJJJJJJJJJJ<FFJFJJJJJJJ--<7777--------7-----77------777--------7---777---7-7-7--7--7-7--. @E00528:603:H7HKCCCX2:1:1101:2270:58761. CTGTCTCTTATACCTGTCTCTTATACACATCTCCGAGCCCACGAGACGCCAATGTATCTCGTATGCCGTCTTCTGCTTGAA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:90,energy efficiency,adapt,adapter,90,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:144,energy efficiency,adapt,adapter,144,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:366,energy efficiency,adapt,adapters,366,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:90,integrability,adapt,adapter,90,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:144,integrability,adapt,adapter,144,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:366,integrability,adapt,adapters,366,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:90,interoperability,adapt,adapter,90,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:129,interoperability,specif,specified,129,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:144,interoperability,adapt,adapter,144,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:366,interoperability,adapt,adapters,366,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:90,modifiability,adapt,adapter,90,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:144,modifiability,adapt,adapter,144,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:366,modifiability,adapt,adapters,366,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:165,safety,detect,detected,165,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:353,safety,detect,detection,353,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:165,security,detect,detected,165,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:353,security,detect,detection,353,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:32,usability,help,help,32,"Are your reads overlapping? The help information shows this:. ```. --adapter_sequence the adapter for read1. For SE data, if not specified, the adapter will be auto-detected. For PE data, this is used if R1/R2 are found not overlapped. (string [=auto]). ```. So I interpret that to mean that if the reads are not overlapping, then there will be no auto-detection of adapters. . I might be wrong though! .",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:118,availability,fault,fault,118,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:118,energy efficiency,fault,fault,118,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:118,performance,fault,fault,118,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:118,reliability,fault,fault,118,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:118,safety,fault,fault,118,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:35,usability,help,help,35,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:140,usability,help,help,140,"@sfchen @AnnaSyme ,thanks for your help, the fastp work perfect know,i did not refresh my result directory,this is my fault,thanks for your help!!!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/249:17,usability,close,close,17,"Ok, good, please close this issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/249
https://github.com/OpenGene/fastp/issues/250:46,energy efficiency,adapt,adapters,46,"Could you please paste some reads here, whose adapters couldn't be removed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:46,integrability,adapt,adapters,46,"Could you please paste some reads here, whose adapters couldn't be removed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:46,interoperability,adapt,adapters,46,"Could you please paste some reads here, whose adapters couldn't be removed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:46,modifiability,adapt,adapters,46,"Could you please paste some reads here, whose adapters couldn't be removed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:59,energy efficiency,adapt,adapter,59,"Hello,. I can give you one alignment with a contig and one adapter for example: in the contig or initial read there is a 'C' inserted . NODE_89_lengt 9213 GGCCTCGTCCT 9223. ||||| |||||. adapter2 1 GGCCT-GTCCT 10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:59,integrability,adapt,adapter,59,"Hello,. I can give you one alignment with a contig and one adapter for example: in the contig or initial read there is a 'C' inserted . NODE_89_lengt 9213 GGCCTCGTCCT 9223. ||||| |||||. adapter2 1 GGCCT-GTCCT 10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:59,interoperability,adapt,adapter,59,"Hello,. I can give you one alignment with a contig and one adapter for example: in the contig or initial read there is a 'C' inserted . NODE_89_lengt 9213 GGCCTCGTCCT 9223. ||||| |||||. adapter2 1 GGCCT-GTCCT 10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:59,modifiability,adapt,adapter,59,"Hello,. I can give you one alignment with a contig and one adapter for example: in the contig or initial read there is a 'C' inserted . NODE_89_lengt 9213 GGCCTCGTCCT 9223. ||||| |||||. adapter2 1 GGCCT-GTCCT 10",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:25,deployability,contain,containing,25,Please give me the reads containing this adapter. I will debug it with fastp.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:41,energy efficiency,adapt,adapter,41,Please give me the reads containing this adapter. I will debug it with fastp.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:41,integrability,adapt,adapter,41,Please give me the reads containing this adapter. I will debug it with fastp.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:41,interoperability,adapt,adapter,41,Please give me the reads containing this adapter. I will debug it with fastp.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:41,modifiability,adapt,adapter,41,Please give me the reads containing this adapter. I will debug it with fastp.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,energy efficiency,adapt,adapter,80,I do not know which read it was originally. There are millions of reads. . This adapter was in only in one contig at the end. Maybe I could map the reads to the contig but it is not so easy to identify which read was not trimmed. Do have some ideas why?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,integrability,adapt,adapter,80,I do not know which read it was originally. There are millions of reads. . This adapter was in only in one contig at the end. Maybe I could map the reads to the contig but it is not so easy to identify which read was not trimmed. Do have some ideas why?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,interoperability,adapt,adapter,80,I do not know which read it was originally. There are millions of reads. . This adapter was in only in one contig at the end. Maybe I could map the reads to the contig but it is not so easy to identify which read was not trimmed. Do have some ideas why?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,modifiability,adapt,adapter,80,I do not know which read it was originally. There are millions of reads. . This adapter was in only in one contig at the end. Maybe I could map the reads to the contig but it is not so easy to identify which read was not trimmed. Do have some ideas why?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:193,security,ident,identify,193,I do not know which read it was originally. There are millions of reads. . This adapter was in only in one contig at the end. Maybe I could map the reads to the contig but it is not so easy to identify which read was not trimmed. Do have some ideas why?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:23,usability,help,help,23,"Hello, may I have some help to debug ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,energy efficiency,adapt,adapters,80,"> Hi, I will debug within some days. I had the same problem， can't remove read2 adapters",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,integrability,adapt,adapters,80,"> Hi, I will debug within some days. I had the same problem， can't remove read2 adapters",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,interoperability,adapt,adapters,80,"> Hi, I will debug within some days. I had the same problem， can't remove read2 adapters",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:80,modifiability,adapt,adapters,80,"> Hi, I will debug within some days. I had the same problem， can't remove read2 adapters",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:140,usability,user,user-images,140,"Hi @sfchen,. I have also found that fastp can not deal with ""read through"" reads correctly. . A diagram from Trimmomatic:. ![image](https://user-images.githubusercontent.com/5415510/92329318-4e260b00-f099-11ea-9303-ef882a1072fb.png) . Read1 fastq file:. ``````. Read2 fastq file:. ```. @K00159:45:H4W76BBXX:5:1105:20791:9167 2:N:0:CAACTA. CGTCGTCCGGCTGTACACCTCTCAAGGTGTACTTCTCGGTGGCCGTATCATTATTAAAAACTTTTTTTCAAGCAGAAGACGGCATACGAGATTGAGTGGTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT. +. A--77FFJ-<FF-FFF-AF7AJA-JJJ-FFF-<<J-F-FA-<F-AA-<<-<AAA-FF---AAFFAAJAF-7-<F-7AJFA<FJAAAJFAJJF<A-<7AJFF7-FF-<-<-<7FF<7FFFJAF-7<AFAA<J<. @K00159:45:H4W76BBXX:5:1105:12063:9027 2:N:0:CAACTA. CAGTCGGGATCGTCGGACTGTAGAACTCTGAACGTGTAGATCTCGGTGGTCGCCGTATCATTAAAAAAAAATTTTTTTCAAGCAGAAGACGGCACACCAGATTAGTTGGTGACTGGAGTTCAGACGTGTGCTCTTCCGATCTCACTCAG. +. AAFFFFJFFJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJFJJJFJFJJJJJJJJJJJJJFJJJJJJJJJJJJJAJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJFFFJFFJJJ. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:29,energy efficiency,adapt,adapters,29,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:1189,energy efficiency,adapt,adapter,1189,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:29,integrability,adapt,adapters,29,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:1189,integrability,adapt,adapter,1189,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:29,interoperability,adapt,adapters,29,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:1189,interoperability,adapt,adapter,1189,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:29,modifiability,adapt,adapters,29,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:1189,modifiability,adapt,adapter,1189,fastq can not deal with some adapters in SE mode either. for example: . ```. @K00159:45:H4W76BBXX:5:1103:11931:62171 1:N:0:CAACTA. GAGGACGAGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAACAAAACACGCCTATCGCCGGCGAAGTCCGGAAACAAGCAAAACAAAAGTCCAACCGGGGGAGAGCCTAC. +. AAAFFFJ7JJJAFFFA-AJJJJJJJJJJJJJJJJJJJJJJJAJFJJJJJJJJJJJJJJJJJJJJJJJJFFJFJJJJJJJJJJJJAJJJJJJJJJJJJJJJJJJJJJJJJ-FAJJJFJA7FJJJJJJJJJJJJJJJJJJFFJJFJJFJFJF. @K00159:45:H4W76BBXX:5:1103:19157:62277 1:N:0:CAACTA. GAAAGTCGGAGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAGAACGGTGGTGCCCCGCTGGGAGAGGTTAACCACAACAAGAAAAATAAATGTCGCCACTGAGGCCAAC. +. AAFFFFJFJJJJJAFFJFJJJJJJJJAJJAJFJA<FFJFFJ<JJJJJJJJAFFJFJJJJJJJJJJJJFFFFJFFJJJJJJJJJJJJJJFFJJFJF<JJJJJJJJFJFAFAJJJFFJFFJFFJAAJJJAJJAJJJJJAFFFJJJJFJJJJJ. @K00159:45:H4W76BBXX:5:1103:15270:63032 1:N:0:CAACTA. AGATCGGGAAGAGCACACGTCTGAACTCCAGTCACCAACTAATCTCGTATGCCGTCTTCTGCTTGAAAAAAATTTTTTTTTAATGTTCGGCGACCCCCCGGGATTTACCCTTCCAAAGTTTAAAAGCCCGCCGACCGGGCGGGGAAGGGA. +. AAFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJF. ```. (Illumina Trueseq read1 adapter),MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:64,availability,error,errors,64,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:247,availability,error,errors,247,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:389,availability,error,error,389,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:17,deployability,updat,update,17,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:78,energy efficiency,adapt,adapter,78,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:120,energy efficiency,Adapt,Adapter,120,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:282,energy efficiency,adapt,adapter,282,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:364,energy efficiency,adapt,adapter,364,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:78,integrability,adapt,adapter,78,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:120,integrability,Adapt,Adapter,120,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:282,integrability,adapt,adapter,282,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:364,integrability,adapt,adapter,364,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:78,interoperability,adapt,adapter,78,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:120,interoperability,Adapt,Adapter,120,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:282,interoperability,adapt,adapter,282,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:364,interoperability,adapt,adapter,364,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:78,modifiability,adapt,adapter,78,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:120,modifiability,Adapt,Adapter,120,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:282,modifiability,adapt,adapter,282,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:364,modifiability,adapt,adapter,364,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:64,performance,error,errors,64,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:247,performance,error,errors,247,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:389,performance,error,error,389,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:17,safety,updat,update,17,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:64,safety,error,errors,64,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:247,safety,error,errors,247,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:389,safety,error,error,389,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:17,security,updat,update,17,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:64,usability,error,errors,64,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:247,usability,error,errors,247,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/250:389,usability,error,error,389,"Just thought I'd update this, as it would be nice if sequencing errors in the adapter sequences could be taken care of. Adapter used for R1:. `AGATCGGAAGAGCACACGTCTGAACTCCAGTCA`. All of these get successfully trimmed, but it seems that sequencing errors/insertions/deletions in the adapter sequence are not taken care of:. (The second sequence in each e.g. is the adapter sequence without error). e.g. 1. AGA**GA**TCGGAAG**_**GCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 2. AGATCGGAAGAGCACACGTCTGA**_**CTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA. e.g. 3. AGA**GA**TCG**_**AAGAGCACACGTCTGAACTCCAGTCA. AGATCGGAAGAGCACACGTCTGAACTCCAGTCA",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/250
https://github.com/OpenGene/fastp/issues/252:4,energy efficiency,adapt,adapters,4,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:81,energy efficiency,adapt,adapter,81,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:4,integrability,adapt,adapters,4,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:81,integrability,adapt,adapter,81,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:4,interoperability,adapt,adapters,4,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:81,interoperability,adapt,adapter,81,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:4,modifiability,adapt,adapters,4,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:81,modifiability,adapt,adapter,81,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:125,safety,compl,completely,125,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:125,security,compl,completely,125,"The adapters reported by fastp, have already been removed. They are named `other adapter` just because they cannot be listed completely.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:45,energy efficiency,adapt,adapter,45,"@sfchen Just curious, why can't these ""other adapter sequences"" actually be listed? What's the limitation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:45,integrability,adapt,adapter,45,"@sfchen Just curious, why can't these ""other adapter sequences"" actually be listed? What's the limitation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:45,interoperability,adapt,adapter,45,"@sfchen Just curious, why can't these ""other adapter sequences"" actually be listed? What's the limitation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/252:45,modifiability,adapt,adapter,45,"@sfchen Just curious, why can't these ""other adapter sequences"" actually be listed? What's the limitation?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/252
https://github.com/OpenGene/fastp/issues/253:32,performance,memor,memory,32,Looks like I didn't have enough memory after all. Bumped the memory and that seems to have solved the problem.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/253
https://github.com/OpenGene/fastp/issues/253:61,performance,memor,memory,61,Looks like I didn't have enough memory after all. Bumped the memory and that seems to have solved the problem.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/253
https://github.com/OpenGene/fastp/issues/253:32,usability,memor,memory,32,Looks like I didn't have enough memory after all. Bumped the memory and that seems to have solved the problem.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/253
https://github.com/OpenGene/fastp/issues/253:61,usability,memor,memory,61,Looks like I didn't have enough memory after all. Bumped the memory and that seems to have solved the problem.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/253
https://github.com/OpenGene/fastp/issues/254:59,energy efficiency,estimat,estimated,59,"Normally 18.64% duplication is ok. The duplication is just estimated, but not removed. I may develop a new feature to remove duplicated reads",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/254
https://github.com/OpenGene/fastp/issues/258:165,integrability,rout,routine,165,@sfchen Any thoughts on this reporting? I just ran into another case where this would be valuable (wrongly entered indices). A non-default if you're after speed for routine would be fine by me to add a counter and reporting.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/258
https://github.com/OpenGene/fastp/issues/259:155,deployability,updat,update,155,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:70,energy efficiency,adapt,adapters,70,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:132,energy efficiency,adapt,adapter,132,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:70,integrability,adapt,adapters,70,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:132,integrability,adapt,adapter,132,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:70,interoperability,adapt,adapters,70,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:132,interoperability,adapt,adapter,132,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:70,modifiability,adapt,adapters,70,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:132,modifiability,adapt,adapter,132,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:155,safety,updat,update,155,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:105,security,team,team,105,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:155,security,updat,update,155,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:25,usability,confirm,confirm,25,"After a search, I cannot confirm that these two sequences are BGI-Seq adapters. . I will contact BGI-Seq team to get their official adapter sequences, and update fastp as well.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:112,usability,confirm,confirm,112,"Great, thanks for your willingness to do this! BTW, out of curiosity, how did you check this / were not able to confirm?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:98,deployability,updat,update,98,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:114,deployability,releas,release,114,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:134,deployability,version,version,134,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:57,energy efficiency,adapt,adapter,57,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:57,integrability,adapt,adapter,57,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:75,integrability,coupl,couple,75,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:134,integrability,version,version,134,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:57,interoperability,adapt,adapter,57,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:57,modifiability,adapt,adapter,57,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:75,modifiability,coupl,couple,75,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:134,modifiability,version,version,134,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:98,safety,updat,update,98,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:29,security,team,team,29,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:98,security,updat,update,98,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:75,testability,coupl,couple,75,"I have got response from BGI team, they will send me the adapter list in a couple of days. I will update then and release a new fastp version.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:52,energy efficiency,adapt,adapter,52,Being curious: was the BGI team able to provide the adapter sequences?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:52,integrability,adapt,adapter,52,Being curious: was the BGI team able to provide the adapter sequences?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:52,interoperability,adapt,adapter,52,Being curious: was the BGI team able to provide the adapter sequences?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:52,modifiability,adapt,adapter,52,Being curious: was the BGI team able to provide the adapter sequences?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:27,security,team,team,27,Being curious: was the BGI team able to provide the adapter sequences?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:4,deployability,updat,update,4,Any update on this? I also just received my first BGISeq data.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:4,safety,updat,update,4,Any update on this? I also just received my first BGISeq data.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:4,security,updat,update,4,Any update on this? I also just received my first BGISeq data.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,deployability,updat,update,46,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:66,energy efficiency,adapt,adapter,66,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:66,integrability,adapt,adapter,66,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:66,interoperability,adapt,adapter,66,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:66,modifiability,adapt,adapter,66,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,safety,updat,update,46,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,security,updat,update,46,"Hi, I just got the sequences from MGI. I will update the built-in adapter sequences.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:269,deployability,build,build,269,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:19,energy efficiency,adapt,adapter,19,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,energy efficiency,adapt,adapters,50,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:123,energy efficiency,adapt,adapter,123,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:216,energy efficiency,adapt,adapter,216,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:19,integrability,adapt,adapter,19,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,integrability,adapt,adapters,50,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:123,integrability,adapt,adapter,123,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:216,integrability,adapt,adapter,216,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:19,interoperability,adapt,adapter,19,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,interoperability,adapt,adapters,50,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:123,interoperability,adapt,adapter,123,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:216,interoperability,adapt,adapter,216,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:19,modifiability,adapt,adapter,19,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,modifiability,adapt,adapters,50,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:123,modifiability,adapt,adapter,123,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:216,modifiability,adapt,adapter,216,"I just add MGI/BGI adapter sequences to the known adapters:. knownAdapters[""AAGTCGGAGGCCAAGCGGTCTTAGGAAGACAA""] = "">MGI/BGI adapter (forward)"";. knownAdapters[""AAGTCGGATCGTAGCCATGTCGTTCTGTGAGCCAAGGAGTTG""] = "">MGI/BGI adapter (reverse)"";. Could you please try the latest build, or use the latest prebuilt binary? If you can upload a small MGI/BGI data, I can also have a try.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:456,availability,sli,slightly,456,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,deployability,version,version,46,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:115,deployability,version,version,115,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:437,deployability,version,versions,437,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:619,deployability,fail,failed,619,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:655,deployability,fail,failed,655,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:690,deployability,fail,failed,690,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:724,deployability,fail,failed,724,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:222,energy efficiency,adapt,adapter,222,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:307,energy efficiency,adapt,adapters,307,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:544,energy efficiency,adapt,adapters,544,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:771,energy efficiency,adapt,adapter,771,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:818,energy efficiency,adapt,adapters,818,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:848,energy efficiency,Adapt,Adapter,848,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:903,energy efficiency,adapt,adapter,903,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:976,energy efficiency,Adapt,Adapter,976,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1031,energy efficiency,adapt,adapter,1031,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,integrability,version,version,46,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:115,integrability,version,version,115,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:222,integrability,adapt,adapter,222,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:307,integrability,adapt,adapters,307,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:437,integrability,version,versions,437,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:544,integrability,adapt,adapters,544,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:563,integrability,Filter,Filtering,563,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:595,integrability,filter,filter,595,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:771,integrability,adapt,adapter,771,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:818,integrability,adapt,adapters,818,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:848,integrability,Adapt,Adapter,848,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:903,integrability,adapt,adapter,903,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:976,integrability,Adapt,Adapter,976,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1031,integrability,adapt,adapter,1031,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:222,interoperability,adapt,adapter,222,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:307,interoperability,adapt,adapters,307,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:374,interoperability,specif,specifically,374,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:544,interoperability,adapt,adapters,544,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:771,interoperability,adapt,adapter,771,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:818,interoperability,adapt,adapters,818,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:848,interoperability,Adapt,Adapter,848,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:903,interoperability,adapt,adapter,903,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:976,interoperability,Adapt,Adapter,976,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1031,interoperability,adapt,adapter,1031,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:46,modifiability,version,version,46,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:115,modifiability,version,version,115,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:222,modifiability,adapt,adapter,222,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:307,modifiability,adapt,adapters,307,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:437,modifiability,version,versions,437,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:544,modifiability,adapt,adapters,544,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:771,modifiability,adapt,adapter,771,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:818,modifiability,adapt,adapters,818,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:848,modifiability,Adapt,Adapter,848,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:903,modifiability,adapt,adapter,903,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:976,modifiability,Adapt,Adapter,976,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1031,modifiability,adapt,adapter,1031,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:456,reliability,sli,slightly,456,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:619,reliability,fail,failed,619,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:655,reliability,fail,failed,655,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:690,reliability,fail,failed,690,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:724,reliability,fail,failed,724,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:742,safety,compl,complexity,742,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:886,safety,input,input,886,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1014,safety,input,input,1014,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:484,security,ident,identical,484,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:742,security,compl,complexity,742,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:886,usability,input,input,886,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1014,usability,input,input,1014,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:1109,usability,command,command,1109,"Sorry for my delayed reply. I used the latest version on Github (0.21), and compared the results obtained with the version before (0.20.1). To my surprise, both results were exactly the same. Is this expected, even though adapter trimming likely was done by BGI?? Still, I would have expected that some BGI adapters should have been found/trimmed, especially when these are specifically searched for. Thus that the results between the 2 versions should be slightly different, but not identical (at least for the number of `bases trimmed due to adapters`). . ```. Filtering result:. reads passed filter: 43562268. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads failed due to low complexity: 2182. reads with adapter trimmed: 2837340. bases trimmed due to adapters: 14182202. ```. ```. Adapter or bad ligation of read1. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. ```. Adapter or bad ligation of read2. The input has little adapter percentage (~0.217030%), probably it's trimmed before. ```. fastp run command:. `fastp --in1 ./TEST_IN/RNA-1/RNA-1_1.fq.gz --in2 ./TEST_IN/RNA-1/RNA-1_2.fq.gz --out1=./TEST_OUT/RNA-1/RNA-1_1.fq.gz --out2=./TEST_OUT/RNA-1/RNA-1_2.fq.gz --low_complexity_filter --thread=16 --json ./TEST_OUT/RNA-1/RNA-1.fastp.json --html ./TEST_OUT/RNA-1/RNA-1.fastp.html `",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,energy efficiency,adapt,adapters,50,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,energy efficiency,adapt,adapter,67,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,integrability,adapt,adapters,50,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,integrability,adapt,adapter,67,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,interoperability,adapt,adapters,50,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,interoperability,adapt,adapter,67,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:50,modifiability,adapt,adapters,50,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,modifiability,adapt,adapter,67,"Since your data is paired-end, fastp can trim the adapters without adapter sequence provided. So it already worked before.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:418,deployability,version,versions,418,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:65,energy efficiency,adapt,adapter,65,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:133,energy efficiency,adapt,adapter,133,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:290,energy efficiency,adapt,adapter,290,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:65,integrability,adapt,adapter,65,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:133,integrability,adapt,adapter,133,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:290,integrability,adapt,adapter,290,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:418,integrability,version,versions,418,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:65,interoperability,adapt,adapter,65,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:133,interoperability,adapt,adapter,133,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:290,interoperability,adapt,adapter,290,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:65,modifiability,adapt,adapter,65,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:133,modifiability,adapt,adapter,133,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:290,modifiability,adapt,adapter,290,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:418,modifiability,version,versions,418,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:87,safety,detect,detection,87,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:141,safety,detect,detection,141,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:298,safety,detect,detection,298,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:87,security,detect,detection,87,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:141,security,detect,detection,141,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:298,security,detect,detection,298,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:431,security,ident,identical,431,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:207,testability,understand,understand,207,"Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical...",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:420,deployability,version,versions,420,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,energy efficiency,adapt,adapter,67,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:135,energy efficiency,adapt,adapter,135,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:292,energy efficiency,adapt,adapter,292,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:651,energy efficiency,adapt,adapter,651,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:716,energy efficiency,adapt,adapters,716,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,integrability,adapt,adapter,67,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:135,integrability,adapt,adapter,135,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:292,integrability,adapt,adapter,292,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:420,integrability,version,versions,420,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:651,integrability,adapt,adapter,651,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:716,integrability,adapt,adapters,716,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,interoperability,adapt,adapter,67,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:135,interoperability,adapt,adapter,135,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:292,interoperability,adapt,adapter,292,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:651,interoperability,adapt,adapter,651,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:716,interoperability,adapt,adapters,716,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:778,interoperability,specif,specify,778,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:67,modifiability,adapt,adapter,67,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:135,modifiability,adapt,adapter,135,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:292,modifiability,adapt,adapter,292,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:420,modifiability,version,versions,420,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:651,modifiability,adapt,adapter,651,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:716,modifiability,adapt,adapters,716,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:89,safety,detect,detection,89,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:143,safety,detect,detection,143,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:300,safety,detect,detection,300,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:673,safety,detect,detection,673,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:89,security,detect,detection,89,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:143,security,detect,detection,143,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:300,security,detect,detection,300,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:433,security,ident,identical,433,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:673,security,detect,detection,673,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:209,testability,understand,understand,209,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/259:470,usability,command,command,470,"> Aha, I got it. I was a little confused; I assumed that since the adapter sequence auto-detection is disabled by default for PE data, adapter detection overlap analysis would also be disabled. However, I now understand that these are 2 separate processes, and that for PE data the latter (= adapter detection by per-read overlap analysis) is always occurring (and apparently cannot be disabled). Hence, results between versions are identical... above your ```fastp run command:``` had no ```--detect_adapter_for_pe```, becuase it default is turn off for your PE data, so it you got the same result for two runs(0.21 + 0.20.1) ? . ```For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/259
https://github.com/OpenGene/fastp/issues/260:17,usability,support,supported,17,"Hi, it's already supported in fastp. Please use `--reads_to_process` option",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/260
https://github.com/OpenGene/fastp/issues/260:17,usability,support,supported,17,"Hi, it's already supported in fastp. Please use `--reads_to_process` option",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/260
https://github.com/OpenGene/fastp/issues/266:57,energy efficiency,load,loaded,57,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:81,energy efficiency,reduc,reduce,81,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:15,performance,I/O,I/O,15,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:30,performance,bottleneck,bottleneck,30,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:57,performance,load,loaded,57,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:88,performance,I/O,I/O,88,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:92,performance,perform,performance,92,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:92,usability,perform,performance,92,make sure that I/O is not the bottleneck. NFS or heavily loaded file systems may reduce I/O performance drastically.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:149,deployability,observ,observe,149,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:45,energy efficiency,current,currently,45,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:204,integrability,pub,published,204,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:81,modifiability,scal,scalability,81,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:69,performance,perform,performance,69,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:81,performance,scalab,scalability,81,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:149,testability,observ,observe,149,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:69,usability,perform,performance,69,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/266:101,usability,tool,tool,101,"Hi,. I have recently started using fastp and currently exploring the performance scalability of this tool. I think this issue is a relevant point to observe, but benchmark data would nice if it's already published somewhere. Thanks in advance.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/266
https://github.com/OpenGene/fastp/issues/267:294,safety,except,exceptionally,294,"i saw this with metagenomes sequenced with both MiSeq 2 x 250 and 2 x 300 kits. Yes, I checked the template length on a Bioanalyzer before sequencing and size-selected for the appropriate length. In all cases the peak was EXACTLY 35 bp which is why I noticed it, in addition to this size being exceptionally small.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:189,integrability,filter,filtering,189,"Thank you, that's helpful. However, both OV080516 and OV091816 were sequenced with 600 cycles (2 X 300 bp PE) so the template length should be closer to 600. In fact, the mean length after filtering is ~255-275, which makes sense. But I still don't understand why the insert peak size is so small.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:249,testability,understand,understand,249,"Thank you, that's helpful. However, both OV080516 and OV091816 were sequenced with 600 cycles (2 X 300 bp PE) so the template length should be closer to 600. In fact, the mean length after filtering is ~255-275, which makes sense. But I still don't understand why the insert peak size is so small.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:18,usability,help,helpful,18,"Thank you, that's helpful. However, both OV080516 and OV091816 were sequenced with 600 cycles (2 X 300 bp PE) so the template length should be closer to 600. In fact, the mean length after filtering is ~255-275, which makes sense. But I still don't understand why the insert peak size is so small.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:143,usability,close,closer,143,"Thank you, that's helpful. However, both OV080516 and OV091816 were sequenced with 600 cycles (2 X 300 bp PE) so the template length should be closer to 600. In fact, the mean length after filtering is ~255-275, which makes sense. But I still don't understand why the insert peak size is so small.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:6,usability,close,closer,6,Sorry closer to 300 not 600.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:331,interoperability,bind,binding,331,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:456,interoperability,specif,specific,456,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:331,modifiability,bind,binding,331,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:359,safety,isol,isolating,359,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:253,security,sign,signature,253,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:359,security,iso,isolating,359,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:564,security,sign,significantly,564,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:359,testability,isol,isolating,359,"I hope it's not too disruptive adding to this old thread, but we have seen in our lab a still not fully explained 19bp insert size mode (when the median/mean are ~300 or as expected)- almost exclusively in human saliva preps. It appears to be microbial signature that maps to herpesvirus4, and is a short RNA with affinity for DNA binding. Have you attempted isolating some of these reads and seeing if they match to other organisms (or are piling up at a specific site in your critter, perhaps some region duplicated but compressed in the reference? or expressed significantly?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:237,integrability,filter,filtering,237,I have a similar data. I also have 0.1% of reads with insert size < 35bp%. but If the insert size is so small the reads should be trimmed to be as small and be discarded because I set min length of 75bp. Is the graph produced before the filtering or is there a problem in the filtering?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/267:276,integrability,filter,filtering,276,I have a similar data. I also have 0.1% of reads with insert size < 35bp%. but If the insert size is so small the reads should be trimmed to be as small and be discarded because I set min length of 75bp. Is the graph produced before the filtering or is there a problem in the filtering?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/267
https://github.com/OpenGene/fastp/issues/268:7,integrability,filter,filtering,7,+1 for filtering of whole read instead of trimming.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/268
https://github.com/OpenGene/fastp/issues/269:45,deployability,version,version,45,We are experiencing the same issue. My fastp version is v0.22.0. Not sure if this is as intended though.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/269
https://github.com/OpenGene/fastp/issues/269:45,integrability,version,version,45,We are experiencing the same issue. My fastp version is v0.22.0. Not sure if this is as intended though.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/269
https://github.com/OpenGene/fastp/issues/269:45,modifiability,version,version,45,We are experiencing the same issue. My fastp version is v0.22.0. Not sure if this is as intended though.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/269
https://github.com/OpenGene/fastp/issues/269:7,usability,experien,experiencing,7,We are experiencing the same issue. My fastp version is v0.22.0. Not sure if this is as intended though.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/269
https://github.com/OpenGene/fastp/issues/270:93,deployability,contain,containing,93,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:34,energy efficiency,adapt,adapter,34,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:85,energy efficiency,adapt,adapter,85,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:34,integrability,adapt,adapter,34,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:85,integrability,adapt,adapter,85,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:34,interoperability,adapt,adapter,34,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:85,interoperability,adapt,adapter,85,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:34,modifiability,adapt,adapter,34,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/270:85,modifiability,adapt,adapter,85,"The data are paired-end, with one adapter being the same in all reads, and the other adapter containing a combination of 4 different indices.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/270
https://github.com/OpenGene/fastp/issues/274:707,deployability,fail,failed,707,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:747,deployability,fail,failed,747,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:783,deployability,fail,failed,783,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:828,energy efficiency,adapt,adapter,828,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:875,energy efficiency,adapt,adapters,875,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:124,integrability,filter,filtering,124,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:259,integrability,filter,filtering,259,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:393,integrability,filter,filtering,393,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:530,integrability,filter,filtering,530,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:652,integrability,Filter,Filtering,652,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:684,integrability,filter,filter,684,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:828,integrability,adapt,adapter,828,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:875,integrability,adapt,adapters,875,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:828,interoperability,adapt,adapter,828,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:875,interoperability,adapt,adapters,875,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:828,modifiability,adapt,adapter,828,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:875,modifiability,adapt,adapters,875,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:1566,performance,time,time,1566,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:707,reliability,fail,failed,707,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:747,reliability,fail,failed,747,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/274:783,reliability,fail,failed,783,"I have also gotten reports like this for my data. Is there any insight into what could be happening here? ```. Read1 before filtering:. total reads: 1778364. total bases: 238806338. Q20 bases: 227824941(95.4015%). Q30 bases: 211900527(88.7332%). Read2 before filtering:. total reads: 1778364. total bases: 225444254. Q20 bases: 203841616(90.4177%). Q30 bases: 183846152(81.5484%). Read1 after filtering:. total reads: 1022353. total bases: 126318233. Q20 bases: 121175588(95.9288%). Q30 bases: 112747279(89.2565%). Read2 aftering filtering:. total reads: 1022353. total bases: 124441135. Q20 bases: 117016680(94.0338%). Q30 bases: 106349956(85.4621%). Filtering result:. reads passed filter: 2044706. reads failed due to low quality: 22264. reads failed due to too many N: 88. reads failed due to too short: 1489670. reads with adapter trimmed: 1985391. bases trimmed due to adapters: 103210714. Duplication rate: 39.327%. Insert size peak (evaluated by paired-end reads): 0. JSON report: ./YFTL_003_S2_L002_R1_001.json. HTML report: ./YFTL_003_S2_L002_R1_001.html. fastp --in1 ./YFTL_003_S2_L002_R1_001.F.fq.gz --in2 ./YFTL_003_S2_L002_R1_001.R.fq.gz --out1 ./YFTL_003_S2_L002_R1_001.R1.fq.gz --out2 ./YFTL_003_S2_L002_R1_001.R2.fq.gz --trim_poly_g --length_required 80 --cut_front --cut_tail --cut_window_size 5 --cut_mean_quality 15 -q 15 -u 50 -j ./YFTL_003_S2_L002_R1_001.json -h ./YFTL_003_S2_L002_R1_001.html --detect_adapter_for_pe --adapter_sequence=AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT . fastp v0.20.0, time used: 142 seconds. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/274
https://github.com/OpenGene/fastp/issues/275:80,integrability,filter,filtered,80,"Looks like without the adapter_fasta there were two additional reads were being filtered out due to quality. My guess is that by adding the adapter_fasta, those two reads that were originally filtered now have a mean quality score that exceeds the default threshold (20).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/275
https://github.com/OpenGene/fastp/issues/275:192,integrability,filter,filtered,192,"Looks like without the adapter_fasta there were two additional reads were being filtered out due to quality. My guess is that by adding the adapter_fasta, those two reads that were originally filtered now have a mean quality score that exceeds the default threshold (20).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/275
https://github.com/OpenGene/fastp/issues/278:36,deployability,contain,containing,36,"Can you reproduce with a FASTQ file containing the first read only? If so, can you share the output of passing that file through `od -c`?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/278
https://github.com/OpenGene/fastp/issues/278:83,interoperability,share,share,83,"Can you reproduce with a FASTQ file containing the first read only? If so, can you share the output of passing that file through `od -c`?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/278
https://github.com/OpenGene/fastp/issues/279:61,interoperability,platform,platform,61,"hi, @manuelsmendoza. could u try a workaround 1st on a Linux platform? ```. fastp -i R1.fa -o /dev/null . ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/279
https://github.com/OpenGene/fastp/issues/279:79,interoperability,specif,specify,79,"The `-o/-O` options are optional. If you only want the QC reports, just DO NOT specify `-o/-O`.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/279
https://github.com/OpenGene/fastp/issues/282:64,energy efficiency,adapt,adapterList,64,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:119,energy efficiency,adapt,adapterList,119,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:64,integrability,adapt,adapterList,64,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:119,integrability,adapt,adapterList,119,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:64,interoperability,adapt,adapterList,64,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:119,interoperability,adapt,adapterList,119,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:64,modifiability,adapt,adapterList,64,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/282:119,modifiability,adapt,adapterList,119,"Possible fix if my assumptions are correct? ```. for(int i=0; i<adapterList.size(); i++) {. if trimBySequence(r, NULL, adapterList[i], isR2, matchReq):. trimmed = true;. break;. }. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/282
https://github.com/OpenGene/fastp/issues/283:27,integrability,filter,filtering,27,"Sorry I mixed trimming and filtering, so filtering rate has no problem.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/283
https://github.com/OpenGene/fastp/issues/283:41,integrability,filter,filtering,41,"Sorry I mixed trimming and filtering, so filtering rate has no problem.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/283
https://github.com/OpenGene/fastp/pull/284:69,deployability,version,version,69,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:380,energy efficiency,charg,charging,380,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:69,integrability,version,version,69,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:314,integrability,messag,message,314,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:314,interoperability,messag,message,314,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:471,interoperability,platform,platform,471,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:69,modifiability,version,version,69,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:341,reliability,doe,does,341,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:453,reliability,doe,does,453,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:393,security,access,access,393,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/pull/284:524,security,Team,Teams,524,"Could you elaborate on the 'improvement'? What is wrong with the old version? Why run find to delete files from a directory if the whole directory is deleted *recursively* anyways just after that? Note that IMHO this should no only be explained in a comment here but also either in a comment comment or the commit message so the information does no get lost once Microsoft starts charging for access to GitHub, removes comments for political reasons or does to the whole platform whatever they did to Skype so now they push Teams instead while everyone is already using something else. :wink:",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/pull/284
https://github.com/OpenGene/fastp/issues/288:56,deployability,version,version,56,"fastp is a great package. Sorry for my ad. We have an R version of fastp named Rfastp, which is a wrap of fastp. . https://github.com/RockefellerUniversity/Rfastp. Rfastp can also be found in nightly built bioconductor.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:56,integrability,version,version,56,"fastp is a great package. Sorry for my ad. We have an R version of fastp named Rfastp, which is a wrap of fastp. . https://github.com/RockefellerUniversity/Rfastp. Rfastp can also be found in nightly built bioconductor.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:98,integrability,wrap,wrap,98,"fastp is a great package. Sorry for my ad. We have an R version of fastp named Rfastp, which is a wrap of fastp. . https://github.com/RockefellerUniversity/Rfastp. Rfastp can also be found in nightly built bioconductor.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:17,modifiability,pac,package,17,"fastp is a great package. Sorry for my ad. We have an R version of fastp named Rfastp, which is a wrap of fastp. . https://github.com/RockefellerUniversity/Rfastp. Rfastp can also be found in nightly built bioconductor.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:56,modifiability,version,version,56,"fastp is a great package. Sorry for my ad. We have an R version of fastp named Rfastp, which is a wrap of fastp. . https://github.com/RockefellerUniversity/Rfastp. Rfastp can also be found in nightly built bioconductor.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:18,usability,support,supported,18,@Roleren fastp is supported on Mac OS X. Actually it was first developed on my MacBook.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:94,deployability,toolchain,toolchains,94,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:124,deployability,version,version,124,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:217,deployability,Instal,InstalledDir,217,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:203,energy efficiency,model,model,203,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:124,integrability,version,version,124,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:124,modifiability,version,version,124,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:203,security,model,model,203,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:94,usability,tool,toolchains,94,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:250,usability,Command,CommandLineTools,250,"@Roleren could u try the latest code, I have just built on a macOS success with the following toolchains . ```. Apple clang version 11.0.3 (clang-1103.0.32.62). Target: x86_64-apple-darwin19.0.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. ```",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:191,deployability,version,version,191,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:225,deployability,version,version,225,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:191,integrability,version,version,191,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:225,integrability,version,version,225,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:191,modifiability,version,version,191,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:225,modifiability,version,version,225,"Sry for being unclear, I meant the pre-compiled binaries, since what I did was just to wget the precompiled binary and run that. But @cafeblue do you have some speed statistics to show the R version is still fast, then the R version will work even on windows I guess ?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:41,deployability,build,build,41,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:136,deployability,build,build,136,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:205,deployability,build,build,205,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:225,deployability,instal,install,225,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:191,integrability,sub,submodule,191,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:151,interoperability,platform,platform,151,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:240,modifiability,pac,package,240,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:103,usability,prefer,prefer,103,"@Roleren Pls check #287 #286 , fastp can build success cross win, Linux, macOS and arm Linux now, if u prefer a precompiled binary, pls build for each platform, or u can chose add fastp as a submodule and build in place when install your R package",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:131,modifiability,pac,package,131,"Oh, I did not know that, I see the PR is not merged yet with the info. Thanks for the heads up. Let me know more about the fastp R package run time statistics then I will close the issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:143,performance,time,time,143,"Oh, I did not know that, I see the PR is not merged yet with the info. Thanks for the heads up. Let me know more about the fastp R package run time statistics then I will close the issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:171,usability,close,close,171,"Oh, I did not know that, I see the PR is not merged yet with the info. Thanks for the heads up. Let me know more about the fastp R package run time statistics then I will close the issue.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:45,integrability,sub,submodule,45,@cafeblue @Roleren would u like add fastp as submodule in your own project and add your project link to fastp repo s readme let more people known? @sfchen what s your suggestion?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:206,interoperability,platform,platform,206,"@Roleren We did very little modification on fastp source code to generate Rfastp, theoretically, Rfastp runs as fast as fastp. We tested Rfastp on linux, MacOS and Windows, it works fine on all these three platform. . @KimBioInfoStudio Your suggestion sounds great! I will try to link Rfastp to fastp.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:130,safety,test,tested,130,"@Roleren We did very little modification on fastp source code to generate Rfastp, theoretically, Rfastp runs as fast as fastp. We tested Rfastp on linux, MacOS and Windows, it works fine on all these three platform. . @KimBioInfoStudio Your suggestion sounds great! I will try to link Rfastp to fastp.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:28,security,modif,modification,28,"@Roleren We did very little modification on fastp source code to generate Rfastp, theoretically, Rfastp runs as fast as fastp. We tested Rfastp on linux, MacOS and Windows, it works fine on all these three platform. . @KimBioInfoStudio Your suggestion sounds great! I will try to link Rfastp to fastp.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:130,testability,test,tested,130,"@Roleren We did very little modification on fastp source code to generate Rfastp, theoretically, Rfastp runs as fast as fastp. We tested Rfastp on linux, MacOS and Windows, it works fine on all these three platform. . @KimBioInfoStudio Your suggestion sounds great! I will try to link Rfastp to fastp.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:41,deployability,automat,automatized,41,"For now, I got it to work on mac (I just automatized for the user: wget fastp + unzip + make), until I figure a way to get STAR rna aligner to work on windows, there is no point for me to get fastp to work there. I will think about the submodule. . Thanks for the info, I will close this issue, I have the answers for my questions.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:236,integrability,sub,submodule,236,"For now, I got it to work on mac (I just automatized for the user: wget fastp + unzip + make), until I figure a way to get STAR rna aligner to work on windows, there is no point for me to get fastp to work there. I will think about the submodule. . Thanks for the info, I will close this issue, I have the answers for my questions.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:41,testability,automat,automatized,41,"For now, I got it to work on mac (I just automatized for the user: wget fastp + unzip + make), until I figure a way to get STAR rna aligner to work on windows, there is no point for me to get fastp to work there. I will think about the submodule. . Thanks for the info, I will close this issue, I have the answers for my questions.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:61,usability,user,user,61,"For now, I got it to work on mac (I just automatized for the user: wget fastp + unzip + make), until I figure a way to get STAR rna aligner to work on windows, there is no point for me to get fastp to work there. I will think about the submodule. . Thanks for the info, I will close this issue, I have the answers for my questions.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/288:277,usability,close,close,277,"For now, I got it to work on mac (I just automatized for the user: wget fastp + unzip + make), until I figure a way to get STAR rna aligner to work on windows, there is no point for me to get fastp to work there. I will think about the submodule. . Thanks for the info, I will close this issue, I have the answers for my questions.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/288
https://github.com/OpenGene/fastp/issues/289:152,availability,down,down,152,"I have observed fastp outputting reordered reads and also having singletons and pairs dissappear. When I have a chance, I'm going to see if I can track down where things are ending up.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:7,deployability,observ,observed,7,"I have observed fastp outputting reordered reads and also having singletons and pairs dissappear. When I have a chance, I'm going to see if I can track down where things are ending up.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:7,testability,observ,observed,7,"I have observed fastp outputting reordered reads and also having singletons and pairs dissappear. When I have a chance, I'm going to see if I can track down where things are ending up.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:4,usability,progress,progress,4,Any progress on this?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:74,integrability,filter,filters,74,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:172,integrability,filter,filtered,172,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:601,integrability,filter,filtered,601,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:711,integrability,filter,filters,711,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:496,interoperability,specif,specifically,496,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:742,usability,help,helps,742,"I thought I had the same issue, but realized that fastp has a few default filters that may adjust the final read count that isn't reported to `stdout`. The total number of filtered reads is written to the `fastp.json` file and there should be a region in that file that looks something like this:. ""filtering_result"": {. ""passed_filter_reads"": 23510872,. ""low_quality_reads"": 403262,. ""too_many_N_reads"": 660,. ""low_complexity_reads"": 11284,. ""too_short_reads"": 93178,. ""too_long_reads"": 0. }. I specifically ran fastp with the `--disable_length_filtering` flag but noticed that some reads were still filtered for being `too_short`. I believe fastp removes reads that have a read length of 0 after the trimming filters are applied. Hope this helps!",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:67,availability,down,down,67,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:611,availability,error,error,611,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:620,availability,down,downstream,620,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:611,performance,error,error,611,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:545,reliability,doe,does,545,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:160,safety,test,test,160,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:223,safety,test,test,223,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:315,safety,test,test,315,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:407,safety,test,test,407,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:611,safety,error,error,611,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:160,testability,test,test,160,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:223,testability,test,test,223,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:315,testability,test,test,315,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:407,testability,test,test,407,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:611,usability,error,error,611,"I am also getting this problem - but it is very difficult to track down why. Some read files lose paired read headers after fastp, e.g. zgrep -c ""@A00548"" filt-test/134512csiro_R1.fastq.gz. 3668110. zgrep -c ""@A00548"" filt-test/134512csiro_R2.fastq.gz. 3668110. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R1.fastq.gz. <blank>. zgrep ""@A00548:491:H5TT7DRX3:2:2154:7708:19883"" filt-test/134512csiro_R2.fastq.gz. @A00548:491:H5TT7DRX3:2:2154:7708:19883 2:N:0:GGACTTGG+CGTCTGCG. So both files are same length but a header does not match between R1 and R2. This problem came up through an error in downstream analysis.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:36,safety,input,input,36,btw both headers are present in the input files. If I try a test with jus those two reads it works fine.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:60,safety,test,test,60,btw both headers are present in the input files. If I try a test with jus those two reads it works fine.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:60,testability,test,test,60,btw both headers are present in the input files. If I try a test with jus those two reads it works fine.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:36,usability,input,input,36,btw both headers are present in the input files. If I try a test with jus those two reads it works fine.,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:106,performance,multi-thread,multi-threaded,106,"I have just re-run this on an HPC with much larger RAM and the problem has gone away. It was also running multi-threaded on many samples, so I suspect this was a memory issue. I cannot say how exactly it was fixed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:162,performance,memor,memory,162,"I have just re-run this on an HPC with much larger RAM and the problem has gone away. It was also running multi-threaded on many samples, so I suspect this was a memory issue. I cannot say how exactly it was fixed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:162,usability,memor,memory,162,"I have just re-run this on an HPC with much larger RAM and the problem has gone away. It was also running multi-threaded on many samples, so I suspect this was a memory issue. I cannot say how exactly it was fixed.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:157,availability,down,downstream,157,"Ignore the above. I have since found that the original read files had mismatched pairs, and as mentioned, fastp does not check this so the problem persisted downstream. I used bbtools repair.sh to fix it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:184,availability,repair,repair,184,"Ignore the above. I have since found that the original read files had mismatched pairs, and as mentioned, fastp does not check this so the problem persisted downstream. I used bbtools repair.sh to fix it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:70,interoperability,mismatch,mismatched,70,"Ignore the above. I have since found that the original read files had mismatched pairs, and as mentioned, fastp does not check this so the problem persisted downstream. I used bbtools repair.sh to fix it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:112,reliability,doe,does,112,"Ignore the above. I have since found that the original read files had mismatched pairs, and as mentioned, fastp does not check this so the problem persisted downstream. I used bbtools repair.sh to fix it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/289:184,reliability,repair,repair,184,"Ignore the above. I have since found that the original read files had mismatched pairs, and as mentioned, fastp does not check this so the problem persisted downstream. I used bbtools repair.sh to fix it.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/289
https://github.com/OpenGene/fastp/issues/290:87,modifiability,paramet,parameters,87,@sfchen . Fastqc (Trimmed) refers to the output of Fastp which I ran only with default parameters. Sorry for the confusion. Has anyone else seen the same discrepancy between Fastqc and Fastp?,MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:78,integrability,filter,filtered,78,"@sfchen . Multiqc says that the Fastp duplication rate was calculated on the ""filtered"" reads which I understand as the reads outputted by Fastp. Am I understanding something wrong or is this misleading description in Multiqc? ![image](https://user-images.githubusercontent.com/94687/94776326-d611e300-03c1-11eb-9626-f37351dd945c.png). I also checked the Fastqc duplication rate in the original (raw) data and it corresponds almost exactly with the Fastqc duplication rate after Fastp processing. ![tableScatterPlot (1)](https://user-images.githubusercontent.com/94687/94776818-b29b6800-03c2-11eb-917a-835f1b4d759a.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:102,testability,understand,understand,102,"@sfchen . Multiqc says that the Fastp duplication rate was calculated on the ""filtered"" reads which I understand as the reads outputted by Fastp. Am I understanding something wrong or is this misleading description in Multiqc? ![image](https://user-images.githubusercontent.com/94687/94776326-d611e300-03c1-11eb-9626-f37351dd945c.png). I also checked the Fastqc duplication rate in the original (raw) data and it corresponds almost exactly with the Fastqc duplication rate after Fastp processing. ![tableScatterPlot (1)](https://user-images.githubusercontent.com/94687/94776818-b29b6800-03c2-11eb-917a-835f1b4d759a.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:151,testability,understand,understanding,151,"@sfchen . Multiqc says that the Fastp duplication rate was calculated on the ""filtered"" reads which I understand as the reads outputted by Fastp. Am I understanding something wrong or is this misleading description in Multiqc? ![image](https://user-images.githubusercontent.com/94687/94776326-d611e300-03c1-11eb-9626-f37351dd945c.png). I also checked the Fastqc duplication rate in the original (raw) data and it corresponds almost exactly with the Fastqc duplication rate after Fastp processing. ![tableScatterPlot (1)](https://user-images.githubusercontent.com/94687/94776818-b29b6800-03c2-11eb-917a-835f1b4d759a.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:244,usability,user,user-images,244,"@sfchen . Multiqc says that the Fastp duplication rate was calculated on the ""filtered"" reads which I understand as the reads outputted by Fastp. Am I understanding something wrong or is this misleading description in Multiqc? ![image](https://user-images.githubusercontent.com/94687/94776326-d611e300-03c1-11eb-9626-f37351dd945c.png). I also checked the Fastqc duplication rate in the original (raw) data and it corresponds almost exactly with the Fastqc duplication rate after Fastp processing. ![tableScatterPlot (1)](https://user-images.githubusercontent.com/94687/94776818-b29b6800-03c2-11eb-917a-835f1b4d759a.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:529,usability,user,user-images,529,"@sfchen . Multiqc says that the Fastp duplication rate was calculated on the ""filtered"" reads which I understand as the reads outputted by Fastp. Am I understanding something wrong or is this misleading description in Multiqc? ![image](https://user-images.githubusercontent.com/94687/94776326-d611e300-03c1-11eb-9626-f37351dd945c.png). I also checked the Fastqc duplication rate in the original (raw) data and it corresponds almost exactly with the Fastqc duplication rate after Fastp processing. ![tableScatterPlot (1)](https://user-images.githubusercontent.com/94687/94776818-b29b6800-03c2-11eb-917a-835f1b4d759a.png).",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:614,deployability,fail,failed,614,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:650,deployability,fail,failed,650,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:685,deployability,fail,failed,685,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:236,energy efficiency,adapt,adapter,236,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:269,energy efficiency,adapt,adapter,269,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:724,energy efficiency,adapt,adapter,724,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:765,energy efficiency,adapt,adapters,765,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:236,integrability,adapt,adapter,236,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:269,integrability,adapt,adapter,269,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:310,integrability,filter,filtering,310,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:440,integrability,filter,filtering,440,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:558,integrability,Filter,Filtering,558,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:590,integrability,filter,filter,590,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:724,integrability,adapt,adapter,724,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:765,integrability,adapt,adapters,765,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:236,interoperability,adapt,adapter,236,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:269,interoperability,adapt,adapter,269,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:724,interoperability,adapt,adapter,724,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:765,interoperability,adapt,adapters,765,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:236,modifiability,adapt,adapter,236,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:269,modifiability,adapt,adapter,269,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:724,modifiability,adapt,adapter,724,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:765,modifiability,adapt,adapters,765,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:965,performance,time,time,965,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:614,reliability,fail,failed,614,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:650,reliability,fail,failed,650,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:685,reliability,fail,failed,685,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:189,safety,test,test,189,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:226,safety,Detect,Detecting,226,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:277,safety,detect,detected,277,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:913,safety,test,test,913,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:1021,safety,input,input,1021,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:1073,safety,test,test,1073,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:156,security,sign,significantly,156,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:226,security,Detect,Detecting,226,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:277,security,detect,detected,277,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:189,testability,test,test,189,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:913,testability,test,test,913,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:1073,testability,test,test,1073,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:1021,usability,input,input,1021,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/290:1226,usability,user,user-images,1226,"Hi,. I am using this issue as I am facing a similar problem. For SE reads the duplication rates reported by fastp and FastQC (on the same raw reads) differ significantly:. ```. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . Detecting adapter sequence for read1... No adapter detected for read1. Read1 before filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Read1 after filtering:. total reads: 20271682. total bases: 3040752300. Q20 bases: 3040752300(100%). Q30 bases: 3040752300(100%). Filtering result:. reads passed filter: 20271682. reads failed due to low quality: 0. reads failed due to too many N: 0. reads failed due to too short: 0. reads with adapter trimmed: 0. bases trimmed due to adapters: 0. Duplication rate (may be overestimated since this is SE data): 3.83467%. JSON report: fastp.json. HTML report: fastp.html. fastp --in1 test.fq.gz --out1 test_fastp.fq.gz . fastp v0.23.1, time used: 114 seconds. ```. Running FastQC on the same input file I get the following result:. ```. fastqc test.fq.gz -o qc/. ```. [test_fastqc.zip](https://github.com/OpenGene/fastp/files/7685942/test_fastqc.zip). ![Screenshot 2021-12-09 at 15 46 16](https://user-images.githubusercontent.com/5286476/145418012-ccfda196-bee0-4953-a72d-1a9bfb441c6a.png). Any ideas?",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/290
https://github.com/OpenGene/fastp/issues/295:355,availability,failur,failure,355,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:894,availability,sli,sliding,894,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:962,availability,sli,sliding,962,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1086,availability,sli,sliding,1086,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1220,availability,failur,failure,1220,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:333,deployability,fail,failed,333,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:355,deployability,fail,failure,355,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1220,deployability,fail,failure,1220,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1446,deployability,fail,failed,1446,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:61,integrability,filter,filtered,61,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:104,integrability,filter,filtering,104,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1368,integrability,filter,filtering,1368,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1611,integrability,filter,filterings,1611,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1759,integrability,filter,filtering,1759,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:279,interoperability,specif,specified,279,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:978,interoperability,specif,specifically,978,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:355,performance,failur,failure,355,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:882,performance,perform,perform,882,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
https://github.com/OpenGene/fastp/issues/295:1220,performance,failur,failure,1220,"Hi @uros-sipetic . That's probably because those reads being filtered with `failed_too_short` even with filtering options disabled, were actually fully trimmed from the 5' end, due to low base quality at the first four bases. I used to get confused by this, too. However, when I specified the `--failed_out` option and look into the failed reads with the failure reason `failed_too_short`, I noticed that all that kind of reads have very low `base quality` at the first four reads on 5' end, as below:. ```. @SRR10260015.759 D00562:262:C9G0HANXX:4:2213:8841:2053/2 failed_too_short. TTGAAGAGAATTTTTGTTGGGGTTTTGTGAAAATATTTTATATTTAATAAAAAAAAAAAATAAAAATCCTAGGGGATTGTTAAATCAACCCCCCTCCCTCTCTTATTTTTTTTTTTATATTTTAT. +. 333001111111111/11;0/////011111:1:1<111111111111?<@1CEG<////00=:000000000<///00><0000;0000..8..:.:...9/:////66C..C.8.///6////. ```. Unfortunately, if you also choose to perform the sliding window cutting by evaluating the mean quality scores in the sliding window, specifically by using `-r, --cut_right`, the whole sequence will be dropped from its 5' end, as the default sliding window size is four, and the default mean quality value for each window is 20. . Just it could be confusing to label the same failure reason for reads that are too short after trimming (more than 1 nt), as well as reads that are fully discarded after trimming. Also default filtering of the latter kind of reads is not reported in the stderr as 'reads failed due to too short: xxx', which raises inconsistency between the txt summary and html report, as well as confusions like 'how could I miss those reads since no filterings have been performed?'. . Thus, @sfchen, I recommend some improvements on this. Either more detailed description of this potential length filtering in readme.md, or in the report could be very helpful.",MatchSource.ISSUE_COMMENT,OpenGene,fastp,v0.23.4,,https://github.com/OpenGene/fastp/issues/295
