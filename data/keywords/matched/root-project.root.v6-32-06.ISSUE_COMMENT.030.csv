id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/6762:23,usability,error,error,23,"@lmoneta I changed the error to a warning, I hope we can merge now. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6762
https://github.com/root-project/root/pull/6762:11,deployability,build,build,11,@phsft-bot build with flags -Dminuit2=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6762
https://github.com/root-project/root/issues/6764:126,energy efficiency,cloud,cloudpickle,126,Assigning low priority at least for now as it looks like we have a workaround and we anyway need to see if things move on the cloudpickle side.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:282,deployability,automat,automatically,282,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:31,energy efficiency,cloud,cloudpickle,31,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:94,energy efficiency,cloud,cloudpipe,94,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:104,energy efficiency,cloud,cloudpickle,104,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:361,energy efficiency,cloud,cloudpickle,361,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:429,energy efficiency,load,loads,429,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:469,energy efficiency,load,loads,469,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:429,performance,load,loads,429,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:469,performance,load,loads,469,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:247,reliability,pra,practically,247,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:259,reliability,doe,does,259,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:282,testability,automat,automatically,282,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6764:194,usability,custom,custom,194,"There has been discussion on a cloudpickle issue very similar to this one, https://github.com/cloudpipe/cloudpickle/issues/405 . In that issue they suggest a fix/workaround, that is to define a custom `__reduce__` method for the facade class that practically does the `import ROOT` automatically. I tried it with this reproducer. ```python. import ROOT. import cloudpickle as pickle. def foo():. return ROOT.TH1F(). print(pickle.loads(pickle.dumps(foo))). print(pickle.loads(pickle.dumps(foo()))). ```. and it works. ```. $ python cloudpickle_root_th1f.py . <function foo at 0x7f76c62679d0>. Name: Title: NbinsX: 1. ```. I have opened a draft PR related to this issue to show the fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6764
https://github.com/root-project/root/issues/6765:22,deployability,stack,stacktrace,22,> I got the following stacktrace:. is that the full stacktrace? It starts with `_PyImport_LoadDynamicModuleWithSpec ()`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:52,deployability,stack,stacktrace,52,> I got the following stacktrace:. is that the full stacktrace? It starts with `_PyImport_LoadDynamicModuleWithSpec ()`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:22,deployability,stack,stacktrace,22,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:146,deployability,stack,stacktrace,146,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:157,deployability,log,log,157,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:213,deployability,stack,stacktrace,213,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:224,deployability,log,log,224,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:43,reliability,doe,does,43,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:157,safety,log,log,157,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:224,safety,log,log,224,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:157,security,log,log,157,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:224,security,log,log,224,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:157,testability,log,log,157,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:224,testability,log,log,224,"You can find the full stacktrace below. It does not start with `_PyImport_LoadDynamicModuleWithSpec`, but it's the entrypoint to `libpython.so`. [stacktrace.log](https://github.com/root-project/root/files/5501224/stacktrace.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:113,usability,User,UserWarning,113,The py3.8 warnings are also quite interesting:. ```. /usr/lib/python3.8/multiprocessing/resource_tracker.py:216: UserWarning: resource_tracker: There appear to be 24 leaked semaphore objects to clean up at shutdown. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:249,availability,cluster,cluster,249,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:291,availability,cluster,cluster,291,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:8,deployability,observ,observation,8,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:249,deployability,cluster,cluster,249,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:291,deployability,cluster,cluster,291,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:118,interoperability,distribut,distributed,118,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:428,safety,hot,hot,428,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:8,testability,observ,observation,8,"Another observation, it's not related to RDataFrame but it's a thingy with ROOT objects itself:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). if __name__ == '__main__':. main(). ```. Same problem as before. My hot guess is that some reference counting goes terribly wrong if the result is put in a tuple and not returned as a single object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,availability,error,error,101,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:384,availability,cluster,cluster,384,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:426,availability,cluster,cluster,426,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:384,deployability,cluster,cluster,384,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:426,deployability,cluster,cluster,426,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:774,deployability,modul,module,774,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:581,energy efficiency,current,current,581,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:266,interoperability,distribut,distributed,266,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:774,modifiability,modul,module,774,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,performance,error,error,101,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,safety,error,error,101,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:774,safety,modul,module,774,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,usability,error,error,101,"Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in `foo`. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). ```. ```. RuntimeError: . An attempt has been made to start a new process before the. current process has finished its bootstrapping phase. This probably means that you are not using fork to start your. child processes and you have forgotten to use the proper idiom. in the main module:. if __name__ == '__main__':. freeze_support(). ... The ""freeze_support()"" line can be omitted if the program. is not going to be frozen to produce an executable. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:209,availability,cluster,cluster,209,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:251,availability,cluster,cluster,251,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:408,availability,error,error,408,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:209,deployability,cluster,cluster,209,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:251,deployability,cluster,cluster,251,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:78,interoperability,distribut,distributed,78,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:408,performance,error,error,408,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:436,reliability,doe,does,436,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:408,safety,error,error,408,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:408,usability,error,error,408,"And we can combine both issues with the following code:. ```python. from dask.distributed import Client, LocalCluster. def foo(n):. import ROOT. h1 = ROOT.TH1F(). h2 = ROOT.TH1F(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(foo, range(4)). client.gather(future). # If we do this: Segfault. if __name__ == '__main__':. main(). # If we do that: Runtime error. main(). ```. So dask does some weird import of the script itself in the worker processes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:734,deployability,stack,stacktrace,734,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1978,deployability,stack,stacktrace,1978,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1989,deployability,log,log,1989,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:2045,deployability,stack,stacktrace,2045,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:2056,deployability,log,log,2056,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:52,energy efficiency,cloud,cloudpickle,52,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:502,energy efficiency,load,load,502,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1267,energy efficiency,alloc,alloc,1267,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1487,energy efficiency,optim,optimized,1487,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:106,interoperability,distribut,distributed,106,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:356,interoperability,Distribut,Distribute,356,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:950,interoperability,bind,bindings,950,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:985,interoperability,Prox,ProxyWrappers,985,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1100,interoperability,bind,bindings,1100,"e distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1135,interoperability,Prox,ProxyWrappers,1135,"le. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1194,interoperability,Bind,BindCppObjectNoCast,1194,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1348,interoperability,bind,bindings,1348,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1383,interoperability,Prox,ProxyWrappers,1383,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1562,interoperability,bind,bindings,1562,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1668,interoperability,bind,bindings,1668,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1815,interoperability,bind,bindings,1815,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:950,modifiability,bind,bindings,950,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1100,modifiability,bind,bindings,1100,"e distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1194,modifiability,Bind,BindCppObjectNoCast,1194,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1348,modifiability,bind,bindings,1348,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1562,modifiability,bind,bindings,1562,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1668,modifiability,bind,bindings,1668,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1815,modifiability,bind,bindings,1815,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:502,performance,load,load,502,"Alright, here is a full reproducer without dask and cloudpickle:. ```python. # Pickle the payload for the distributed computation. import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1487,performance,optimiz,optimized,1487,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1989,safety,log,log,1989,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:2056,safety,log,log,2056,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1989,security,log,log,1989,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:2056,security,log,log,2056,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:1989,testability,log,log,1989,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:2056,testability,log,log,2056,"OT # Works fine if we have ROOT imported outside of foo. def foo(n):. import ROOT # Breaks if we import ROOT inside foo. return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:. pickle.dump(foo, pkl). # Distribute the payload among workers. from multiprocessing import Pool. def payload(n):. with open('p.pkl', 'rb') as pkl:. foo_unpickled = pickle.load(pkl). return foo_unpickled(n). with Pool(4) as p:. print(p.map(payload, range(4))). ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```. #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459. #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656. #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494. #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass. entry=3, flags=flags. entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809. #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39. #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59. #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150. #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0. ```. [stacktrace.log](https://github.com/root-project/root/files/5501316/stacktrace.log). Edit: One more detail: We have to return a ROOT object in `foo`, so it's not the plain import.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:66,energy efficiency,cloud,cloudpickle,66,"This is now problematic, since the workaround for the issues with cloudpickle are exactly to move `import ROOT` **inside** the pickled payload (here `foo`). See #6764!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:87,deployability,version,version,87,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:99,deployability,version,versions,99,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:115,deployability,instal,installed,115,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:87,integrability,version,version,87,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:99,integrability,version,versions,99,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:20,interoperability,share,share,20,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:87,modifiability,version,version,87,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:99,modifiability,version,versions,99,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:125,modifiability,pac,packages,125,@vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:360,availability,error,error,360,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:360,performance,error,error,360,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:360,safety,error,error,360,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:521,safety,compl,completely,521,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:521,security,compl,completely,521,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:360,usability,error,error,360,"@stwunsch . > The py3.8 warnings are also quite interesting:. I think those are just a consequence of the crash? > it's not related to RDataFrame but it's a thingy with ROOT objects itself. Good! Can you edit the issue title/description accordingly please? > Also weird, if i move the dask part out of the main function into the global scope, we get a runtime error about not properly spawned processes in the multiprocessing backend. This is independent of the number of returned ROOT objects in foo. This sounds like a completely different issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:683,availability,cluster,cluster,683,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:725,availability,cluster,cluster,725,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:138,deployability,stack,stacktrace,138,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:683,deployability,cluster,cluster,683,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:725,deployability,cluster,cluster,725,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:454,interoperability,distribut,distributed,454,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:372,reliability,doe,does,372,"> So pickling a function with import ROOT in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. That pickle-only reproducer tickled me, because it shows the problem is in reading ROOT stuff back in a process/python interpreter that has never imported ROOT. So...how about having ROOT inside _and_ outside the payload, does that crash for you? It works fine for me:. ```python. import ROOT. from dask.distributed import Client, LocalCluster. def fill_histo(n):. import ROOT. df = ROOT.RDataFrame(10). h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(). h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(). return h1, h2. def main():. cluster = LocalCluster(). client = Client(cluster). future = client.map(fill_histo, (1,2,3,4)). print(client.gather(future)). if __name__ == '__main__':. main(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:244,deployability,modul,modules,244,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:341,deployability,modul,modules,341,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:203,integrability,contract,contracts,203,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:203,interoperability,contract,contracts,203,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:244,modifiability,modul,modules,244,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:341,modifiability,modul,modules,341,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:244,safety,modul,modules,244,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:341,safety,modul,modules,341,"You said here a clever thing, indeed, the issue could be that in the unpickling ROOT is not properly imported and therefore we have a nullptr for `TROOT`. A good starting point could be figuring out the contracts of pickle how (or whether) the modules are imported if objects are unpickled. I think there could be similar issues with Python modules using native code and that way we could get an idea what is going on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:89,deployability,version,version,89,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,deployability,version,versions,101,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:117,deployability,instal,installed,117,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:393,energy efficiency,cloud,cloudpickle,393,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:89,integrability,version,version,89,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,integrability,version,versions,101,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:22,interoperability,share,share,22,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:372,interoperability,distribut,distributed,372,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:89,modifiability,version,version,89,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:101,modifiability,version,versions,101,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:127,modifiability,pac,packages,127,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:226,usability,confirm,confirm,226,"> @vepadulano can you share the details of your python environment (in particular python version and versions of the installed packages) in which the original repro works correctly please? Hi, sorry for jumping in only now! I confirm I can run the original reproducer on my laptop with this environment:. ROOT master@v6-23-01-1676-g39169dfc7b. Python 3.8.6. dask==2.30.0. distributed==2.30.1. cloudpickle==1.6.0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:316,energy efficiency,cloud,cloudpickle,316,"Other differences may be specific to our OS (I'm on Fedora), but I wouldn't know what else could influence the difference in our results. I'm just running the following two reproducers:. [first comment, reproducer with RDF](https://github.com/root-project/root/issues/6765#issue-737618503). [reproducer without RDF, cloudpickle and dask](https://github.com/root-project/root/issues/6765#issuecomment-723066118). About the second reproducer I can also run it fine if I only import ROOT in the global scope and not in the function, e.g. ```. import ROOT. def foo(n):. # import ROOT. return ROOT.TH1F(). ```. I'm as confused as you are :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:25,interoperability,specif,specific,25,"Other differences may be specific to our OS (I'm on Fedora), but I wouldn't know what else could influence the difference in our results. I'm just running the following two reproducers:. [first comment, reproducer with RDF](https://github.com/root-project/root/issues/6765#issue-737618503). [reproducer without RDF, cloudpickle and dask](https://github.com/root-project/root/issues/6765#issuecomment-723066118). About the second reproducer I can also run it fine if I only import ROOT in the global scope and not in the function, e.g. ```. import ROOT. def foo(n):. # import ROOT. return ROOT.TH1F(). ```. I'm as confused as you are :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:79,deployability,build,build,79,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:305,deployability,modul,module,305,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:419,integrability,contract,contracts,419,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:419,interoperability,contract,contracts,419,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:305,modifiability,modul,module,305,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:305,safety,modul,module,305,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:24,security,hack,hack,24,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:333,security,access,accessing,333,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:452,usability,clear,clear,452,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:72,testability,understand,understands,72,"Assigning to Enric after discussion with Stefan -- we need someone that understands the ROOT -> cppyy import chain:. in the forked process, it looks like ROOT is re-imported (or at least it's there) but cppyy is not (that's what causes the crash), and we don't know why.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:579,deployability,modul,module,579,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:731,energy efficiency,current,current,731,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:886,energy efficiency,current,current,886,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:569,modifiability,extens,extension,569,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:579,modifiability,modul,module,579,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:579,safety,modul,module,579,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:905,usability,confirm,confirm,905,"@stwunsch @eguiraud @vepadulano I believe this is the same issue as the one reported here https://github.com/root-project/root/issues/6552 . In short, there was a crash when unpickling a ROOT object without importing ROOT first. The problem is described here: https://github.com/root-project/root/issues/6552#issuecomment-710038856 . I already merged a fix in master for this: https://github.com/root-project/root/commit/c4077aa864b26c7bc93f968563d303f3ad3779d7 . The fix is similar to what @stwunsch proposed in #6843, but note how it is enough to import the libcppyy extension module and not cppyy itself. I ran the pickle-only reproducer of @stwunsch https://github.com/root-project/root/issues/6765#issuecomment-723066118 with current master (which includes my fix) and did not see the crash. I noticed that #6843 did not include my changes, so @stwunsch could you do a rebase with current master and confirm that this has already been fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:138,availability,Ping,Ping,138,"@etejedor Thanks for pointing this out! Indeed, with current master and the fix in commit `c4077aa` all reproducers above work. @maxgalli Ping :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:53,energy efficiency,current,current,53,"@etejedor Thanks for pointing this out! Indeed, with current master and the fix in commit `c4077aa` all reproducers above work. @maxgalli Ping :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:187,deployability,version,versions,187,"Thanks @etejedor ! Since it was a bug affecting distributed computing environments too I'd like to document it explicitly in the next realease notes, maybe even backport it to older ROOT versions? What do you guys think @eguiraud @stwunsch ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:187,integrability,version,versions,187,"Thanks @etejedor ! Since it was a bug affecting distributed computing environments too I'd like to document it explicitly in the next realease notes, maybe even backport it to older ROOT versions? What do you guys think @eguiraud @stwunsch ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:48,interoperability,distribut,distributed,48,"Thanks @etejedor ! Since it was a bug affecting distributed computing environments too I'd like to document it explicitly in the next realease notes, maybe even backport it to older ROOT versions? What do you guys think @eguiraud @stwunsch ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:187,modifiability,version,versions,187,"Thanks @etejedor ! Since it was a bug affecting distributed computing environments too I'd like to document it explicitly in the next realease notes, maybe even backport it to older ROOT versions? What do you guys think @eguiraud @stwunsch ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/issues/6765:99,usability,document,document,99,"Thanks @etejedor ! Since it was a bug affecting distributed computing environments too I'd like to document it explicitly in the next realease notes, maybe even backport it to older ROOT versions? What do you guys think @eguiraud @stwunsch ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6765
https://github.com/root-project/root/pull/6766:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6766
https://github.com/root-project/root/pull/6766:45,usability,close,close,45,"I discussed with @oshadura, and it's okay to close this outdated PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6766
https://github.com/root-project/root/pull/6768:0,safety,Test,Test,0,Test coming in separate PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:0,testability,Test,Test,0,Test coming in separate PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:0,availability,error,errors,0,errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:0,performance,error,errors,0,errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:0,safety,error,errors,0,errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6768:0,usability,error,errors,0,errors are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6768
https://github.com/root-project/root/pull/6769:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6769
https://github.com/root-project/root/pull/6769:0,availability,Error,Error,0,Error is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6769
https://github.com/root-project/root/pull/6769:0,performance,Error,Error,0,Error is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6769
https://github.com/root-project/root/pull/6769:0,safety,Error,Error,0,Error is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6769
https://github.com/root-project/root/pull/6769:0,usability,Error,Error,0,Error is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6769
https://github.com/root-project/root/pull/6770:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:25,availability,failur,failures,25,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:25,deployability,fail,failures,25,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:44,deployability,infrastructur,infrastructure,44,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:73,deployability,fail,fails,73,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:25,performance,failur,failures,25,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:25,reliability,fail,failures,25,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:73,reliability,fail,fails,73,Looks like we one of the failures is due to infrastructure and the other fails elsewhere too.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:0,availability,ping,ping,0,ping...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:17,availability,ping,pinging,17,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:66,availability,ping,ping,66,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:129,deployability,releas,release,129,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:107,safety,review,review,107,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:107,testability,review,review,107,I suppose you're pinging me here? It's of much greater success to ping me during work days :-) I'll try to review this week; the release needs to go first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:21,safety,review,review,21,There is not much to review here but ok.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:21,testability,review,review,21,There is not much to review here but ok.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:15,safety,review,review,15,Looks like the review by @oshadura missed a removed code branch. Was that removed intentionally?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/pull/6770:15,testability,review,review,15,Looks like the review by @oshadura missed a removed code branch. Was that removed intentionally?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6770
https://github.com/root-project/root/issues/6771:81,reliability,doe,does,81,"Hi @alexde-dev ,. first of all thank you for taking the initiative on this. What does ""create and implement a unique mime-type"" entail, concretely?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:211,deployability,manag,manages,211,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:211,energy efficiency,manag,manages,211,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:57,interoperability,registr,registration,57,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:172,interoperability,share,share,172,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:223,interoperability,distribut,distribution,223,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:211,safety,manag,manages,211,"Hi @alexde-dev and @eguiraud,. I guess that, besides the registration of the MIME type, it basically requires an adding an entry to the MIME magic file (typically on `/usr/share/mime/magic`). Not sure about who manages the distribution of this file, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:196,safety,review,reviewed,196,"Great to see that there's interest from your side side, even it's not high priority. . Do you know if the first 12 bytes in the .root files could be used as a magic for matching? The root files I reviewed started with only either one of these two chunks:. ```. r o o t . 72 6F 6F 74 00 00 ED E7 00 00 00 64. 72 6F 6F 74 00 00 F1 68 00 00 00 64. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:196,testability,review,reviewed,196,"Great to see that there's interest from your side side, even it's not high priority. . Do you know if the first 12 bytes in the .root files could be used as a magic for matching? The root files I reviewed started with only either one of these two chunks:. ```. r o o t . 72 6F 6F 74 00 00 ED E7 00 00 00 64. 72 6F 6F 74 00 00 F1 68 00 00 00 64. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:494,integrability,sub,submitted,494,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:16,interoperability,share,shared-mime-info,16,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:52,interoperability,registr,registry,52,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:349,safety,detect,detected,349,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:451,safety,compl,completely,451,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:349,security,detect,detected,349,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:451,security,compl,completely,451,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:578,security,sign,signature,578,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:71,usability,Prefer,Preferably,71,"Freedesktop.org shared-mime-info is not a mime type registry, IANA is. Preferably, a media-type is [registered with IANA](https://www.iana.org/form/media-types) first. Someone from ROOT/Cern should register e.g. `application/x+cern-root` with IANA. Desktop environments don´t use the `file` utility, but FDOs smi DB. If one wants `root` files to be detected properly, a useful match has to be registered with FDO. `file`s match DB and FDOs DB are two completely separate entities. The match as submitted to FDO orignally is not very useful, as it is too generic:. 1. The ""root"" signature **must** be a offset 0, not in the range 0:64. This would match too many plain ASCII files. 2. The binary nature of the `fVersion` and `fBegin` fields can be used to distinguish ROOT files from ASCII files:. * `fVersion` is `<major>*10000 + <minor>*100 + <micro> + <large_file:1e6>`, thus something very likely < 2 million, and definitely < 16.7 million (2^24). The MSB of fVersion can be assumed to be 0x00 always. * `fBEGIN` is also very likely a very small value, in the examples above 0x64, i.e. we have another 2-3 zero bytes. If the first record is guaranteed _to be aligned_ to at least 4 bytes, we can also match with `fBEGIN | 0x3 == 0`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:181,availability,slo,sloppy,181,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:198,availability,echo,echo,198,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:377,deployability,version,version,377,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:377,integrability,version,version,377,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:377,modifiability,version,version,377,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:181,reliability,slo,sloppy,181,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:344,reliability,doe,does,344,"Unfortunately, nothing has happened here during the last 2 years. Has anyone from CERN or the ROOT project registered a mime type with IANA? BTW, the magic match of `file` is quite sloppy:. ```. $> echo -e 'root\x00' > root.txt ; file root.txt. root.txt: ROOT file. $> file --mime-type ./root.txt. ./root.txt: application/octet-stream. ```. It does not even require a non-zero version field, or the existance of the fBEGIN field.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:15,availability,ping,ping,15,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:196,deployability,updat,update,196,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:72,performance,content,content,72,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:196,safety,updat,update,196,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6771:196,security,updat,update,196,"Thanks for the ping, @StefanBruens . We are now preparing the IANA form content, I expect to get the process started next week. Apologies for keeping this open and unaddressed for so long! I will update this issue once we have a decision from IANA, which will include the file magic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6771
https://github.com/root-project/root/issues/6773:343,integrability,event,events,343,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:464,integrability,event,events,464,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:32,modifiability,paramet,parameters,32,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:388,modifiability,Variab,Variable,388,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:507,modifiability,Variab,Variable,507,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:315,performance,time,time,315,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6773:436,performance,time,time,436,I finally got to this item. The parameters are different for 6.32. How to reproduce:. ```. g++ -o a tutorials/tmva/TMVARegression.C `root-config --libs --cflags` -lTMVAUtils -lTMVAGui -lTMVA. ./a -b FDA_GAMT >& fda_gamt.out. ./a -b FDA_MT >& fda_mt.out. diff fda_gamt.out fda_mt.out . ```. Gives:. ```. < : Elapsed time for evaluation of 1000 events: 0.00143 sec . < TFHandler_FDA_GAMT : Variable Mean RMS [ Min Max ]. ---. > : Elapsed time for evaluation of 1000 events: 0.00146 sec . > TFHandler_FDA_MT : Variable Mean RMS [ Min Max ]. 207c201. < : datasetreg FDA_GAMT : -64.4 -58.1 83.7 77.4 | -0.000 -0.000. ---. > : datasetreg FDA_MT : -76.1 -69.6 87.3 80.9 | 0.914 0.893. 215c209. < : datasetreg FDA_GAMT : -61.5 -54.3 84.0 76.6 | 0.000 0.000. ---. > : datasetreg FDA_MT : -73.0 -65.6 87.7 80.0 | 0.923 0.872. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6773
https://github.com/root-project/root/issues/6774:173,availability,error,errors,173,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:232,availability,error,error,232,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:327,availability,error,error,327,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:370,availability,Error,Error,370,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:430,availability,Error,Error,430,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:444,availability,operat,operation,444,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:244,deployability,LOADER,LOADER,244,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:252,deployability,fail,failed,252,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:334,deployability,fail,failed,334,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:244,energy efficiency,LOAD,LOADER,244,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:344,energy efficiency,load,load,344,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:133,integrability,event,event,133,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:100,interoperability,share,share,100,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:293,interoperability,share,share,293,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:173,performance,error,errors,173,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:232,performance,error,error,232,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:244,performance,LOAD,LOADER,244,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:327,performance,error,error,327,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:344,performance,load,load,344,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:370,performance,Error,Error,370,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:430,performance,Error,Error,430,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:252,reliability,fail,failed,252,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:334,reliability,fail,failed,334,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:173,safety,error,errors,173,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:232,safety,error,error,232,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:327,safety,error,error,327,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:370,safety,Error,Error,370,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:430,safety,Error,Error,430,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:173,usability,error,errors,173,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:206,usability,stop,stop,206,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:232,usability,error,error,232,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:327,usability,error,error,327,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:370,usability,Error,Error,370,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:430,usability,Error,Error,430,"in the meantime, I found a solution, although looks a bit strange:. export LIBGL_DRIVERS_PATH=""/usr/share/bug/libgl1-mesa-dri"" . The event display works, there are only two errors appearing, but they don't stop the graphics:. libGL error: MESA-LOADER: failed to open swrast (search paths /usr/share/bug/libgl1-mesa-dri). libGL error: failed to load driver: swrast. and. Error in <TGLViewerBase::RenderOpaque - pre exit check>: GL Error invalid operation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:26,deployability,configurat,configuration,26,"Seems to be, it is OpenGL configuration on your machine. @ThomasRuf , can we close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:26,integrability,configur,configuration,26,"Seems to be, it is OpenGL configuration on your machine. @ThomasRuf , can we close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:26,modifiability,configur,configuration,26,"Seems to be, it is OpenGL configuration on your machine. @ThomasRuf , can we close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:26,security,configur,configuration,26,"Seems to be, it is OpenGL configuration on your machine. @ThomasRuf , can we close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:77,usability,close,close,77,"Seems to be, it is OpenGL configuration on your machine. @ThomasRuf , can we close the issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:39,availability,Error,Error,39,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:39,performance,Error,Error,39,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:39,safety,Error,Error,39,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:39,usability,Error,Error,39,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:134,usability,stop,stops,134,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6774:207,usability,command,command,207,"almost. I still need to find out what ""Error in <TGLViewerBase::RenderOpaque - pre exit check>"" means and how to fix it, because this stops the execution of other code in my python script and returns to the command prompt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6774
https://github.com/root-project/root/issues/6775:130,availability,ping,ping,130,"Hi @andriish , that is likely expected as the issue is still open. It is a question for @lmoneta what the strategy here is, let's ping him.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6775
https://github.com/root-project/root/issues/6777:140,deployability,patch,patching,140,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:171,deployability,instal,installation,171,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:184,deployability,upgrad,upgrade,184,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:184,modifiability,upgrad,upgrade,184,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:140,safety,patch,patching,140,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:140,security,patch,patching,140,Can I do anything to speed up this bugfix? Like merge request? I still have some projects which suffer from this problem and require manual patching after each root fresh installation/upgrade.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:82,availability,Down,Downstream,82,"@rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @oshadura what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:139,interoperability,standard,standard,139,"@rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @oshadura what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:84,availability,Down,Downstream,84,"> @rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @eguiraud Exactly, but and this is what happens for all source files, but the dictionary (`G__XXX_cc.cxx` file) is not compiled with the same standard like the ROOT due to missing these files. And then takes compiler either default flags, or (perhaps, would need to check) the one specified with `CMAKE_CXX_FLAGS`. Which might be different, or by chance the same and you will not notice it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:141,interoperability,standard,standard,141,"> @rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @eguiraud Exactly, but and this is what happens for all source files, but the dictionary (`G__XXX_cc.cxx` file) is not compiled with the same standard like the ROOT due to missing these files. And then takes compiler either default flags, or (perhaps, would need to check) the one specified with `CMAKE_CXX_FLAGS`. Which might be different, or by chance the same and you will not notice it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:355,interoperability,standard,standard,355,"> @rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @eguiraud Exactly, but and this is what happens for all source files, but the dictionary (`G__XXX_cc.cxx` file) is not compiled with the same standard like the ROOT due to missing these files. And then takes compiler either default flags, or (perhaps, would need to check) the one specified with `CMAKE_CXX_FLAGS`. Which might be different, or by chance the same and you will not notice it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:494,interoperability,specif,specified,494,"> @rlalik sorry for the late reply, was ROOT compiled with `CMAKE_CXX_STANDARD=17`? Downstream applications are expected to use the same C++ standard than ROOT was compiled with (for interpreter-related reasons). @eguiraud Exactly, but and this is what happens for all source files, but the dictionary (`G__XXX_cc.cxx` file) is not compiled with the same standard like the ROOT due to missing these files. And then takes compiler either default flags, or (perhaps, would need to check) the one specified with `CMAKE_CXX_FLAGS`. Which might be different, or by chance the same and you will not notice it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:235,energy efficiency,green,green,235,"@rlalik sorry for such late reply... (I think I just lost it in my to-do list). I think your fix totally make sense for me (cc: @vgvassilev ). Could you please open PR with the proposed changes, we could see if the test suite will be 'green'?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:215,safety,test,test,215,"@rlalik sorry for such late reply... (I think I just lost it in my to-do list). I think your fix totally make sense for me (cc: @vgvassilev ). Could you please open PR with the proposed changes, we could see if the test suite will be 'green'?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6777:215,testability,test,test,215,"@rlalik sorry for such late reply... (I think I just lost it in my to-do list). I think your fix totally make sense for me (cc: @vgvassilev ). Could you please open PR with the proposed changes, we could see if the test suite will be 'green'?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6777
https://github.com/root-project/root/issues/6779:92,deployability,build,build,92,We have to check tomorrow whether the nightlies are fine. The PR CI does not have a centos7 build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:68,reliability,doe,does,68,We have to check tomorrow whether the nightlies are fine. The PR CI does not have a centos7 build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:20,deployability,build,build,20,"@stwunsch I checked build in Jenkins, it is green (test are still running)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:44,energy efficiency,green,green,44,"@stwunsch I checked build in Jenkins, it is green (test are still running)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:51,safety,test,test,51,"@stwunsch I checked build in Jenkins, it is green (test are still running)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:51,testability,test,test,51,"@stwunsch I checked build in Jenkins, it is green (test are still running)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/issues/6779:19,energy efficiency,green,green,19,Also nightlies are green :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6779
https://github.com/root-project/root/pull/6780:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6780
https://github.com/root-project/root/pull/6782:28,deployability,build,build,28,"@oshadura Ah well, we don't build on centos7 in the PR builds! Can we trigger it from here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6782
https://github.com/root-project/root/pull/6782:55,deployability,build,builds,55,"@oshadura Ah well, we don't build on centos7 in the PR builds! Can we trigger it from here?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6782
https://github.com/root-project/root/pull/6782:11,deployability,build,build,11,@phsft-bot build on ROOT-centos7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6782
https://github.com/root-project/root/pull/6783:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6783
https://github.com/root-project/root/pull/6783:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6783
https://github.com/root-project/root/pull/6783:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6783
https://github.com/root-project/root/issues/6784:11,usability,confirm,confirm,11,"Yes, I can confirm a problem. export for fictional `nlohmann_json` library is missing. I will try to fix it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:75,deployability,stage,stage,75,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:137,deployability,configurat,configuration-file,137,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:594,deployability,fail,fail,594,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:643,deployability,build,build,643,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:137,integrability,configur,configuration-file,137,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:129,modifiability,pac,package-configuration-file,129,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:362,reliability,doe,does,362,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:393,reliability,doe,does,393,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:594,reliability,fail,fail,594,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:659,reliability,doe,does,659,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:137,security,configur,configuration-file,137,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:66,usability,help,help,66,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:81,usability,guid,guide,81,"@oshadura, according to [this cmake docu](https://cmake.org/cmake/help/git-stage/guide/importing-exporting/index.html#creating-a-package-configuration-file), one have to add something like `find_dependency(nlohmann_json)` into ROOTConfig.cmake. I did not found any example of usage of this macro in ROOT. . I tried to use your code around `builtin_glew`, but it does not work. `nlohmann_json` does not appear in exported targets. Also direct call like. ```. export(TARGETS nlohmann_json::nlohmann_json NAMESPACE nlohmann_json:: APPEND FILE ${PROJECT_BINARY_DIR}/ROOTConfig-targets.cmake). ```. fail while `nlohmann_json::nlohmann_json` is not build and cmake does not allow to export it. Should I try with `find_dependency(nlohmann_json)`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:22,safety,except,exceptional,22,"I agree that it is an exceptional case, I just not very happy that we will add only `nlohmann_json` in `ROOTConfig.cmake`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:215,deployability,automat,automatically,215,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:128,integrability,compon,components,128,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:128,interoperability,compon,components,128,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:306,interoperability,standard,standard,306,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:128,modifiability,compon,components,128,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:215,testability,automat,automatically,215,"> I just not very happy that we will add only nlohmann_json in ROOTConfig.cmake. May be it can be good starting point! For many components (like `RMySQL` library) we provide our own `FindMySQL.cmake` macro, . which automatically exports system include paths. Therefore problem not appears. If we would use standard `find_package(MySQL)`, we probably also need to provide `find_dependency(MySQL)`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:80,deployability,depend,dependencies,80,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:80,integrability,depend,dependencies,80,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:80,modifiability,depend,dependencies,80,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:58,safety,review,review,58,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:80,safety,depend,dependencies,80,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:58,testability,review,review,58,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6784:80,testability,depend,dependencies,80,"@linev totally agree with you, we will definitely need to review other builtins/dependencies...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6784
https://github.com/root-project/root/issues/6785:63,safety,test,tested,63,I don't think we need an open issue for everything that is not tested. And is coming up with a way to test the GUI launch from PyROOT worth it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6785
https://github.com/root-project/root/issues/6785:102,safety,test,test,102,I don't think we need an open issue for everything that is not tested. And is coming up with a way to test the GUI launch from PyROOT worth it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6785
https://github.com/root-project/root/issues/6785:63,testability,test,tested,63,I don't think we need an open issue for everything that is not tested. And is coming up with a way to test the GUI launch from PyROOT worth it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6785
https://github.com/root-project/root/issues/6785:102,testability,test,test,102,I don't think we need an open issue for everything that is not tested. And is coming up with a way to test the GUI launch from PyROOT worth it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6785
https://github.com/root-project/root/pull/6786:57,deployability,releas,releases,57,"@Axel-Naumann Should this be backported? If so, to which releases?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6786
https://github.com/root-project/root/pull/6793:39,deployability,releas,release,39,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:83,deployability,API,API,83,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:162,deployability,API,API,162,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:83,integrability,API,API,83,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:162,integrability,API,API,162,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:67,interoperability,incompatib,incompatibility,67,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:83,interoperability,API,API,83,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:162,interoperability,API,API,162,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6793:108,usability,clear,clear,108,"Hi, . Yes I was surprised to that they release 2.4 with a backward incompatibility API. . But the future is clear, it is tensorflow.keras and not a multi backend API",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6793
https://github.com/root-project/root/pull/6794:162,deployability,Version,Version,162,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:258,energy efficiency,CPU,CPU,258,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:162,integrability,Version,Version,162,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:162,modifiability,Version,Version,162,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:258,performance,CPU,CPU,258,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:262,performance,time,time,262,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:309,performance,Perform,Performance-wise,309,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:19,safety,compl,completed,19,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:34,safety,test,testing,34,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:97,safety,test,testrng,97,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:285,safety,test,tests,285,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:329,safety,test,tested,329,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:19,security,compl,completed,19,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:34,testability,test,testing,34,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:97,testability,test,testrng,97,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:285,testability,test,tests,285,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:329,testability,test,tested,329,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:309,usability,Perform,Performance-wise,309,"My machine finally completed full testing with the TestU01 suite (via https://github.com/lmoneta/testrng):. ```. ========= Summary results of BigCrush =========. Version: TestU01 1.2.3. Generator: TRandomRanluxpp (p = 2048). Number of statistics: 160. Total CPU time: 04:56:59.27. All tests were passed. ```. Performance-wise, I tested summing up 1e9 random doubles and each number takes 29ns on average. As expected, that is worse than the assembly implementation (approx. 9ns), but at least twice as fast compared to RANLUX in `TRandom1` with ca. 62ns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:155,performance,time,time,155,Great work Jonas! I will work at the detail and try to understand the reason for skip(11). . Good you have run testU01. 29 ns/number is still an excellent time!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:55,testability,understand,understand,55,Great work Jonas! I will work at the detail and try to understand the reason for skip(11). . Good you have run testU01. 29 ns/number is still an excellent time!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:151,availability,down,down,151,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:143,deployability,version,version,143,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:277,deployability,version,version,277,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:333,energy efficiency,optim,optimizations,333,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:133,integrability,complian,compliant,133,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:143,integrability,version,version,143,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:277,integrability,version,version,277,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:322,integrability,sub,submit,322,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:124,interoperability,standard,standard-compliant,124,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:111,modifiability,portab,portable,111,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:143,modifiability,version,version,143,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:175,modifiability,extens,extension,175,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:277,modifiability,version,version,277,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:37,performance,time,time,37,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:99,performance,time,time,99,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:333,performance,optimiz,optimizations,333,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:133,safety,compl,compliant,133,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:133,security,compl,compliant,133,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:200,usability,support,supported,200,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:255,usability,close,close,255,"> 29 ns/number is still an excellent time! I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6794:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6794
https://github.com/root-project/root/pull/6795:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6795
https://github.com/root-project/root/issues/6797:23,usability,confirm,confirm,23,@dan131riley could you confirm that the PR fixes it? And thank you very much for your suggestion of how to fix it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6797
https://github.com/root-project/root/issues/6797:22,usability,confirm,confirmation,22,"Fixed, thanks for the confirmation!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6797
https://github.com/root-project/root/pull/6800:11,deployability,build,build,11,@phsft-bot build just on mac10beta/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6800
https://github.com/root-project/root/pull/6800:11,deployability,build,build,11,@phsft-bot build just on mac10beta/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6800
https://github.com/root-project/root/pull/6800:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17 mac10beta/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6800
https://github.com/root-project/root/pull/6800:11,deployability,build,build,11,@phsft-bot build just on mac10beta/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6800
https://github.com/root-project/root/issues/6802:47,security,token,token,47,"CC: @bbockelm . Brian, I know you are a Bearer token expert :1st_place_medal:, can you recommend us if the solution of @dciangot makes sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:20,integrability,sub,submit,20,@dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:143,safety,review,review,143,@dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:143,testability,review,review,143,@dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:69,deployability,patch,patch,69,@dciangot And: thanks a lot for submitting the issue together with a patch! That's very much appreciated!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:32,integrability,sub,submitting,32,@dciangot And: thanks a lot for submitting the issue together with a patch! That's very much appreciated!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:69,safety,patch,patch,69,@dciangot And: thanks a lot for submitting the issue together with a patch! That's very much appreciated!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:69,security,patch,patch,69,@dciangot And: thanks a lot for submitting the issue together with a patch! That's very much appreciated!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:22,integrability,sub,submit,22,> @dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review. Done. #6818.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:145,safety,review,review,145,> @dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review. Done. #6818.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:145,testability,review,review,145,> @dciangot Could you submit your proposal as a draft PR? To me it makes sense and I think we should discuss necessary changes as part of the PR review. Done. #6818.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:105,safety,test,test,105,"@dciangot I opened a new PR https://github.com/root-project/root/pull/7068 (if you will have a chance to test it, please let me know if it works in your env)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:105,testability,test,test,105,"@dciangot I opened a new PR https://github.com/root-project/root/pull/7068 (if you will have a chance to test it, please let me know if it works in your env)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:12,usability,confirm,confirm,12,@oshadura I confirm that is perfectly fine for us. Thank you!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:117,availability,error,error,117,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:177,availability,echo,echo,177,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:288,availability,Error,Error,288,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:10617,deployability,modul,modules,10617,c000-7fb9063e1000 r--p 00000000 fd:01 712618 /usr/local/lib/RIO.pcm. 7fb9063e4000-7fb906447000 r--p 00000000 fd:01 712799 /usr/local/lib/Rint.pcm. 7fb90644c000-7fb906b5a000 r--p 00000000 fd:01 712480 /usr/local/lib/Core.pcm. 7fb906bb4000-7fb906c7d000 r--p 00000000 fd:01 712497 /usr/local/lib/Gpad.pcm. 7fb906c84000-7fb906ceb000 r--p 00000000 fd:01 712493 /usr/local/lib/Genetic.pcm. 7fb906cec000-7fb906d52000 r--p 00000000 fd:01 712796 /usr/local/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 7fb906d54000-7fb906d70000 r--p 00000000 fd:01 712794 /usr/local/lib/ROOT_Config.pcm. 7fb906d74000-7fb906d95000 r--p 00000000 fd:01 712797 /usr/local/lib/ROOT_Rtypes.pcm. 7fb906d9c000-7fb906deb000 r--p 00000000 fd:01 712795 /usr/local/lib/ROOT_Foundation_C.pcm. 7fb906dec000-7fb906e15000 r--p 00000000 fd:01 712479 /usr/local/lib/Cling_Runtime_Extra.pcm. 7fb906e1c000-7fb906e34000 r--p 00000000 fd:01 712478 /usr/local/lib/Cling_Runtime.pcm. 7fb906e34000-7fb906e70000 r--p 00000000 fd:01 550860 /usr/local/lib/modules.idx. 7fb906e74000-7fb906e7f000 r--p 00000000 fd:01 712822 /usr/local/lib/_Builtin_stddef_max_align_t.pcm. 7fb906e84000-7fb90725e000 r--p 00000000 fd:01 712821 /usr/local/lib/_Builtin_intrinsics.pcm. 7fb907264000-7fb90726f000 r--p 00000000 fd:01 713117 /usr/local/lib/xlocale.h.pcm. 7fb907274000-7fb9081a2000 r--p 00000000 fd:01 713116 /usr/local/lib/std.pcm. 7fb9081a4000-7fb9081ab000 r-xp 00000000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9081ab000-7fb9083aa000 ---p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083aa000-7fb9083ab000 r--p 00006000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ab000-7fb9083ac000 rw-p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ac000-7fb90afbf000 r-xp 00000000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90afbf000-7fb90b1bf000 ---p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b1bf000-7fb90b3dc000 r--p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b3dc000-7fb90b3e8000 rw-p 02e30000 fd:01 712913 /usr/local/lib/libCling.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:17453,deployability,stack,stack,17453,0 ---p 000e9000 fd:01 278492 /usr/lib64/libstdc++.so.6.0.19. 7fb90d4ed000-7fb90d4f5000 r--p 000e9000 fd:01 278492 /usr/lib64/libstdc++.so.6.0.19. 7fb90d4f5000-7fb90d4f7000 rw-p 000f1000 fd:01 278492 /usr/lib64/libstdc++.so.6.0.19. 7fb90d4f7000-7fb90d50c000 rw-p 00000000 00:00 0. 7fb90d50c000-7fb90d9a8000 r-xp 00000000 fd:01 712914 /usr/local/lib/libCore.so. 7fb90d9a8000-7fb90dba8000 ---p 0049c000 fd:01 712914 /usr/local/lib/libCore.so. 7fb90dba8000-7fb90dbd3000 r--p 0049c000 fd:01 712914 /usr/local/lib/libCore.so. 7fb90dbd3000-7fb90dbda000 rw-p 004c7000 fd:01 712914 /usr/local/lib/libCore.so. 7fb90dbda000-7fb90dc11000 rw-p 00000000 00:00 0. 7fb90dc14000-7fb90dc3a000 r-xp 00000000 fd:01 712977 /usr/local/lib/libRint.so. 7fb90dc3a000-7fb90de39000 ---p 00026000 fd:01 712977 /usr/local/lib/libRint.so. 7fb90de39000-7fb90de3b000 r--p 00025000 fd:01 712977 /usr/local/lib/libRint.so. 7fb90de3b000-7fb90de3c000 rw-p 00027000 fd:01 712977 /usr/local/lib/libRint.so. 7fb90de3c000-7fb90de5e000 r-xp 00000000 fd:01 275426 /usr/lib64/ld-2.17.so. 7fb90de6b000-7fb90de6c000 rw-p 00000000 00:00 0. 7fb90de6c000-7fb90dfaa000 r--p 00000000 fd:01 713072 /usr/local/lib/libc.pcm. 7fb90dfaa000-7fb90dfb0000 r-xp 00000000 00:00 0. 7fb90dfb0000-7fb90e04c000 rw-p 00000000 00:00 0. 7fb90e04c000-7fb90e04e000 r-xp 00000000 00:00 0. 7fb90e04e000-7fb90e054000 r-xp 00000000 00:00 0. 7fb90e054000-7fb90e055000 rw-p 00000000 00:00 0. 7fb90e055000-7fb90e057000 r-xp 00000000 00:00 0. 7fb90e057000-7fb90e05d000 rw-p 00000000 00:00 0. 7fb90e05d000-7fb90e05e000 r--p 00021000 fd:01 275426 /usr/lib64/ld-2.17.so. 7fb90e05e000-7fb90e05f000 rw-p 00022000 fd:01 275426 /usr/lib64/ld-2.17.so. 7fb90e05f000-7fb90e061000 rw-p 00000000 00:00 0. 7fb90e061000-7fb90e062000 rw-p 00000000 00:00 0. 7ffff29eb000-7ffff2a0c000 rw-p 00000000 00:00 0 [stack]. 7ffff2b24000-7ffff2b26000 r--p 00000000 00:00 0 [vvar]. 7ffff2b26000-7ffff2b28000 r-xp 00000000 00:00 0 [vdso]. ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0 [vsyscall],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:9836,energy efficiency,Core,Core,9836,f.pcm. 7fb903b44000-7fb903eb0000 r--p 00000000 fd:01 712815 /usr/local/lib/TreePlayer.pcm. 7fb903eb4000-7fb904d3c000 r--p 00000000 fd:01 712811 /usr/local/lib/TMVA.pcm. 7fb904d43000-7fb905044000 rw-p 00000000 00:00 0. 7fb905044000-7fb9051ae000 r--p 00000000 fd:01 712598 /usr/local/lib/Matrix.pcm. 7fb9051b4000-7fb90562d000 r--p 00000000 fd:01 712504 /usr/local/lib/Hist.pcm. 7fb905634000-7fb905742000 r--p 00000000 fd:01 712602 /usr/local/lib/Net.pcm. 7fb905744000-7fb905834000 r--p 00000000 fd:01 712600 /usr/local/lib/MultiProc.pcm. 7fb905834000-7fb90598c000 r--p 00000000 fd:01 710060 /usr/local/lib/Imt.pcm. 7fb90598c000-7fb906026000 r--p 00000000 fd:01 712596 /usr/local/lib/MathCore.pcm. 7fb90602c000-7fb906195000 r--p 00000000 fd:01 712813 /usr/local/lib/Thread.pcm. 7fb90619c000-7fb9063e1000 r--p 00000000 fd:01 712618 /usr/local/lib/RIO.pcm. 7fb9063e4000-7fb906447000 r--p 00000000 fd:01 712799 /usr/local/lib/Rint.pcm. 7fb90644c000-7fb906b5a000 r--p 00000000 fd:01 712480 /usr/local/lib/Core.pcm. 7fb906bb4000-7fb906c7d000 r--p 00000000 fd:01 712497 /usr/local/lib/Gpad.pcm. 7fb906c84000-7fb906ceb000 r--p 00000000 fd:01 712493 /usr/local/lib/Genetic.pcm. 7fb906cec000-7fb906d52000 r--p 00000000 fd:01 712796 /usr/local/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 7fb906d54000-7fb906d70000 r--p 00000000 fd:01 712794 /usr/local/lib/ROOT_Config.pcm. 7fb906d74000-7fb906d95000 r--p 00000000 fd:01 712797 /usr/local/lib/ROOT_Rtypes.pcm. 7fb906d9c000-7fb906deb000 r--p 00000000 fd:01 712795 /usr/local/lib/ROOT_Foundation_C.pcm. 7fb906dec000-7fb906e15000 r--p 00000000 fd:01 712479 /usr/local/lib/Cling_Runtime_Extra.pcm. 7fb906e1c000-7fb906e34000 r--p 00000000 fd:01 712478 /usr/local/lib/Cling_Runtime.pcm. 7fb906e34000-7fb906e70000 r--p 00000000 fd:01 550860 /usr/local/lib/modules.idx. 7fb906e74000-7fb906e7f000 r--p 00000000 fd:01 712822 /usr/local/lib/_Builtin_stddef_max_align_t.pcm. 7fb906e84000-7fb90725e000 r--p 00000000 fd:01 712821 /usr/local/lib/_Builtin_intrinsics.pcm. 7fb907264000-7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:8441,interoperability,XML,XMLIO,8441,630000 rw-p 00000000 00:00 0. 7fb900634000-7fb9006b5000 r--p 00000000 fd:01 712614 /usr/local/lib/RDAVIX.pcm. 7fb9006bc000-7fb900967000 r--p 00000000 fd:01 712808 /usr/local/lib/Smatrix.pcm. 7fb90096c000-7fb9009e4000 r--p 00000000 fd:01 712486 /usr/local/lib/Foam.pcm. 7fb9009e4000-7fb9016da000 r--p 00000000 fd:01 712801 /usr/local/lib/RooFitCore.pcm. 7fb9016dc000-7fb9020e3000 r--p 00000000 fd:01 712800 /usr/local/lib/RooFit.pcm. 7fb9020e4000-7fb9023e2000 r--p 00000000 fd:01 712803 /usr/local/lib/RooStats.pcm. 7fb9023e4000-7fb90269f000 r--p 00000000 fd:01 712492 /usr/local/lib/GenVector.pcm. 7fb9026a4000-7fb9027c3000 r--p 00000000 fd:01 712597 /usr/local/lib/MathMore.pcm. 7fb9027c4000-7fb902a87000 r--p 00000000 fd:01 712494 /usr/local/lib/Geom.pcm. 7fb902a8c000-7fb902d24000 r--p 00000000 fd:01 712793 /usr/local/lib/ROOTVecOps.pcm. 7fb902d24000-7fb9035bf000 r--p 00000000 fd:01 712791 /usr/local/lib/ROOTDataFrame.pcm. 7fb9035c4000-7fb903692000 r--p 00000000 fd:01 712819 /usr/local/lib/XMLIO.pcm. 7fb903694000-7fb903706000 r--p 00000000 fd:01 712595 /usr/local/lib/MLP.pcm. 7fb90370c000-7fb90378c000 r--p 00000000 fd:01 712599 /usr/local/lib/Minuit.pcm. 7fb90378c000-7fb903986000 r--p 00000000 fd:01 712814 /usr/local/lib/Tree.pcm. 7fb90398c000-7fb903a50000 r--p 00000000 fd:01 712499 /usr/local/lib/Graf3d.pcm. 7fb903a54000-7fb903b40000 r--p 00000000 fd:01 712498 /usr/local/lib/Graf.pcm. 7fb903b44000-7fb903eb0000 r--p 00000000 fd:01 712815 /usr/local/lib/TreePlayer.pcm. 7fb903eb4000-7fb904d3c000 r--p 00000000 fd:01 712811 /usr/local/lib/TMVA.pcm. 7fb904d43000-7fb905044000 rw-p 00000000 00:00 0. 7fb905044000-7fb9051ae000 r--p 00000000 fd:01 712598 /usr/local/lib/Matrix.pcm. 7fb9051b4000-7fb90562d000 r--p 00000000 fd:01 712504 /usr/local/lib/Hist.pcm. 7fb905634000-7fb905742000 r--p 00000000 fd:01 712602 /usr/local/lib/Net.pcm. 7fb905744000-7fb905834000 r--p 00000000 fd:01 712600 /usr/local/lib/MultiProc.pcm. 7fb905834000-7fb90598c000 r--p 00000000 fd:01 710060 /usr/local/lib/Im,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:53,modifiability,variab,variable,53,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:10617,modifiability,modul,modules,10617,c000-7fb9063e1000 r--p 00000000 fd:01 712618 /usr/local/lib/RIO.pcm. 7fb9063e4000-7fb906447000 r--p 00000000 fd:01 712799 /usr/local/lib/Rint.pcm. 7fb90644c000-7fb906b5a000 r--p 00000000 fd:01 712480 /usr/local/lib/Core.pcm. 7fb906bb4000-7fb906c7d000 r--p 00000000 fd:01 712497 /usr/local/lib/Gpad.pcm. 7fb906c84000-7fb906ceb000 r--p 00000000 fd:01 712493 /usr/local/lib/Genetic.pcm. 7fb906cec000-7fb906d52000 r--p 00000000 fd:01 712796 /usr/local/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 7fb906d54000-7fb906d70000 r--p 00000000 fd:01 712794 /usr/local/lib/ROOT_Config.pcm. 7fb906d74000-7fb906d95000 r--p 00000000 fd:01 712797 /usr/local/lib/ROOT_Rtypes.pcm. 7fb906d9c000-7fb906deb000 r--p 00000000 fd:01 712795 /usr/local/lib/ROOT_Foundation_C.pcm. 7fb906dec000-7fb906e15000 r--p 00000000 fd:01 712479 /usr/local/lib/Cling_Runtime_Extra.pcm. 7fb906e1c000-7fb906e34000 r--p 00000000 fd:01 712478 /usr/local/lib/Cling_Runtime.pcm. 7fb906e34000-7fb906e70000 r--p 00000000 fd:01 550860 /usr/local/lib/modules.idx. 7fb906e74000-7fb906e7f000 r--p 00000000 fd:01 712822 /usr/local/lib/_Builtin_stddef_max_align_t.pcm. 7fb906e84000-7fb90725e000 r--p 00000000 fd:01 712821 /usr/local/lib/_Builtin_intrinsics.pcm. 7fb907264000-7fb90726f000 r--p 00000000 fd:01 713117 /usr/local/lib/xlocale.h.pcm. 7fb907274000-7fb9081a2000 r--p 00000000 fd:01 713116 /usr/local/lib/std.pcm. 7fb9081a4000-7fb9081ab000 r-xp 00000000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9081ab000-7fb9083aa000 ---p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083aa000-7fb9083ab000 r--p 00006000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ab000-7fb9083ac000 rw-p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ac000-7fb90afbf000 r-xp 00000000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90afbf000-7fb90b1bf000 ---p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b1bf000-7fb90b3dc000 r--p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b3dc000-7fb90b3e8000 rw-p 02e30000 fd:01 712913 /usr/local/lib/libCling.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:117,performance,error,error,117,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:288,performance,Error,Error,288,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:1805,performance,Memor,Memory,1805,)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 fd:01 347746 /usr/local/bin/root.exe. 00f1a000-0217d000 rw-p 00000000 00:00 0 [heap]. 7fb8f8000000-7fb8f8021000 rw-p 00000000 00:00 0. 7fb8f8021000-7fb8fc000000 ---p 00000000 00:00 0. 7fb8fdfc4000-7fb8fdfe8000 r-xp 00000000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fdfe8000-7fb8fe1e7000 ---p 00024000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e7000-7fb8fe1e8000 r--p 00023000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e8000-7fb8fe1e9000 rw-p 00024000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e9000-7fb8fe1eb000 rw-p 00000000 00:00 0. 7fb8fe1ec000-7fb8fe202000 r-xp 00000000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb8fe202000-7fb8fe402000 ---p 00016000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb8fe402000-7fb8fe403000 r--p 00016000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:12,safety,test,tested,12,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:117,safety,error,error,117,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:288,safety,Error,Error,288,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:10617,safety,modul,modules,10617,c000-7fb9063e1000 r--p 00000000 fd:01 712618 /usr/local/lib/RIO.pcm. 7fb9063e4000-7fb906447000 r--p 00000000 fd:01 712799 /usr/local/lib/Rint.pcm. 7fb90644c000-7fb906b5a000 r--p 00000000 fd:01 712480 /usr/local/lib/Core.pcm. 7fb906bb4000-7fb906c7d000 r--p 00000000 fd:01 712497 /usr/local/lib/Gpad.pcm. 7fb906c84000-7fb906ceb000 r--p 00000000 fd:01 712493 /usr/local/lib/Genetic.pcm. 7fb906cec000-7fb906d52000 r--p 00000000 fd:01 712796 /usr/local/lib/ROOT_Foundation_Stage1_NoRTTI.pcm. 7fb906d54000-7fb906d70000 r--p 00000000 fd:01 712794 /usr/local/lib/ROOT_Config.pcm. 7fb906d74000-7fb906d95000 r--p 00000000 fd:01 712797 /usr/local/lib/ROOT_Rtypes.pcm. 7fb906d9c000-7fb906deb000 r--p 00000000 fd:01 712795 /usr/local/lib/ROOT_Foundation_C.pcm. 7fb906dec000-7fb906e15000 r--p 00000000 fd:01 712479 /usr/local/lib/Cling_Runtime_Extra.pcm. 7fb906e1c000-7fb906e34000 r--p 00000000 fd:01 712478 /usr/local/lib/Cling_Runtime.pcm. 7fb906e34000-7fb906e70000 r--p 00000000 fd:01 550860 /usr/local/lib/modules.idx. 7fb906e74000-7fb906e7f000 r--p 00000000 fd:01 712822 /usr/local/lib/_Builtin_stddef_max_align_t.pcm. 7fb906e84000-7fb90725e000 r--p 00000000 fd:01 712821 /usr/local/lib/_Builtin_intrinsics.pcm. 7fb907264000-7fb90726f000 r--p 00000000 fd:01 713117 /usr/local/lib/xlocale.h.pcm. 7fb907274000-7fb9081a2000 r--p 00000000 fd:01 713116 /usr/local/lib/std.pcm. 7fb9081a4000-7fb9081ab000 r-xp 00000000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9081ab000-7fb9083aa000 ---p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083aa000-7fb9083ab000 r--p 00006000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ab000-7fb9083ac000 rw-p 00007000 fd:01 278477 /usr/lib64/librt-2.17.so. 7fb9083ac000-7fb90afbf000 r-xp 00000000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90afbf000-7fb90b1bf000 ---p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b1bf000-7fb90b3dc000 r--p 02c13000 fd:01 712913 /usr/local/lib/libCling.so. 7fb90b3dc000-7fb90b3e8000 rw-p 02e30000 fd:01 712913 /usr/local/lib/libCling.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:28,security,token,token,28,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:87,security,token,token-in-file,87,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:12,testability,test,tested,12,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:117,usability,error,error,117,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:288,usability,Error,Error,288,"Actually, I tested only the token in the environment variable. In fact, trying out the token-in-file way, I get this error (*), any idea @oshadura ? (*). [root@0cfc7b46c606 ~]# echo ""$MY_TOKEN"" > /tmp/bt_u`id -u`. [root@0cfc7b46c606 ~]# root -l https://212.189.205.141:31094//W.root. *** Error in `/usr/local/bin/root.exe': free(): corrupted unsorted chunks: 0x0000000002141130 ***. ======= Backtrace: =========. /lib64/libc.so.6(+0x81299)[0x7fb90c775299]. /lib64/libc.so.6(fclose+0x177)[0x7fb90c7621b7]. /usr/local/lib/libRDAVIX.so(_Z15findTokenInFileRKSsRSs+0xa4)[0x7fb9001205b4]. /usr/local/lib/libRDAVIX.so(_Z13DiscoverTokenv+0x2f2)[0x7fb900123d82]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal11parseConfigEv+0x14a)[0x7fb90012426a]. /usr/local/lib/libRDAVIX.so(_ZN18TDavixFileInternal4initEv+0xa9)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:1805,usability,Memor,Memory,1805,)[0x7fb9001256a9]. /usr/local/lib/libRDAVIX.so(_ZN12TDavixSystemC1Ev+0xe2)[0x7fb900128b62]. [0x7fb90dfab07e]. /usr/local/lib/libCling.so(+0x54406a)[0x7fb9088f006a]. /usr/local/lib/libCling.so(+0x544f68)[0x7fb9088f0f68]. /usr/local/lib/libCling.so(+0x54505b)[0x7fb9088f105b]. /usr/local/lib/libCore.so(_ZN11TMethodCall7ExecuteEPvRl+0x50)[0x7fb90d7a4be0]. /usr/local/lib/libCore.so(_ZN7TSystem10FindHelperEPKcPv+0x4df)[0x7fb90d70a58f]. /usr/local/lib/libCore.so(_ZN11TUnixSystem11GetPathInfoEPKcR10FileStat_t+0x13)[0x7fb90d7dda33]. /usr/local/lib/libCore.so(_ZN7TSystem11GetPathInfoEPKcPlPxS2_S2_+0x8c)[0x7fb90d70083c]. /usr/local/lib/libCore.so(_ZN12TApplication10GetOptionsEPiPPc+0x115a)[0x7fb90d6a127a]. /usr/local/lib/libCore.so(_ZN12TApplicationC1EPKcPiPPcPvi+0x299)[0x7fb90d6a19a9]. /usr/local/lib/libRint.so(_ZN5TRintC1EPKcPiPPcPvib+0x21)[0x7fb90dc24951]. /usr/local/bin/root.exe[0x4008ac]. /lib64/libc.so.6(__libc_start_main+0xf5)[0x7fb90c716555]. /usr/local/bin/root.exe[0x400918]. ======= Memory map: ========. 00400000-00401000 r-xp 00000000 fd:01 347746 /usr/local/bin/root.exe. 00600000-00601000 r--p 00000000 fd:01 347746 /usr/local/bin/root.exe. 00601000-00602000 rw-p 00001000 fd:01 347746 /usr/local/bin/root.exe. 00f1a000-0217d000 rw-p 00000000 00:00 0 [heap]. 7fb8f8000000-7fb8f8021000 rw-p 00000000 00:00 0. 7fb8f8021000-7fb8fc000000 ---p 00000000 00:00 0. 7fb8fdfc4000-7fb8fdfe8000 r-xp 00000000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fdfe8000-7fb8fe1e7000 ---p 00024000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e7000-7fb8fe1e8000 r--p 00023000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e8000-7fb8fe1e9000 rw-p 00024000 fd:01 259994 /usr/lib64/libselinux.so.1. 7fb8fe1e9000-7fb8fe1eb000 rw-p 00000000 00:00 0. 7fb8fe1ec000-7fb8fe202000 r-xp 00000000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb8fe202000-7fb8fe402000 ---p 00016000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb8fe402000-7fb8fe403000 r--p 00016000 fd:01 278470 /usr/lib64/libresolv-2.17.so. 7fb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:366,availability,Error,Error,366,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:453,availability,Error,Error,453,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:183,deployability,build,builds,183,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:366,performance,Error,Error,366,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:453,performance,Error,Error,453,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:112,safety,test,test,112,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:366,safety,Error,Error,366,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:453,safety,Error,Error,453,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:49,security,access,access,49,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:203,security,token,tokens,203,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:112,testability,test,test,112,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:366,usability,Error,Error,366,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:453,usability,Error,Error,453,"@dciangot I forgot to ask, I will not be able to access the file in your mini reproducer? (I am going to try to test it @ UNL but I wanted to ask anyway). ```.  │  ~/C/root-rntuple/builds │   bearer-tokens ?1  root -l https://212.189.205.141:31094//W.root  ✔ │ 4m 29s  │ 16:08:36 . root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <TWebFile::GetHead>: https://212.189.205.141:31094//W.root?: Forbidden (403). Error in <TWebFile::GetFromWeb10>: https://212.189.205.141:31094//W.root?: Forbidden (403). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:88,modifiability,variab,variable,88,@dciangot Can you try please meanwhile access file exporting `BEARER_TOKEN` environment variable?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:39,security,access,access,39,@dciangot Can you try please meanwhile access file exporting `BEARER_TOKEN` environment variable?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:29,safety,test,test,29,"@oshadura that was the first test I didi actually, and it's working perfectly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:29,testability,test,test,29,"@oshadura that was the first test I didi actually, and it's working perfectly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:289,availability,Error,Error,289,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:520,availability,Error,Error,520,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:146,deployability,fail,failed,146,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:392,deployability,fail,failed,392,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:659,deployability,fail,failed,659,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:289,performance,Error,Error,289,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:520,performance,Error,Error,520,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:146,reliability,fail,failed,146,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:392,reliability,fail,failed,392,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:659,reliability,fail,failed,659,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:289,safety,Error,Error,289,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:520,safety,Error,Error,520,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:121,security,certif,certificate,121,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:168,security,trust,trusted,168,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:367,security,certif,certificate,367,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:414,security,trust,trusted,414,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:634,security,certif,certificate,634,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:681,security,trust,trusted,681,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:133,testability,verif,verification,133,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:379,testability,verif,verification,379,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:646,testability,verif,verification,646,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:289,usability,Error,Error,289,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/issues/6802:520,usability,Error,Error,520,"@dciangot sorry, I fixed a small typo and now I see that it will not crash anymore for your setup (I am getting _""Server certificate verification failed: issuer is not trusted after 3 attempts"",_ but it was expected?):. ```. root -l https://212.189.205.141:31094//W.root  ✔ │ 15:24:50 . Error in <DavixStat>: can not stat the file with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). root [0]. Attaching file https://212.189.205.141:31094//W.root as _file0... Error in <DavixOpen>: can not open file ""https://212.189.205.141:31094//W.root"" with davix: Result (Neon): Server certificate verification failed: issuer is not trusted after 3 attempts (6). (TFile *) nullptr. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6802
https://github.com/root-project/root/pull/6804:134,interoperability,conflict,conflicts,134,> Please hold this PR. Something went wrong in rebase to master. I add few lines before merging your last PR. Therefore there are now conflicts,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6804
https://github.com/root-project/root/pull/6805:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6805
https://github.com/root-project/root/pull/6806:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6806
https://github.com/root-project/root/pull/6807:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6807:109,deployability,stack,stacks,109,"@linev Thanks, the correction is in the branch now. I did not noticed it because I made a test with only two stacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6807:90,safety,test,test,90,"@linev Thanks, the correction is in the branch now. I did not noticed it because I made a test with only two stacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6807:90,testability,test,test,90,"@linev Thanks, the correction is in the branch now. I did not noticed it because I made a test with only two stacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6807:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6807:28,interoperability,platform,platforms,28,"Jenkins finished on several platforms, can merge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6807
https://github.com/root-project/root/pull/6808:48,deployability,Updat,Update,48,I will look today why it does not work without `Update`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:25,reliability,doe,does,25,I will look today why it does not work without `Update`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:48,safety,Updat,Update,48,I will look today why it does not work without `Update`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:48,security,Updat,Update,48,I will look today why it does not work without `Update`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:657,deployability,Updat,Update,657,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:846,energy efficiency,draw,drawing,846,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:887,energy efficiency,current,current,887,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:103,integrability,messag,messages,103,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:902,integrability,sub,subpads,902,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:40,interoperability,plug,plugin,40,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:103,interoperability,messag,messages,103,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:591,reliability,RCa,RCanvas,591,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:807,reliability,doe,does,807,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:913,reliability,RCa,RCanvas,913,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:657,safety,Updat,Update,657,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:332,security,access,access,332,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:657,security,Updat,Update,657,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:664,security,Modif,Modify,664,"One cannot run tutorial without ""davix"" plugin. But even after I enable it - it crashes with following messages:. ```. terminate called after throwing an instance of 'ROOT::Experimental::RException'. what(): expected RNTuple named 'GlobalTempData' but instead found '' in file 'GlobalLandTemperaturesByCity.root' (unchecked RResult access!). At:. ROOT::Experimental::RResult<ROOT::Experimental::RNTuple> ROOT::Experimental::Internal::RMiniFileReader::GetNTupleBare(std::string_view) [/home/linev/git/webgui/tree/ntuple/v7/src/RMiniFile.cxx:996]. ```. May be @jblomer can comment? Regarding `RCanvas` - there are two instances of them. Why one need to call `Update/Modify` only for first one? Again, it is only demonstration of very special functionality, should not be present in this tutorial. If tutorial does not work, I will have to fix such drawing by other means. For instance, in current master subpads in RCanvas are broken - but I will fix it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:91,availability,operat,operations,91,"Please address my ""RDF laziness"" comment before merging, we should teach users to book all operations before any of the results is accessed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:131,security,access,accessed,131,"Please address my ""RDF laziness"" comment before merging, we should teach users to book all operations before any of the results is accessed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:73,usability,user,users,73,"Please address my ""RDF laziness"" comment before merging, we should teach users to book all operations before any of the results is accessed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:6,energy efficiency,current,currently,6,"Hi, I currently checking code - at least it runs for me now. I will provide my comments soon concerning RCanvas usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:93,modifiability,concern,concerning,93,"Hi, I currently checking code - at least it runs for me now. I will provide my comments soon concerning RCanvas usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:104,reliability,RCa,RCanvas,104,"Hi, I currently checking code - at least it runs for me now. I will provide my comments soon concerning RCanvas usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:93,testability,concern,concerning,93,"Hi, I currently checking code - at least it runs for me now. I will provide my comments soon concerning RCanvas usage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:27,deployability,version,version,27,Closing this one for newer version #7107.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:27,integrability,version,version,27,Closing this one for newer version #7107.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6808:27,modifiability,version,version,27,Closing this one for newer version #7107.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6808
https://github.com/root-project/root/pull/6809:48,deployability,build,build,48,"Ah, wait. We haven't run the CI yet. @phsft-bot build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6809
https://github.com/root-project/root/pull/6809:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6809
https://github.com/root-project/root/pull/6810:11,deployability,build,build,11,@phsft-bot build just on mac10beta/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:42,deployability,releas,released,42,"Please merge this as Big Sur has now been released and it fixes the fatal ACliC issue. I explained to Axel why this fixes the problem, although it does not seem obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:147,reliability,doe,does,147,"Please merge this as Big Sur has now been released and it fixes the fatal ACliC issue. I explained to Axel why this fixes the problem, although it does not seem obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:24,deployability,updat,updated,24,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:51,deployability,log,log,51,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:24,safety,updat,updated,24,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:51,safety,log,log,51,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:24,security,updat,updated,24,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:51,security,log,log,51,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/pull/6810:51,testability,log,log,51,Merged manually with an updated / clarified commit log.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6810
https://github.com/root-project/root/issues/6811:27,usability,behavi,behaviour,27,I am not sure yet what the behaviour should be. But we can try.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:47,deployability,patch,patch,47,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:578,deployability,Updat,Update,578,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1670,deployability,version,version,1670,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:546,energy efficiency,Draw,DrawSame,546,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:851,energy efficiency,Draw,Draw,851,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1577,energy efficiency,Draw,Draw,1577,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1586,energy efficiency,Draw,DrawSame,1586,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1621,energy efficiency,draw,drawing,1621,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1697,energy efficiency,Draw,DrawSame,1697,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1768,energy efficiency,current,current,1768,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1785,energy efficiency,current,current,1785,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1670,integrability,version,version,1670,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1670,modifiability,version,version,1670,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:47,safety,patch,patch,47,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:578,safety,Updat,Update,578,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:47,security,patch,patch,47,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:578,security,Updat,Update,578,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:84,usability,prototyp,prototype,84,"Sorry for the very long delay. I do not have a patch yet in ROOT itself but a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubuser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:1978,usability,user,user-images,1978,"ut a small prototype implemented in your macro:. ```. double f( const double & x, const double & y). {. return x*x + y*y ;. }. std::vector<double> linspace(. const double & vmin ,. const double & vmax ,. const unsigned int & npoints). {. // regular linspace. double dx = (vmax - vmin)/double(npoints-1.) ;. std::vector<double> vlinspace = {} ;. for (unsigned int i = 0 ; i < npoints ; i++). {. vlinspace.push_back( vmin + double(i) * dx ) ;. }. return vlinspace ;. }. void DrawSame(TGraph2D *g). {. gPad->Update();. TView *view = gPad->GetView();. if (view) {. Double_t *rmin = view->GetRmin();. Double_t *rmax = view->GetRmax();. g->SetMaximum(rmax[2]);. g->SetMinimum(rmin[2]);. g->GetXaxis()->SetRangeUser(rmin[0],rmax[0]);. g->GetYaxis()->SetRangeUser(rmin[1],rmax[1]);. g->Draw(""P0 same"" ) ;. }. }. void test_tgraph2d(). {. std::vector<double>. vect_x ,. vect_y ;. vect_x = linspace(0.,10,100) ;. vect_y = linspace(0.,10,100) ;. // nominal. TGraph2D * gr = new TGraph2D( vect_x.size() * vect_y.size() ) ;. gr->SetDirectory(0) ;. unsigned int iPoints= 0 ;. double x,y,z ;. for (unsigned int iX = 0 ; iX < vect_x.size() ; iX++). {. for (unsigned int iY = 0 ; iY < vect_y.size() ; iY++). {. x = vect_x[iX] ;. y = vect_y[iY] ;. z = f(x,y) ;. gr->SetPoint(iPoints, x, y, z) ;. iPoints +=1 ;. }. }. double. xmin = 0. ,. xmax = 8. ,. ymin = 0. ,. ymax = 4. ,. zmin = -10. ,. zmax = 10. ;. gStyle->SetOptStat(0);. TH3F *frame3d = new TH3F(""frame3d"",""frame3d"",1,xmin,xmax,1,ymin,ymax,1,zmin,zmax);. frame3d->Draw();. DrawSame(gr);. }. ``` . Instead of drawing the 2D graph with option `same` this new version uses the function `DrawSame` which changes the TGraph2D axis limits to be the same as the current 3D plot (current TView). It gives the following picture. If that answer your question we can consider to put it in TGraph2DPainter. <img width=""679"" alt=""Screenshot 2021-07-30 at 11 01 31"" src=""https://user-images.githubusercontent.com/4697738/127629318-75a9f14b-33a7-4f52-8c1a-45e9b58263fc.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:22,usability,statu,status,22,Hi @couet what is the status of this issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6811:60,usability,person,persons,60,No problem I'm sure it will be useful in the future to many persons! :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6811
https://github.com/root-project/root/issues/6812:109,deployability,upgrad,upgrading,109,"Hello @Asxcvbn,. I have reproduced this bug and already have a fix for it. However, because we are currently upgrading to LLVM 9, I will wait until then to apply the fix -this will happen at some point in January-. Cheers,. J.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:99,energy efficiency,current,currently,99,"Hello @Asxcvbn,. I have reproduced this bug and already have a fix for it. However, because we are currently upgrading to LLVM 9, I will wait until then to apply the fix -this will happen at some point in January-. Cheers,. J.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:109,modifiability,upgrad,upgrading,109,"Hello @Asxcvbn,. I have reproduced this bug and already have a fix for it. However, because we are currently upgrading to LLVM 9, I will wait until then to apply the fix -this will happen at some point in January-. Cheers,. J.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:18,deployability,patch,patch,18,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:66,deployability,upgrad,upgrade,66,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:66,modifiability,upgrad,upgrade,66,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:18,safety,patch,patch,18,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:18,security,patch,patch,18,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/issues/6812:101,usability,close,closed,101,"Hi @Asxcvbn,. The patch has been sent for inclusion in the LLVM 9 upgrade branch. This issue will be closed once this branch is merged into `master`. Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6812
https://github.com/root-project/root/pull/6814:4,energy efficiency,current,current,4,"The current solution might be too noisy in some contexts, for instance RDataFrame, where ""every MT event loop should be exactly two calls to Foreach but you might have a bunch of event loops per application"" (@eguiraud :memo: ). I'll give it another look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:99,integrability,event,event,99,"The current solution might be too noisy in some contexts, for instance RDataFrame, where ""every MT event loop should be exactly two calls to Foreach but you might have a bunch of event loops per application"" (@eguiraud :memo: ). I'll give it another look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:179,integrability,event,event,179,"The current solution might be too noisy in some contexts, for instance RDataFrame, where ""every MT event loop should be exactly two calls to Foreach but you might have a bunch of event loops per application"" (@eguiraud :memo: ). I'll give it another look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:48,testability,context,contexts,48,"The current solution might be too noisy in some contexts, for instance RDataFrame, where ""every MT event loop should be exactly two calls to Foreach but you might have a bunch of event loops per application"" (@eguiraud :memo: ). I'll give it another look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:68,safety,test,test,68,"Hah, I thought this one was merged already. . I need to add another test case in the threadExecutor test in roottest to account for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:100,safety,test,test,100,"Hah, I thought this one was merged already. . I need to add another test case in the threadExecutor test in roottest to account for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:68,testability,test,test,68,"Hah, I thought this one was merged already. . I need to add another test case in the threadExecutor test in roottest to account for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:100,testability,test,test,100,"Hah, I thought this one was merged already. . I need to add another test case in the threadExecutor test in roottest to account for this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6814:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6814
https://github.com/root-project/root/pull/6816:152,deployability,patch,patch,152,In about an hour we should see this working (or not) on https://github.com/conda-forge/root-feedstock/pull/116 (once I remember to actually include the patch!...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:119,safety,reme,remember,119,In about an hour we should see this working (or not) on https://github.com/conda-forge/root-feedstock/pull/116 (once I remember to actually include the patch!...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:152,safety,patch,patch,152,In about an hour we should see this working (or not) on https://github.com/conda-forge/root-feedstock/pull/116 (once I remember to actually include the patch!...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:152,security,patch,patch,152,In about an hour we should see this working (or not) on https://github.com/conda-forge/root-feedstock/pull/116 (once I remember to actually include the patch!...),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:57,availability,Error,Error,57,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:126,deployability,configurat,configuration,126,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:244,deployability,instal,installation,244,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:329,deployability,contain,containing,329,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:444,deployability,instal,installed,444,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:126,integrability,configur,configuration,126,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:118,modifiability,pac,package,118,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:126,modifiability,configur,configuration,126,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:407,modifiability,pac,package,407,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:57,performance,Error,Error,57,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:57,safety,Error,Error,57,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:126,security,configur,configuration,126,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6816:57,usability,Error,Error,57,"Works! Example output:. ```. -- stderr output is:. CMake Error at CMakeLists.txt:61 (find_package):. Could not find a package configuration file provided by ""LLVM"" with any of. the following names:. LLVMConfig.cmake. llvm-config.cmake. Add the installation prefix of ""LLVM"" to CMAKE_PREFIX_PATH or set. ""LLVM_DIR"" to a directory containing one of the above files. If ""LLVM"". provides a separate development package or SDK, be sure it has been. installed. ```. (technically using the backport, #6819 )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6816
https://github.com/root-project/root/pull/6818:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:25,integrability,pub,published,25,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:79,integrability,discover,discover,79,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:173,integrability,discover,discovery,173,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:37,interoperability,specif,specification,37,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:79,interoperability,discover,discover,79,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:173,interoperability,discover,discovery,173,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:195,interoperability,specif,specification,195,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:95,security,token,tokens,95,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:151,security,Auth,AuthZ-WG,151,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:167,security,token,token-discovery,167,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:79,usability,discov,discover,79,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:173,usability,discov,discovery,173,"@dciangot - the WLCG has published a specification for how applications should discover bearer tokens from their environment:. https://github.com/WLCG-AuthZ-WG/bearer-token-discovery/blob/master/specification.md. This would be the first step along those lines ... unless there's a strong reason not to, it might be a good idea to implement the full spec.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:111,integrability,discover,discovery,111,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:96,interoperability,standard,standard,96,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:111,interoperability,discover,discovery,111,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:105,security,token,token,105,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:111,usability,discov,discovery,111,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:121,usability,document,document,121,@dciangot - have you had a chance to look at this and/or think about my suggestion of using the standard token discovery document?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:40,integrability,discover,discovery,40,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:25,interoperability,standard,standard,25,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:40,interoperability,discover,discovery,40,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:85,performance,time,time,85,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:109,reliability,pra,practice,109,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:34,security,token,token,34,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:40,usability,discov,discovery,40,"@bbockelm the use of the standard token discovery sounds good to me, but haven't got time to look at that in practice yet. . Unfortunately this is not a top priority from my side atm, so it's sort of best effort. Nevertheless if you find it anyway useful or urgent I can try to enhance it a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6818:25,usability,close,close,25,@dciangot I think we can close this PR in favor of merged #7068?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6818
https://github.com/root-project/root/pull/6819:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6819
https://github.com/root-project/root/pull/6819:0,availability,Failur,Failures,0,"Failures are not related to changes, I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6819
https://github.com/root-project/root/pull/6819:0,deployability,Fail,Failures,0,"Failures are not related to changes, I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6819
https://github.com/root-project/root/pull/6819:0,performance,Failur,Failures,0,"Failures are not related to changes, I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6819
https://github.com/root-project/root/pull/6819:0,reliability,Fail,Failures,0,"Failures are not related to changes, I am merging PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6819
https://github.com/root-project/root/issues/6820:91,deployability,upgrad,upgrade,91,"We are aware of this issue. There is nothing we can do about it, only hoping that the llvm upgrade will fix the issue...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:91,modifiability,upgrad,upgrade,91,"We are aware of this issue. There is nothing we can do about it, only hoping that the llvm upgrade will fix the issue...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:113,deployability,version,version,113,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:305,deployability,upgrad,upgrade,305,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:605,deployability,releas,released,605,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:113,integrability,version,version,113,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:104,interoperability,specif,specific,104,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:113,modifiability,version,version,113,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:305,modifiability,upgrad,upgrade,305,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:782,usability,experien,experience,782,"Hi @bellenot ,. > We are aware of this issue. . you mean general problems with VS or problems with this specific version? Asking while 16.8 is quite recent, e.g. github has 16.7 on runners. And 16.7 can be tweaked to produce the dictionaries. So these could be separate issues. >only hoping that the llvm upgrade will fix the issue... In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:67,deployability,version,version,67,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:98,deployability,version,versions,98,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:161,deployability,releas,released,161,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:448,deployability,releas,released,448,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:67,integrability,version,version,67,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:98,integrability,version,versions,98,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:58,interoperability,specif,specific,58,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:89,interoperability,specif,specific,89,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:67,modifiability,version,version,67,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:98,modifiability,version,versions,98,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:712,performance,time,time,712,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:809,performance,time,time,809,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:625,usability,experien,experience,625,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:840,usability,Visual,Visual,840,"> you mean general problems with VS or problems with this specific version? I mean these specific versions (v16.8.0 and v16.8.1). I saw the problem the day they released it. > In my opinion VS and llvm separately are not nice things to deal with and their combination should not be easier to handle. > That is outside of scope of this issue, but maybe one can try to look at some alternatives to VS. NVIDIA/PGI could be a good candidate once it is released in the free HPC suite for Windows as they promise. But I don't know how do they organize their headers on Windows and how much VS machinery they use. Someone with more experience should evaluate this idea. I'll keep the VS option, and don't want to spend time trying all possible alternatives out there (I did it in the past and don't want to waste my time anymore). Most people use Visual Studio on Windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:33,deployability,version,versions,33,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:33,integrability,version,versions,33,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:24,interoperability,specif,specific,24,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:33,modifiability,version,versions,33,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:73,reliability,doe,does,73,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:152,usability,close,close,152,"Hi @bellenot, . > these specific versions. Then, if you are aware of it, does it makes sense to keep the issue open? If you think not, either of us can close it. Thanks a lot,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:60,deployability,upgrad,upgrade,60,"Hi @andriish, no problem to keep it open, at least until we upgrade llvm.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:60,modifiability,upgrad,upgrade,60,"Hi @andriish, no problem to keep it open, at least until we upgrade llvm.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:15,deployability,updat,updated,15,". Today github updated VS and now the default compiler is 'MSVC 19.28.29333.0', which has this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:15,safety,updat,updated,15,". Today github updated VS and now the default compiler is 'MSVC 19.28.29333.0', which has this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:15,security,updat,updated,15,". Today github updated VS and now the default compiler is 'MSVC 19.28.29333.0', which has this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:95,deployability,updat,update,95,"Hi @bellenot ,. sorry if that looks like noise. This is technically irrelevant, of course. The update would just mean that anyone using github CI to build dictionaries will see this problem. So there might be more affected people. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:149,deployability,build,build,149,"Hi @bellenot ,. sorry if that looks like noise. This is technically irrelevant, of course. The update would just mean that anyone using github CI to build dictionaries will see this problem. So there might be more affected people. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:95,safety,updat,update,95,"Hi @bellenot ,. sorry if that looks like noise. This is technically irrelevant, of course. The update would just mean that anyone using github CI to build dictionaries will see this problem. So there might be more affected people. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:95,security,updat,update,95,"Hi @bellenot ,. sorry if that looks like noise. This is technically irrelevant, of course. The update would just mean that anyone using github CI to build dictionaries will see this problem. So there might be more affected people. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:69,deployability,updat,update,69,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:82,deployability,version,version,82,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:133,deployability,releas,release,133,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:82,integrability,version,version,82,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:82,modifiability,version,version,82,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:113,performance,time,time,113,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:206,performance,deadlock,deadlock,206,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:69,safety,updat,update,69,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:184,safety,prevent,prevent,184,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:69,security,updat,update,69,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:184,security,preven,prevent,184,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:93,usability,Visual,Visual,93,"OK, I see, this is obviously an issue, like for people (like me) who update their version of Visual Studio every time there is a new release... (but now I do that on a dedicated VM to prevent this kind of ""deadlock""). And thanks for the information!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:158,availability,failur,failures,158,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:11,deployability,version,version,11,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:158,deployability,fail,failures,158,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:192,deployability,updat,update,192,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:11,integrability,version,version,11,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:11,modifiability,version,version,11,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:94,performance,time,time,94,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:158,performance,failur,failures,158,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:158,reliability,fail,failures,158,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:192,safety,updat,update,192,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:192,security,updat,update,192,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:22,usability,Visual,Visual,22,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/issues/6820:102,usability,close,close,102,"OK, latest version of Visual Studio (v16.10.0) is broken again, and this will not be the last time. I close this issue since it is not up to date anyway (the failures are different at each VS update...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6820
https://github.com/root-project/root/pull/6821:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:4,availability,failur,failure,4,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:4,deployability,fail,failure,4,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:53,deployability,modul,module,53,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:53,modifiability,modul,module,53,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:4,performance,failur,failure,4,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:4,reliability,fail,failure,4,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/pull/6821:53,safety,modul,module,53,The failure on macos is pre-existing (missing python module),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6821
https://github.com/root-project/root/issues/6822:42,performance,time,time,42,"Yes, I can confirm a problem. At the same time ""colz"" works properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:11,usability,confirm,confirm,11,"Yes, I can confirm a problem. At the same time ""colz"" works properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:142,usability,close,close,142,Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:330,usability,guid,guide,330,Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:800,security,auth,authored,800,". Yeah, I found it in the guide. Thanks a lot. Best Regards，. Long LI. --------------------------------------------------------------------------. Institute of Frontier and Interdisciplinary Science, Shandong University. Addr：NO.72 Binhaidadao,Jimo,Qindao,PRC. E-mail: longli@mail.sdu.edu.cn. Tel: +86 13176405608 . . On 11/17/2020 16:28，Olivier Couet<notifications@github.com> wrote：. Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section. —. You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:26,usability,guid,guide,26,". Yeah, I found it in the guide. Thanks a lot. Best Regards，. Long LI. --------------------------------------------------------------------------. Institute of Frontier and Interdisciplinary Science, Shandong University. Addr：NO.72 Binhaidadao,Jimo,Qindao,PRC. E-mail: longli@mail.sdu.edu.cn. Tel: +86 13176405608 . . On 11/17/2020 16:28，Olivier Couet<notifications@github.com> wrote：. Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section. —. You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:528,usability,close,close,528,". Yeah, I found it in the guide. Thanks a lot. Best Regards，. Long LI. --------------------------------------------------------------------------. Institute of Frontier and Interdisciplinary Science, Shandong University. Addr：NO.72 Binhaidadao,Jimo,Qindao,PRC. E-mail: longli@mail.sdu.edu.cn. Tel: +86 13176405608 . . On 11/17/2020 16:28，Olivier Couet<notifications@github.com> wrote：. Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section. —. You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:716,usability,guid,guide,716,". Yeah, I found it in the guide. Thanks a lot. Best Regards，. Long LI. --------------------------------------------------------------------------. Institute of Frontier and Interdisciplinary Science, Shandong University. Addr：NO.72 Binhaidadao,Jimo,Qindao,PRC. E-mail: longli@mail.sdu.edu.cn. Tel: +86 13176405608 . . On 11/17/2020 16:28，Olivier Couet<notifications@github.com> wrote：. Col2 option is a bitmap Representation of the histogram to make the col option very fast when the histogram has many bins and the bin size is close to one pixel. But this bitmap graphics and ps and pdf are vector graphics. So col2 produces an empty plot. This is not a bug. This feature is explained in the THistPainter reference guide (look at it) in the COL Option section. —. You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:22,deployability,automat,automatically,22,"Olivier, can one just automatically switch to col option when doing batch output with `gVirtualPS`? . Just to avoid confusion in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:68,integrability,batch,batch,68,"Olivier, can one just automatically switch to col option when doing batch output with `gVirtualPS`? . Just to avoid confusion in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:68,performance,batch,batch,68,"Olivier, can one just automatically switch to col option when doing batch output with `gVirtualPS`? . Just to avoid confusion in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:110,safety,avoid,avoid,110,"Olivier, can one just automatically switch to col option when doing batch output with `gVirtualPS`? . Just to avoid confusion in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:22,testability,automat,automatically,22,"Olivier, can one just automatically switch to col option when doing batch output with `gVirtualPS`? . Just to avoid confusion in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:184,integrability,batch,batch,184,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:32,performance,time,time,32,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:184,performance,batch,batch,184,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:207,performance,disk,disk,207,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:321,safety,avoid,avoid,321,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6822:366,usability,guid,guide,366,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6822
https://github.com/root-project/root/issues/6824:58,performance,time,time,58,"We are aware of such kind of issue, but we will have hard time trying to fix all Windows/VS limitations... I'll keep it in my list anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6824
https://github.com/root-project/root/issues/6824:60,deployability,contain,containing,60,"I propose to close this issue because:. 1. This is a string containing the fwd declarations of the selected classes in a dictionary. The limit of 16k chars is very high. 2. In case it's encountered, one can always split the dictionary in 2 dictionaries. 3. It's a limitation of VS not of ROOT. @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6824
https://github.com/root-project/root/issues/6824:13,usability,close,close,13,"I propose to close this issue because:. 1. This is a string containing the fwd declarations of the selected classes in a dictionary. The limit of 16k chars is very high. 2. In case it's encountered, one can always split the dictionary in 2 dictionaries. 3. It's a limitation of VS not of ROOT. @bellenot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6824
https://github.com/root-project/root/pull/6825:83,deployability,instal,installed,83,@jalopezg-r00t @jblomer as a follow up from ROOT IO meeting looks like Daos can be installed by via rpms https://daos-stack.github.io/admin/installation/#installing-daos-from-rpms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:118,deployability,stack,stack,118,@jalopezg-r00t @jblomer as a follow up from ROOT IO meeting looks like Daos can be installed by via rpms https://daos-stack.github.io/admin/installation/#installing-daos-from-rpms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:140,deployability,instal,installation,140,@jalopezg-r00t @jblomer as a follow up from ROOT IO meeting looks like Daos can be installed by via rpms https://daos-stack.github.io/admin/installation/#installing-daos-from-rpms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:154,deployability,instal,installing-daos-from-rpms,154,@jalopezg-r00t @jblomer as a follow up from ROOT IO meeting looks like Daos can be installed by via rpms https://daos-stack.github.io/admin/installation/#installing-daos-from-rpms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:223,availability,error,error,223,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:7,deployability,fail,fail-on-missing,7,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:196,deployability,fail,fail-on-missing,196,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:223,performance,error,error,223,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:7,reliability,fail,fail-on-missing,7,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:196,reliability,fail,fail-on-missing,196,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:223,safety,error,error,223,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6825:223,usability,error,error,223,"> drop fail-on-missing or communicate this feature with LCG. Can we not use the usual approach? If daos is not turned off, look for daos, leave daos on if found. If not found, turn it off, unless fail-on-missing where we'd error out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6825
https://github.com/root-project/root/pull/6826:8,availability,error,error,8,"Windows error seems spurious, and we have a Jenkins / GH communication problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6826
https://github.com/root-project/root/pull/6826:8,performance,error,error,8,"Windows error seems spurious, and we have a Jenkins / GH communication problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6826
https://github.com/root-project/root/pull/6826:8,safety,error,error,8,"Windows error seems spurious, and we have a Jenkins / GH communication problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6826
https://github.com/root-project/root/pull/6826:8,usability,error,error,8,"Windows error seems spurious, and we have a Jenkins / GH communication problem...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6826
https://github.com/root-project/root/pull/6827:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6827
https://github.com/root-project/root/pull/6828:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6828
https://github.com/root-project/root/pull/6828:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6828
https://github.com/root-project/root/pull/6828:1,safety,review,reviewers,1,@reviewers please take a look!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6828
https://github.com/root-project/root/pull/6828:1,testability,review,reviewers,1,@reviewers please take a look!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6828
https://github.com/root-project/root/pull/6831:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6831
https://github.com/root-project/root/pull/6833:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6833
https://github.com/root-project/root/pull/6834:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6834
https://github.com/root-project/root/pull/6834:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6834
https://github.com/root-project/root/pull/6834:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6834
https://github.com/root-project/root/pull/6836:8,deployability,fail,failed,8,Jenkins failed because I aborted it. The changes are only comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6836
https://github.com/root-project/root/pull/6836:8,reliability,fail,failed,8,Jenkins failed because I aborted it. The changes are only comments.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6836
https://github.com/root-project/root/issues/6837:32,interoperability,share,share,32,Thanks for your report! Can you share `_cpp_ACLiC_dict.cxx`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:210,availability,error,error,210,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1207,availability,error,error,1207,"error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:2379,availability,error,error,2379,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3551,availability,error,error,3551,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5171,availability,error,error,5171,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6791,availability,error,error,6791,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8411,availability,error,error,8411,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10344,availability,error,error,10344,"AME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11666,availability,error,error,11666,"{ if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13934,availability,state,statement,13934,"nalysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14513,availability,error,error,14513,"‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15880,availability,error,error,15880,"~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17985,availability,error,error,17985," of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18479,availability,error,error,18479,"ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18960,availability,error,error,18960,"lude/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19686,availability,error,error,19686,"mpton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20401,availability,error,error,20401,~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23258,availability,error,error,23258,"~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23407,availability,Error,Error,23407,"OT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:216,deployability,log,log,216,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:24598,deployability,fail,failed,24598,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10642,integrability,pub,public,10642,"ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11964,integrability,pub,public,11964,"ICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13934,integrability,state,statement,13934,"nalysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:43",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18028,integrability,pub,public,18028,"_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { pu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18062,integrability,pub,public,18062,"_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18507,integrability,pub,public,18507,"_UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_AC",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18541,integrability,pub,public,18541,"InstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18995,integrability,pub,public,18995,"ed primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XY",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19029,integrability,pub,public,19029,"ic’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:778,interoperability,share,shared,778,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:24065,interoperability,share,shared,24065,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13313,modifiability,variab,variable,13313,"_). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XY",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13340,modifiability,variab,variable,13340,"ld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13507,modifiability,variab,variable,13507,"~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13534,modifiability,variab,variable,13534,"e/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15887,modifiability,variab,variable,15887,"~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:210,performance,error,error,210,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1207,performance,error,error,1207,"error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:2379,performance,error,error,2379,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3551,performance,error,error,3551,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5171,performance,error,error,5171,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6791,performance,error,error,6791,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8411,performance,error,error,8411,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10344,performance,error,error,10344,"AME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11666,performance,error,error,11666,"{ if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14513,performance,error,error,14513,"‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15880,performance,error,error,15880,"~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17985,performance,error,error,17985," of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18479,performance,error,error,18479,"ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18960,performance,error,error,18960,"lude/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19686,performance,error,error,19686,"mpton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20401,performance,error,error,20401,~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23258,performance,error,error,23258,"~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23407,performance,Error,Error,23407,"OT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13711,reliability,doe,does,13711,"::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:24598,reliability,fail,failed,24598,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:210,safety,error,error,210,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:216,safety,log,log,216,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1207,safety,error,error,1207,"error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:2379,safety,error,error,2379,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3551,safety,error,error,3551,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5171,safety,error,error,5171,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6791,safety,error,error,6791,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8411,safety,error,error,8411,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10344,safety,error,error,10344,"AME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11666,safety,error,error,11666,"{ if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14513,safety,error,error,14513,"‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15880,safety,error,error,15880,"~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17985,safety,error,error,17985," of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18479,safety,error,error,18479,"ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18960,safety,error,error,18960,"lude/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19686,safety,error,error,19686,"mpton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20401,safety,error,error,20401,~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23258,safety,error,error,23258,"~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23407,safety,Error,Error,23407,"OT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:216,security,log,log,216,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:373,security,Team,Team,373,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20440,security,token,token,20440,9InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:216,testability,log,log,216,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:210,usability,error,error,210,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:552,usability,help,help,552,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:806,usability,Document,Documents,806,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:977,usability,Document,Documents,977,"Thanks. I do no find the .cxx, just the .pcm as a binary . [compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1098,usability,Document,Documents,1098,"ip](https://github.com/root-project/root/files/5577670/compare_Compton3_cpp_ACLiC_dict_rdict.pcm.zip). See error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1207,usability,error,error,1207,"error log here:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 18 2020, 17:03:24 |. | From heads/master@v6-23-01-RF-binSampling-155-g2cc56b30d2 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing compare_Compton3.cpp+(""XYZ_1209"",""RangePMMA"",27)... Info in <TUnixSystem::ACLiC>: creating shared library /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:1939,usability,Document,Documents,1939,"RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:2270,usability,Document,Documents,2270,"edIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:2379,usability,error,error,2379,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDum",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3111,usability,Document,Documents,3111,"ericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateIni",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3442,usability,Document,Documents,3442,"edIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3551,usability,error,error,3551,"ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:3892,usability,Document,Documents,3892,"/opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:4730,usability,Document,Documents,4730,"t. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5062,usability,Document,Documents,5062,"icClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5171,usability,error,error,5171,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:5512,usability,Document,Documents,5512,"opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6350,usability,Document,Documents,6350,"t. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6682,usability,Document,Documents,6682,"icClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:6791,usability,error,error,6791,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:7132,usability,Document,Documents,7132,"opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:7970,usability,Document,Documents,7970,"t. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateIn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8302,usability,Document,Documents,8302,"icClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8411,usability,error,error,8411,"ICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:8752,usability,Document,Documents,8752,"opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:9590,usability,Document,Documents,9590,"t. ^. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10114,usability,Document,Documents,10114,"pansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # defin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10235,usability,Document,Documents,10235,"5:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Físic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:10344,usability,error,error,10344,"AME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11225,usability,Document,Documents,11225,"rdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:60: error: stray ‘\303’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11557,usability,Document,Documents,11557,".h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Físic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:11666,usability,error,error,11666,"{ if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in ex",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:12547,usability,Document,Documents,12547,"rdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:61: error: stray ‘\255’ in program. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIF��sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^. /opt/root_bld/include/Rtypes.h:352:62: note: in definition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:12901,usability,Document,Documents,12901,"finition of macro ‘R__UseDummy’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13022,usability,Document,Documents,13022,"_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(camp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13199,usability,Document,Documents,13199,"ote: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13393,usability,Document,Documents,13393," of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13587,usability,Document,Documents,13587,"/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:13822,usability,Document,Documents,13822,"NIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:41:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp: In function ‘void compare_Compton3(TString, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14148,usability,Document,Documents,14148,"ng, TString, UInt_t, TString)’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14269,usability,Document,Documents,14269,"e_Compton3.cpp:284:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14404,usability,Document,Documents,14404,"/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:342:22: warning: unused variable ‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:14513,usability,error,error,14513,"‘yofs2’ [-Wunused-variable]. Double_t yofs2 = 40;. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:13: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3.cpp:730:49: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’. if(campaign==""XYZ_1209"") x[j]/=10.; y[j]/=10.;. ^. In file included from /opt/root_bld/include/RConfig.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:13:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15440,usability,Document,Documents,15440,"ysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: expected initializer before ‘sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72’. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15771,usability,Document,Documents,15771,"re_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:15880,usability,error,error,15880,"~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:436:39: note: in definition of macro ‘_NAME3_’. # define _NAME3_(name1,name2,name3) name1##name2##name3. ^~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:16476,usability,Document,Documents,16476,"ysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:38: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:3:62: error: variable ‘ROOT::dIhomedIferdymdIDocumentsdIF ROOT::sicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dictInit72_c’ has initializer but incomplete type. #define R__DICTIONARY_FILENAME dIhomedIferdymdIDocumentsdIFísicadIPhDdIG39InVitoDosZrvdIAnalysisdIXYZ_1209dIComptonRecodIcompare_Compton3_cpp_ACLiC_dict. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17314,usability,Document,Documents,17314,"~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:435:33: note: in definition of macro ‘_NAME2_’. # define _NAME2_(name1,name2) name1##name2. ^~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:454:30: note: in expansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17838,usability,Document,Documents,17838,"pansion of macro ‘_NAME3_’. # define _R__JOIN3_(F,X,Y) _NAME3_(F,X,Y). ^~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:32: note: in expansion of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:17985,usability,error,error,17985," of macro ‘_R__JOIN3_’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~. /opt/root_bld/include/ROOT/RConfig.hxx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18131,usability,Document,Documents,18131,"xx:455:43: note: in expansion of macro ‘R__DICTIONARY_FILENAME’. # define _R__UNIQUE_DICT_(X) _R__JOIN3_(R__DICTIONARY_FILENAME,X,__LINE__). ^~~~~~~~~~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:120: note: in expansion of macro ‘_R__UNIQUE_DICT_’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18479,usability,error,error,18479,"ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compton",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18612,usability,Document,Documents,18612,"~~~~~~~~~~~~~~. In file included from /opt/root_bld/include/TObject.h:17,. from /opt/root_bld/include/TNamed.h:25,. from /opt/root_bld/include/TDictionary.h:44,. from /opt/root_bld/include/TClass.h:23,. from /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:14:. /opt/root_bld/include/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Ana",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18960,usability,error,error,18960,"lude/Rtypes.h:352:29: error: expected primary-expression before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Fís",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19098,usability,Document,Documents,19098,"} } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19420,usability,Document,Documents,19420,". ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘}’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declarat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19577,usability,Document,Documents,19577,"} } }. ~ ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACL",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19686,usability,error,error,19686,"mpton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19798,usability,Document,Documents,19798,"_UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /opt/root_bld/include/Rtypes.h:352:29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analys",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:19950,usability,Document,Documents,19950,":29: error: expected ‘,’ or ‘;’ before ‘public’. class _NAME2_(name,_c) { public: _NAME2_(name,_c)() { if (name) { } } }. ^~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-W",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20157,usability,Document,Documents,20157,co/compare_Compton3_cpp_ACLiC_dict.cxx:72:108: note: in expansion of macro ‘R__UseDummy’. static ::ROOT::TGenericClassInfo *_R__UNIQUE_DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘vo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20292,usability,Document,Documents,20292,DICT_(Init) = GenerateInitInstanceLocal((const ::SP*)0x0); R__UseDummy(_R__UNIQUE_DICT_(Init));. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20401,usability,error,error,20401,~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20491,usability,Document,Documents,20491,ompton3_cpp_ACLiC_dict.cxx: In function ‘TClass* SP_Dictionary()’:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: error: ‘SP_TClassManip’ was not declared in this scope. SP_TClassManip(theClass);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-W,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:20760,usability,Document,Documents,20760,);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:77:7: note: suggested alternative:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:21040,usability,Document,Documents,21040,ict.cxx:47:16: note: ‘ROOT::SP_TClassManip’. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx: At global scope:. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:21303,usability,Document,Documents,21303,/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:87:1: error: expected declaration before ‘}’ token. } // end of namespace ROOT. ^. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39I,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:21581,usability,Document,Documents,21581,ict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ declared ‘static’ but never defined [-Wunused-function]. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compar,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:21850,usability,Document,Documents,21850,ict.cxx:47:16: warning: ‘void ROOT::SP_TClassManip(TClass*)’ declared ‘static’ but never defined [-Wunused-function]. static void SP_TClassManip(TClass*);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:22038,usability,Document,Documents,22038,uments/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39In,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:22283,usability,Document,Documents,22283,. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:22513,usability,Document,Documents,22513,"ic void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ declared ‘static’ but never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonRec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:22749,usability,Document,Documents,22749,"never defined [-Wunused-function]. static void destruct_SP(void *p);. ^~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:50:16: warning: ‘void ROOT::destruct_SP(void*)’ used but never defined. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23017,usability,Document,Documents,23017,"d. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:49:16: warning: ‘void ROOT::deleteArray_SP(void*)’ used but never defined. static void deleteArray_SP(void *p);. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/Compt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23258,usability,error,error,23258,"~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23278,usability,Document,Documents,23278,"Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:48:16: warning: ‘void ROOT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23407,usability,Error,Error,23407,"OT::delete_SP(void*)’ used but never defined. static void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23453,usability,Document,Documents,23453,"atic void delete_SP(void *p);. ^~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23825,usability,Document,Documents,23825,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:23962,usability,Document,Documents,23962,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:24503,usability,Document,Documents,24503,"t.cxx:46:19: warning: ‘TClass* ROOT::SP_Dictionary()’ used but never defined. static TClass *SP_Dictionary();. ^~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:81:16: warning: ‘void SP_TClassManip(TClass*)’ defined but not used [-Wunused-function]. static void SP_TClassManip(TClass* theClass){. ^~~~~~~~~~~~~~. /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx:75:19: warning: ‘TClass* SP_Dictionary()’ defined but not used [-Wunused-function]. static TClass *SP_Dictionary() {. ^~~~~~~~~~~~~. c++: error: /home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o: No such file or directory. Error in <ACLiC>: Executing 'cd ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco"" ; c++ -fPIC -c -g -Wextra -Wall -O3 -DNDEBUG -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread -I$ROOTSYS/include -I""/opt/root_bld/etc/"" -I""/opt/root_bld/etc//cling"" -I""/opt/root_bld/include/"" -I""/opt/root_bld/include"" -D__ACLIC__ ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.cxx"" ; c++ -O3 -DNDEBUG ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/compare_Compton3_cpp_ACLiC_dict.o"" -shared ""/opt/root_bld/lib/libRint.so"" ""/opt/root_bld/lib/libCore.so"" ""/opt/root_bld/lib/libRIO.so"" ""/opt/root_bld/lib/libThread.so"" ""/opt/root_bld/lib/libCling.so"" ""/opt/root_bld/lib/libMathCore.so"" ""/opt/root_bld/lib/libImt.so"" ""/opt/root_bld/lib/libtbb.so.2"" ""/opt/root_bld/lib/libHist.so"" ""/opt/root_bld/lib/libMatrix.so"" ""/opt/root_bld/lib/libGraf.so"" ""/opt/root_bld/lib/libGpad.so"" ""/opt/root_bld/lib/libPhysics.so"" -o ""/home/ferdym/Documents/Física/PhD/G39InVitoDosZrv/Analysis/XYZ_1209/ComptonReco/./compare_Compton3_cpp.so""' failed! ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18,deployability,fail,failing,18,"This is no longer failing on:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |. | From tags/v6-30-02@ |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:18,reliability,fail,failing,18,"This is no longer failing on:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |. | From tags/v6-30-02@ |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:177,security,Team,Team,177,"This is no longer failing on:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |. | From tags/v6-30-02@ |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:360,usability,help,help,360,"This is no longer failing on:. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.30/02 https://root.cern |. | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Nov 27 2023, 19:50:38 |. | From tags/v6-30-02@ |. | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |. | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6837:25,usability,close,close,25,@vepadulano can you also close as resolved https://its.cern.ch/jira/browse/ROOT-9345 ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6837
https://github.com/root-project/root/issues/6838:135,testability,plan,planning,135,"O but that's fixed since ages - Oct 30, https://github.com/root-project/root/commit/132b72c2000b9f942cc77b5cddec4e9c7161f836 ;-). I am planning on backporting this to 6.22, see https://github.com/root-project/root/pull/6849. OK to close?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6838
https://github.com/root-project/root/issues/6838:231,usability,close,close,231,"O but that's fixed since ages - Oct 30, https://github.com/root-project/root/commit/132b72c2000b9f942cc77b5cddec4e9c7161f836 ;-). I am planning on backporting this to 6.22, see https://github.com/root-project/root/pull/6849. OK to close?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6838
https://github.com/root-project/root/issues/6838:270,security,auth,authored,270,"yes. --. Ciao,. Giulio. On 20 Nov 2020, 17:24 +0100, Axel Naumann <notifications@github.com>, wrote:. > O but that's fixed since ages - Oct 30, 132b72c ;-). > I am planning on backporting this to 6.22, see #6849. > OK to close? > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6838
https://github.com/root-project/root/issues/6838:164,testability,plan,planning,164,"yes. --. Ciao,. Giulio. On 20 Nov 2020, 17:24 +0100, Axel Naumann <notifications@github.com>, wrote:. > O but that's fixed since ages - Oct 30, 132b72c ;-). > I am planning on backporting this to 6.22, see #6849. > OK to close? > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6838
https://github.com/root-project/root/issues/6838:221,usability,close,close,221,"yes. --. Ciao,. Giulio. On 20 Nov 2020, 17:24 +0100, Axel Naumann <notifications@github.com>, wrote:. > O but that's fixed since ages - Oct 30, 132b72c ;-). > I am planning on backporting this to 6.22, see #6849. > OK to close? > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6838
https://github.com/root-project/root/issues/6839:11,testability,plan,planning,11,"We are not planning to backport Apple Silicon support to 6.20. master works fine; 6.22 will work soon, too, see https://github.com/root-project/root/pull/6849. Please let us know should you see any issues with master - which works for us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6839
https://github.com/root-project/root/issues/6839:46,usability,support,support,46,"We are not planning to backport Apple Silicon support to 6.20. master works fine; 6.22 will work soon, too, see https://github.com/root-project/root/pull/6849. Please let us know should you see any issues with master - which works for us.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6839
https://github.com/root-project/root/issues/6840:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6840
https://github.com/root-project/root/pull/6842:115,energy efficiency,core,cores,115,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:307,modifiability,responsibil,responsibility,307,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:159,safety,risk,risk,159,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:230,safety,test,test,230,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:159,security,risk,risk,159,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:230,testability,test,test,230,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:247,usability,user,user,247,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:300,usability,user,user,300,"Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:464,deployability,depend,depends,464,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:117,energy efficiency,core,cores,117,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:464,integrability,depend,depends,464,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:309,modifiability,responsibil,responsibility,309,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:372,modifiability,responsibil,responsibility,372,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:464,modifiability,depend,depends,464,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:499,performance,concurren,concurrently,499,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:161,safety,risk,risk,161,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:232,safety,test,test,232,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:464,safety,depend,depends,464,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:161,security,risk,risk,161,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:232,testability,test,test,232,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:464,testability,depend,depends,464,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:249,usability,user,user,249,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:302,usability,user,user,302,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6842:365,usability,user,user,365,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility? I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6842
https://github.com/root-project/root/pull/6844:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora30/cxx14, ROOT-debian10-i386/cxx14, mac1015/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6844
https://github.com/root-project/root/pull/6844:114,safety,permiss,permission,114,"@hahnjo please see whether you can merge this yourself, given that @lmoneta has approved this PR. You should have permission to do so.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6844
https://github.com/root-project/root/pull/6845:161,integrability,sub,subsequent,161,"Did you check the output of `textutil`? I don't think it actually converts...? But that's not a regression from what we had before this PR, we can fix that in a subsequent PR. Maybe https://gist.github.com/MagerValp/36e35384cba152fafae97dca865742f0 helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:96,testability,regress,regression,96,"Did you check the output of `textutil`? I don't think it actually converts...? But that's not a regression from what we had before this PR, we can fix that in a subsequent PR. Maybe https://gist.github.com/MagerValp/36e35384cba152fafae97dca865742f0 helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:249,usability,help,helps,249,"Did you check the output of `textutil`? I don't think it actually converts...? But that's not a regression from what we had before this PR, we can fix that in a subsequent PR. Maybe https://gist.github.com/MagerValp/36e35384cba152fafae97dca865742f0 helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:124,deployability,updat,updated,124,But please have a look at the rendered README.html. This is basically just adding `<html></html>` around the file... See my updated comment above; we need to do proper markdown-to-html conversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:185,interoperability,convers,conversion,185,But please have a look at the rendered README.html. This is basically just adding `<html></html>` around the file... See my updated comment above; we need to do proper markdown-to-html conversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:124,safety,updat,updated,124,But please have a look at the rendered README.html. This is basically just adding `<html></html>` around the file... See my updated comment above; we need to do proper markdown-to-html conversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/pull/6845:124,security,updat,updated,124,But please have a look at the rendered README.html. This is basically just adding `<html></html>` around the file... See my updated comment above; we need to do proper markdown-to-html conversion.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6845
https://github.com/root-project/root/issues/6846:19,interoperability,standard,standard,19,"never mind, I used standard cmake flags and I think it worked",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6846
https://github.com/root-project/root/pull/6847:12,availability,failur,failures,12,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:33,availability,error,errors,33,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:12,deployability,fail,failures,12,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:12,performance,failur,failures,12,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:33,performance,error,errors,33,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:12,reliability,fail,failures,12,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:33,safety,error,errors,33,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/pull/6847:33,usability,error,errors,33,All jenkins failures just upload errors on cdash,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6847
https://github.com/root-project/root/issues/6848:93,deployability,pipelin,pipeline,93,"Ok it's not as low in priority as I thought in first place. Since you may want to run such a pipeline on a large amount of files and it could well be that some of the files don't produce an output, the scenario is not as unlikely as it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6848
https://github.com/root-project/root/issues/6848:93,integrability,pipelin,pipeline,93,"Ok it's not as low in priority as I thought in first place. Since you may want to run such a pipeline on a large amount of files and it could well be that some of the files don't produce an output, the scenario is not as unlikely as it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6848
https://github.com/root-project/root/issues/6848:202,modifiability,scenario,scenario,202,"Ok it's not as low in priority as I thought in first place. Since you may want to run such a pipeline on a large amount of files and it could well be that some of the files don't produce an output, the scenario is not as unlikely as it seems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6848
https://github.com/root-project/root/issues/6848:55,safety,safe,safely,55,"We should not print a warning in this case, but it can safely be ignored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6848
https://github.com/root-project/root/pull/6849:11,deployability,build,build,11,@phsft-bot build just on mac10beta/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6849
https://github.com/root-project/root/pull/6849:11,deployability,build,build,11,@phsft-bot build just on mac11.0/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6849
https://github.com/root-project/root/pull/6849:11,deployability,build,build,11,@phsft-bot build just on mac11.0/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6849
https://github.com/root-project/root/pull/6849:11,deployability,build,build,11,@phsft-bot build just on mac11.0/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6849
https://github.com/root-project/root/pull/6850:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6850
https://github.com/root-project/root/issues/6851:13,availability,error,error,13,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:27,availability,ERROR,ERROR,27,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:13,performance,error,error,13,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:27,performance,ERROR,ERROR,27,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:13,safety,error,error,13,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:27,safety,ERROR,ERROR,27,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:0,usability,Command,Command,0,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:13,usability,error,error,13,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:27,usability,ERROR,ERROR,27,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:140,usability,user,user-images,140,Command line error:. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{#int^{5}_{0} dX}{#int^{5}_{0} dX}. ```. ![image](https://user-images.githubusercontent.com/2939755/99827936-2e5b9a80-2b52-11eb-903a-cab9077a592e.png).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:221,availability,down,down,221,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:421,availability,ERROR,ERROR,421,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,deployability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:275,energy efficiency,draw,drawl,275,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:300,energy efficiency,Draw,DrawLatex,300,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,integrability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,interoperability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,modifiability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:421,performance,ERROR,ERROR,421,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,reliability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:421,safety,ERROR,ERROR,421,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,security,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:122,testability,integr,integral-with-limits-under-frac,122,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:210,testability,simpl,simplified,210,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:210,usability,simpl,simplified,210,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:421,usability,ERROR,ERROR,421,"This bug Edward reports was described at the ROOT forum two years ago by me in [this thread](https://root-forum.cern.ch/t/integral-with-limits-under-frac/31891). The MWE from that thread of mine can be further simplified down to just three lines of code actually:. ```. void drawl(). {. TLatex l;. l.DrawLatex(0.5, 0.3, ""#frac{#int_{0} v dt}{2}"");. }. ```. This snippet crashes (when ran in 6.14/04) with the same. ```. *ERROR<TLatex>: Missing denominator for #frac. ==> #frac{@{#int_{0}} v dt}{2@}. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:10,availability,error,error,10,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:183,availability,Error,Error,183,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:238,availability,error,error,238,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:266,availability,Error,Error,266,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:321,availability,error,error,321,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:63,energy efficiency,Draw,DrawLatex,63,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:10,performance,error,error,10,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:183,performance,Error,Error,183,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:238,performance,error,error,238,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:266,performance,Error,Error,266,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:321,performance,error,error,321,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:10,safety,error,error,10,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:183,safety,Error,Error,183,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:238,safety,error,error,238,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:266,safety,Error,Error,266,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:321,safety,error,error,321,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:10,usability,error,error,10,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:183,usability,Error,Error,183,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:238,usability,error,error,238,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:266,usability,Error,Error,266,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:321,usability,error,error,321,"I see the error with the 6.23 also:. ```. root [1] TLatex l; l.DrawLatex(0.5, 0.3, ""#frac{a}{#int^{5}_{0}}"");. Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. Error in <TLatex::Analyse>: It seems there is a syntax error in the TLatex string. ```. and the plot generated is wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:91,energy efficiency,Draw,Draw,91,"The following code:. ```. {. auto l1 = new TLatex(0.4, 0.3, ""#frac{a}{#int^{5}_{0}}""); l1->Draw();. auto l2 = new TLatex(0.5, 0.3, ""#frac{a}{#sum^{5}_{0}}""); l2->Draw();. auto l3 = new TLatex(0.6, 0.3, ""#frac{a}{#prod^{5}_{0}}""); l3->Draw();. }. ```. gives:. <img width=""219"" alt=""Screenshot 2021-02-12 at 12 52 41"" src=""https://user-images.githubusercontent.com/4697738/107765088-8826c780-6d31-11eb-9250-e6138442fa74.png"">. so `prod` is ok and it has the same structure as `int` and `sum` which are not. That may help to find the bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:162,energy efficiency,Draw,Draw,162,"The following code:. ```. {. auto l1 = new TLatex(0.4, 0.3, ""#frac{a}{#int^{5}_{0}}""); l1->Draw();. auto l2 = new TLatex(0.5, 0.3, ""#frac{a}{#sum^{5}_{0}}""); l2->Draw();. auto l3 = new TLatex(0.6, 0.3, ""#frac{a}{#prod^{5}_{0}}""); l3->Draw();. }. ```. gives:. <img width=""219"" alt=""Screenshot 2021-02-12 at 12 52 41"" src=""https://user-images.githubusercontent.com/4697738/107765088-8826c780-6d31-11eb-9250-e6138442fa74.png"">. so `prod` is ok and it has the same structure as `int` and `sum` which are not. That may help to find the bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:234,energy efficiency,Draw,Draw,234,"The following code:. ```. {. auto l1 = new TLatex(0.4, 0.3, ""#frac{a}{#int^{5}_{0}}""); l1->Draw();. auto l2 = new TLatex(0.5, 0.3, ""#frac{a}{#sum^{5}_{0}}""); l2->Draw();. auto l3 = new TLatex(0.6, 0.3, ""#frac{a}{#prod^{5}_{0}}""); l3->Draw();. }. ```. gives:. <img width=""219"" alt=""Screenshot 2021-02-12 at 12 52 41"" src=""https://user-images.githubusercontent.com/4697738/107765088-8826c780-6d31-11eb-9250-e6138442fa74.png"">. so `prod` is ok and it has the same structure as `int` and `sum` which are not. That may help to find the bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:329,usability,user,user-images,329,"The following code:. ```. {. auto l1 = new TLatex(0.4, 0.3, ""#frac{a}{#int^{5}_{0}}""); l1->Draw();. auto l2 = new TLatex(0.5, 0.3, ""#frac{a}{#sum^{5}_{0}}""); l2->Draw();. auto l3 = new TLatex(0.6, 0.3, ""#frac{a}{#prod^{5}_{0}}""); l3->Draw();. }. ```. gives:. <img width=""219"" alt=""Screenshot 2021-02-12 at 12 52 41"" src=""https://user-images.githubusercontent.com/4697738/107765088-8826c780-6d31-11eb-9250-e6138442fa74.png"">. so `prod` is ok and it has the same structure as `int` and `sum` which are not. That may help to find the bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:514,usability,help,help,514,"The following code:. ```. {. auto l1 = new TLatex(0.4, 0.3, ""#frac{a}{#int^{5}_{0}}""); l1->Draw();. auto l2 = new TLatex(0.5, 0.3, ""#frac{a}{#sum^{5}_{0}}""); l2->Draw();. auto l3 = new TLatex(0.6, 0.3, ""#frac{a}{#prod^{5}_{0}}""); l3->Draw();. }. ```. gives:. <img width=""219"" alt=""Screenshot 2021-02-12 at 12 52 41"" src=""https://user-images.githubusercontent.com/4697738/107765088-8826c780-6d31-11eb-9250-e6138442fa74.png"">. so `prod` is ok and it has the same structure as `int` and `sum` which are not. That may help to find the bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:124,testability,understand,understand,124,I found the [culprit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2). Now we need to understand why this was done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,deployability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,deployability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:293,energy efficiency,Draw,DrawLatex,293,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:342,energy efficiency,Draw,DrawLatex,342,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:382,energy efficiency,Draw,DrawLatex,382,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,integrability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,integrability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,interoperability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,interoperability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,modifiability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,modifiability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,reliability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,reliability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,security,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,security,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:151,testability,integr,integral,151,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:191,testability,integr,integral,191,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:506,usability,user,user-images,506,"If we revert the changes done in this [commit](https://github.com/root-project/root/commit/b9256d1864a30d33e121eddf4398fe73c43d3ad2) The fraction with integral is fine, but the limits of the integral are misplaced in case a greek character appears in front of the `#int`. ```. {. TLatex l;. l.DrawLatex(0.2,0.5,""#nuabc#int^{1-x}_{2#pi}"");. l.DrawLatex(0.5,0.5,""#sigma^{C}_{T}"");. l.DrawLatex(0.8,0.5,""#frac{a}{#int^{5}_{0}}"");. }. ```. <img width=""512"" alt=""Screenshot 2021-02-22 at 16 56 30"" src=""https://user-images.githubusercontent.com/4697738/108733783-16b7f780-752f-11eb-8076-5be7e191dc84.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:19,availability,state,state,19,@couet what is the state of this item? Can you propose a path to the solution and implement it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:19,integrability,state,state,19,@couet what is the state of this item? Can you propose a path to the solution and implement it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/issues/6851:46,performance,time,time,46,I am afraid there is no fix. I spent a lot of time on it. If we fix something then something else breaks... I am afraid we should leave it as it is and use TMathText for such formulae.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6851
https://github.com/root-project/root/pull/6852:135,interoperability,compatib,compatibility,135,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:66,safety,valid,valid,66,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:80,security,expos,exposing,80,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:196,security,expos,expose,196,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:228,usability,user,user,228,"@pcanal suggestions to get us out of this situation? We can break valid code by exposing our `using namespace std`, we break backwards compatibility by not doing it. I'd argue only ACLiC needs to expose `using namespace std` to user code, that would give the best of both worlds. Agreed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:274,usability,user,users,274,I agree. For code that is usually compiled by itself it is unlikely that the header are relying on the dictionary to provide the using namespace std (so they either don't need it or have it on their own). By scripts and thus ACLiC are a different story. If we have 50 cases users are also likely to have a lot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6852:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6852
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/defaul with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/defaul with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/defaul with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/pull/6854:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6854
https://github.com/root-project/root/issues/6855:36,deployability,build,build,36,"@oshadura please let us know of any build system requirements / recommendations you have here, e.g. where to do this config test and how to convey the result (""need -lgcc"") to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:124,safety,test,test,124,"@oshadura please let us know of any build system requirements / recommendations you have here, e.g. where to do this config test and how to convey the result (""need -lgcc"") to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:124,testability,test,test,124,"@oshadura please let us know of any build system requirements / recommendations you have here, e.g. where to do this config test and how to convey the result (""need -lgcc"") to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:609,availability,error,error,609,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:795,availability,error,error,795,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:974,availability,Error,Error,974,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:198,deployability,fail,fails,198,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:810,deployability,Fail,Failed,810,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:832,deployability,modul,module,832,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:912,deployability,modul,module,912,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:921,deployability,Modul,ModuleNotFoundError,921,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:945,deployability,modul,module,945,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1000,deployability,Modul,Modules,1000,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1112,deployability,Stack,Stack,1112,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1162,deployability,Modul,Modules,1162,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1241,deployability,build,build,1241,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1250,deployability,BUILD,BUILDTYPE,1250,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1260,deployability,Releas,Release,1260,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1312,deployability,modul,modules,1312,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1388,deployability,build,build,1388,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1397,deployability,BUILD,BUILDTYPE,1397,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1407,deployability,Releas,Release,1407,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:287,energy efficiency,cpu,cpu,287,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1049,integrability,messag,message,1049,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:988,interoperability,share,share,988,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1049,interoperability,messag,message,1049,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1150,interoperability,share,share,1150,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:832,modifiability,modul,module,832,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:912,modifiability,modul,module,912,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:921,modifiability,Modul,ModuleNotFoundError,921,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:945,modifiability,modul,module,945,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1000,modifiability,Modul,Modules,1000,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1162,modifiability,Modul,Modules,1162,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1312,modifiability,modul,modules,1312,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:287,performance,cpu,cpu,287,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:609,performance,error,error,609,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:795,performance,error,error,795,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:974,performance,Error,Error,974,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:198,reliability,fail,fails,198,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:810,reliability,Fail,Failed,810,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:609,safety,error,error,609,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:701,safety,test,tests,701,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:795,safety,error,error,795,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:832,safety,modul,module,832,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:912,safety,modul,module,912,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:921,safety,Modul,ModuleNotFoundError,921,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:945,safety,modul,module,945,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:974,safety,Error,Error,974,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1000,safety,Modul,Modules,1000,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1162,safety,Modul,Modules,1162,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:1312,safety,modul,modules,1312,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:701,testability,test,tests,701,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:847,testability,Trace,Traceback,847,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:609,usability,error,error,609,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:795,usability,error,error,795,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:974,usability,Error,Error,974,"@Axel-Naumann . ```cmake. if(CMAKE_CXX_COMPILER_ID STREQUAL ""GNU"" AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 5 AND CMAKE_CXX_COMPILER_VERSION VERSION_LESS 6). # gcc 5 has a bug in that it fails to put its internal -lgcc into the right place when linking. # We need it to check cpu flags in src/InitUtils.cxx. # Here, we add an explicit link instruction according to the workaround posted here:. # https://bugs.launchpad.net/ubuntu/+source/gcc-5/+bug/1568899. target_link_libraries(RooFitCore PRIVATE -lgcc_s -lgcc). endif(). ```. This is the code in `roofit/roofitcore/CMakeLists.txt` So the linker error is solved if we run this `target_link_libraries` in this machine. I could not run the tests in the machine because `roottest` was `OFF` and when I tried to switch it on I got this error . ```sh. Failed to find Python module pytest: Traceback (most recent call last):. File ""<string>"", line 1, in <module>. ModuleNotFoundError: No module named 'pytest'. CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):. Could NOT find py_pytest (missing: PY_PYTEST). Call Stack (most recent call first):. /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/cmake/modules/RoottestMacros.cmake:1124 (find_package_handle_standard_args). /mnt/build/ws/BUILDTYPE/Release/LABEL/ROOT-fedora29/V/master/roottest/python/CMakeLists.txt:8 (find_python_module). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:189,deployability,build,build,189,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:224,deployability,version,versions,224,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:224,integrability,version,versions,224,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:215,interoperability,specif,specific,215,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:224,modifiability,version,versions,224,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:285,safety,detect,detect,285,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6855:285,security,detect,detect,285,"Also, I have found this: https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/thread/ZM2L65WIZEEQHHLFERZYD5FAG7QY2OGB/. Looks like this affects potentially every gcc build in fedora, not only specific versions of gcc. Should I convert this `if` in CMake to just detect the GNU compiler?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6855
https://github.com/root-project/root/issues/6856:38,availability,error,error,38,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:87,deployability,version,version,87,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:114,deployability,version,version,114,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:201,deployability,instal,installed,201,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:253,deployability,releas,releases,253,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:548,deployability,build,builds,548,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:574,deployability,instal,install,574,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:87,integrability,version,version,87,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:114,integrability,version,version,114,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:229,integrability,coupl,couple,229,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:87,modifiability,version,version,87,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:114,modifiability,version,version,114,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:229,modifiability,coupl,couple,229,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:38,performance,error,error,38,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:44,reliability,DOE,DOES,44,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:38,safety,error,error,38,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:229,testability,coupl,couple,229,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:38,usability,error,error,38,"Hi,. thank you for the report. > This error DOES NOT appear on Ubuntu 20.04.1 LTS, gcc version 9.3.0. Is the ROOT version on Ubuntu 20.04 still 6.22/02? I could not reproduce this with a ROOT v6.22/02 installed via conda or in a couple of different LCG releases that I tried out on LXPLUS. Could you provide a recipe to reproduce this on our side (e.g. on LXPLUS)? Could this issue be an instance of https://sft.its.cern.ch/jira/browse/ROOT-11025 (fixed in master and 6.22/04)? If yes, could you please check whether it is fixed in ROOT's [nightly builds](https://root.cern/install/nightlies/)? Cheers,. Enrico",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:278,availability,down,download,278,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:76,deployability,observ,observe,76,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:238,deployability,version,version,238,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:326,deployability,build,build,326,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:455,deployability,Modul,ModuleNotFoundError,455,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:479,deployability,modul,module,479,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:238,integrability,version,version,238,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:94,modifiability,variab,variable,94,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:128,modifiability,variab,variables,128,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:194,modifiability,Concern,Concerning,194,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:238,modifiability,version,version,238,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:455,modifiability,Modul,ModuleNotFoundError,455,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:479,modifiability,modul,module,479,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:332,reliability,doe,does,332,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:455,safety,Modul,ModuleNotFoundError,455,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:479,safety,modul,module,479,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:171,security,sign,signature,171,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:76,testability,observ,observe,76,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:194,testability,Concern,Concerning,194,"Thanks for the fast response. The issue 11025 is definitely the same that I observe. The last variable in the list of protected variables is TSelectorList *fOutput;. Same signature as my issue. Concerning Ubuntu, yes, it is the same ROOT version, but different compiler. I will download 6.22/04 and compile. Using the nightly build does not work, source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-slc6-gcc7-opt/setup.sh . python. import ROOT. ModuleNotFoundError: No module named 'ROOT'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:16,deployability,version,version,16,"For the nightly version, could you try using `python3` rather than `python`? `python` probably points to `python2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:16,integrability,version,version,16,"For the nightly version, could you try using `python3` rather than `python`? `python` probably points to `python2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:16,modifiability,version,version,16,"For the nightly version, could you try using `python3` rather than `python`? `python` probably points to `python2`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:364,availability,avail,available,364,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:160,deployability,modul,module,160,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:169,deployability,Modul,ModuleNotFoundError,169,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:193,deployability,modul,module,193,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:344,deployability,version,version,344,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:344,integrability,version,version,344,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:160,modifiability,modul,module,160,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:169,modifiability,Modul,ModuleNotFoundError,169,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:193,modifiability,modul,module,193,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:344,modifiability,version,version,344,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:364,reliability,availab,available,364,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:160,safety,modul,module,160,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:169,safety,Modul,ModuleNotFoundError,169,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:193,safety,modul,module,193,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:364,safety,avail,available,364,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:364,security,availab,available,364,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:96,testability,Trace,Traceback,96,"python3. Python 3.6.5 (default, Jun 15 2019, 23:43:07) . [GCC 7.3.0] on linux. >>> import ROOT. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. ModuleNotFoundError: No module named 'ROOT'. typing root:. /usr/bin/root.exe: /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Thu/x86_64-slc6-gcc7-opt/lib/liblzma.so.5: no version information available (required by /usr/lib64/root/libCore.so.6.22). ------------------------------------------------------------------. | Welcome to ROOT 6.22/02 https://root.cern |. ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:57,deployability,version,version,57,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:99,deployability,version,version,99,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:57,integrability,version,version,57,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:99,integrability,version,version,99,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:57,modifiability,version,version,57,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:99,modifiability,version,version,99,"Ah, I think I see the problem: You are sourcing the slc6 version. Could you try again with the cc7 version?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:274,modifiability,pac,packages,274,"not much better:. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc7-opt/setup.sh . python3. Python 3.6.8 (default, Oct 13 2020, 16:18:22) . [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)] on linux ???? import ROOT. ROOT.__file__. '/usr/lib64/python3.6/site-packages/ROOT/__init__.py'. not what I want. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:29,deployability,version,version,29,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:333,deployability,releas,release,333,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:45,energy efficiency,Load,Loading,45,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:29,integrability,version,version,29,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:29,modifiability,version,version,29,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:45,performance,Load,Loading,45,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/issues/6856:142,usability,confirm,confirm,142,"Maybe an issue with the gcc7 version on LCG? Loading the nightlies with gcc10 works as well. The issue seems fixed there, but I'll let Thomas confirm. @eguiraud I saw there is a major issue with 6.22/04? Is this fixed or should we wait for 6.22/06? (we can easily pin any commit or tag, so don't necessarily need to stick to a given release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6856
https://github.com/root-project/root/pull/6857:21,availability,failur,failure,21,...assuming the i386 failure is spurious...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:21,deployability,fail,failure,21,...assuming the i386 failure is spurious...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:21,performance,failur,failure,21,...assuming the i386 failure is spurious...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:21,reliability,fail,failure,21,...assuming the i386 failure is spurious...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:203,energy efficiency,core,core,203,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:33,performance,lock,lock,33,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:50,performance,time,time,50,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:745,reliability,Doe,Doesn,745,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:828,safety,prevent,prevent,828,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:33,security,lock,lock,33,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6857:828,security,preven,prevent,828,"No, if both thread arrive at the lock at the same time (with usedEnv==false). On 11/23/20 2:08 AM, Axel Naumann wrote:. @Axel-Naumann commented on this pull request. ________________________________. In core/base/src/TUrl.cxx<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_pull_6857-23discussion-5Fr528523942&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=UWfwI6PGOKY1hmtnuMh4_A&m=ukfUznEXjXBdxDymQ6EAmLvJOoEkGLJ5U7MGPdhKPFA&s=co6lV5rF4ChE-w-mEfaE-93x95PezBrxdUj5efG1DSQ&e=>:. > if (fgSpecialProtocols). fgSpecialProtocols->Delete();. if (!fgSpecialProtocols). fgSpecialProtocols = new TObjArray;. const char *protos = gEnv->GetValue(""Url.Special"", ""file: hpss: dcache: dcap:"");. - usedEnv = kTRUE;. + usedEnv = true;. Doesn't the R__LOCKGUARD(gROOTMutex); a few lines above (line 589 in the new file) prevent that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6857
https://github.com/root-project/root/pull/6858:0,availability,Failur,Failure,0,Failure seems spurious.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6858
https://github.com/root-project/root/pull/6858:0,deployability,Fail,Failure,0,Failure seems spurious.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6858
https://github.com/root-project/root/pull/6858:0,performance,Failur,Failure,0,Failure seems spurious.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6858
https://github.com/root-project/root/pull/6858:0,reliability,Fail,Failure,0,Failure seems spurious.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6858
https://github.com/root-project/root/issues/6859:40,deployability,version,version,40,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:97,deployability,instal,install,97,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:40,integrability,version,version,40,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:12,interoperability,distribut,distribution,12,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:40,modifiability,version,version,40,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:93,security,apt,apt,93,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:131,usability,help,helps,131,"Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:35,deployability,instal,installing,35,I faced the exact same problem and installing g++ solved it. Thank you so much.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:42,deployability,version,version,42,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:99,deployability,instal,install,99,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:42,integrability,version,version,42,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:14,interoperability,distribut,distribution,14,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:42,modifiability,version,version,42,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:95,security,apt,apt,95,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6859:133,usability,help,helps,133,"> Which Linux distribution is this? Which version? Is it Ubuntu 19? If so, could you run `sudo apt install g++` and see whether that helps? thank you and sorry for the late reply.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6859
https://github.com/root-project/root/issues/6862:135,integrability,translat,translate,135,"In iminuit, when the user calls ""scan"", it runs a scan like I proposed here. The implementation is in Python, but that code is easy to translate to C++. I could try that and make a PR if you have a bit of patience. Otherwise, if you want to work on it then I suggest to have a look at the scan method in the iminuit.Minuit class to inspire your implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/issues/6862:135,interoperability,translat,translate,135,"In iminuit, when the user calls ""scan"", it runs a scan like I proposed here. The implementation is in Python, but that code is easy to translate to C++. I could try that and make a PR if you have a bit of patience. Otherwise, if you want to work on it then I suggest to have a look at the scan method in the iminuit.Minuit class to inspire your implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/issues/6862:21,usability,user,user,21,"In iminuit, when the user calls ""scan"", it runs a scan like I proposed here. The implementation is in Python, but that code is easy to translate to C++. I could try that and make a PR if you have a bit of patience. Otherwise, if you want to work on it then I suggest to have a look at the scan method in the iminuit.Minuit class to inspire your implementation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/issues/6862:109,deployability,releas,release,109,"Hi! Thanks for your reply. For now, I haven't found anyone in the ROOT team to work on this, so for the 6.34 release it's not going to happen. So I am patient :slightly_smiling_face:. What I want to focus on instead is to give the Fumili minimizer in Minuit2 some love, also trying it with RooFit. This should be beneficial for binned likelihoods",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/issues/6862:71,security,team,team,71,"Hi! Thanks for your reply. For now, I haven't found anyone in the ROOT team to work on this, so for the 6.34 release it's not going to happen. So I am patient :slightly_smiling_face:. What I want to focus on instead is to give the Fumili minimizer in Minuit2 some love, also trying it with RooFit. This should be beneficial for binned likelihoods",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/issues/6862:238,usability,minim,minimizer,238,"Hi! Thanks for your reply. For now, I haven't found anyone in the ROOT team to work on this, so for the 6.34 release it's not going to happen. So I am patient :slightly_smiling_face:. What I want to focus on instead is to give the Fumili minimizer in Minuit2 some love, also trying it with RooFit. This should be beneficial for binned likelihoods",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6862
https://github.com/root-project/root/pull/6866:12,testability,understand,understand,12,I did _not_ understand RLogger.hxx! sorry for the noise!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6866
https://github.com/root-project/root/issues/6871:46,reliability,doe,doesn,46,"Ah stupid, sry, the reproducer has a typo and doesn't return from the function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6871
https://github.com/root-project/root/pull/6873:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6873:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6873:0,availability,Failur,Failures,0,Failures are unrelated (pre-exisiting). @Axel-Naumann This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6873:0,deployability,Fail,Failures,0,Failures are unrelated (pre-exisiting). @Axel-Naumann This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6873:0,performance,Failur,Failures,0,Failures are unrelated (pre-exisiting). @Axel-Naumann This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6873:0,reliability,Fail,Failures,0,Failures are unrelated (pre-exisiting). @Axel-Naumann This is ready to merge.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6873
https://github.com/root-project/root/pull/6874:33,interoperability,conflict,conflicts,33,"@Axel-Naumann, this PR has merge conflicts. The PR is probably still relevant since it addresses a Jira issue, right? And we generally want to avoid memory leaks. (also deleting outdated bot comments to clean the PR thread)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6874
https://github.com/root-project/root/pull/6874:149,performance,memor,memory,149,"@Axel-Naumann, this PR has merge conflicts. The PR is probably still relevant since it addresses a Jira issue, right? And we generally want to avoid memory leaks. (also deleting outdated bot comments to clean the PR thread)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6874
https://github.com/root-project/root/pull/6874:143,safety,avoid,avoid,143,"@Axel-Naumann, this PR has merge conflicts. The PR is probably still relevant since it addresses a Jira issue, right? And we generally want to avoid memory leaks. (also deleting outdated bot comments to clean the PR thread)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6874
https://github.com/root-project/root/pull/6874:149,usability,memor,memory,149,"@Axel-Naumann, this PR has merge conflicts. The PR is probably still relevant since it addresses a Jira issue, right? And we generally want to avoid memory leaks. (also deleting outdated bot comments to clean the PR thread)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6874
https://github.com/root-project/root/pull/6875:11,deployability,build,build,11,@phsft-bot build just on mac11.0/default because I changed your config and want to test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:83,safety,test,test,83,@phsft-bot build just on mac11.0/default because I changed your config and want to test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:83,testability,test,test,83,@phsft-bot build just on mac11.0/default because I changed your config and want to test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:11,deployability,build,build,11,@phsft-bot build just on mac11.0/default because I might have fixed your config,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:21,safety,review,review,21,"Will go through your review comments, but first things first: `if (gDebug > 0) printf(...)` is to be replaced by. ```. R__DEBUG_HERE(""RDF"") << ""doing something in this thread""; . ```. The fact that you use R__**DEBUG**_HERE signals to `RLogger` that it should only emit this if the verbosity is >= debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:224,security,sign,signals,224,"Will go through your review comments, but first things first: `if (gDebug > 0) printf(...)` is to be replaced by. ```. R__DEBUG_HERE(""RDF"") << ""doing something in this thread""; . ```. The fact that you use R__**DEBUG**_HERE signals to `RLogger` that it should only emit this if the verbosity is >= debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:21,testability,review,review,21,"Will go through your review comments, but first things first: `if (gDebug > 0) printf(...)` is to be replaced by. ```. R__DEBUG_HERE(""RDF"") << ""doing something in this thread""; . ```. The fact that you use R__**DEBUG**_HERE signals to `RLogger` that it should only emit this if the verbosity is >= debug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:271,deployability,log,logic,271,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:239,performance,lock,locks,239,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:271,safety,log,logic,271,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:38,security,sign,signals,38,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:239,security,lock,locks,239,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:271,security,log,logic,271,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:271,testability,log,logic,271,"> The fact that you use R__DEBUG_HERE signals to RLogger that it should only emit this if the verbosity is >= debug. @Axel-Naumann yes but to figure out whether verbosity (for the group) is >= debug, a ""raw"" `R__DEBUG_HERE` will take some locks and go through quite some logic won't it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:63,performance,lock,locking,63,"Sure, but your code does almost the same (exactly the same wrt locking), only with more code lines ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:20,reliability,doe,does,20,"Sure, but your code does almost the same (exactly the same wrt locking), only with more code lines ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:63,security,lock,locking,63,"Sure, but your code does almost the same (exactly the same wrt locking), only with more code lines ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:531,deployability,log,log,531,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:87,integrability,event,event,87,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:361,integrability,event,event,361,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:624,integrability,event,event,624,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:191,performance,cach,cached,191,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:224,performance,lock,lock,224,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:266,performance,lock,locking,266,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:495,performance,lock,locks,495,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:507,performance,time,time,507,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:669,reliability,doe,does,669,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:531,safety,log,log,531,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:224,security,lock,lock,224,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:266,security,lock,locking,266,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:495,security,lock,locks,495,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:531,security,log,log,531,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:531,testability,log,log,531,"I don't think so? I was proposing to retrieve the verbosity level once, before the RDF event loop, and then only call `R__DEBUG_HERE` if the verbosity level requires it (and the check on the cached verbosity level would not lock, so in the common case you'd have no locking). This is at the cost of ignoring changes in the verbosity level that occur during the event loop, of course. I'm open to better solutions :smile:. But I don't think it's reasonable, as a pattern, to unconditionally take locks every time we _might_ want to log something, it would mean that RDF cannot ever put a `R__DEBUG_HERE` or `R__INFO_HERE` in event loop code. `if (gDebug > 0) Info(...)` does not have that issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:176,energy efficiency,current,current,176,"> if (gDebug > 0) Info(...) does not have that issue. To be correct, gDebug (and it's replacement) should be an atomic. Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:28,reliability,doe,does,28,"> if (gDebug > 0) Info(...) does not have that issue. To be correct, gDebug (and it's replacement) should be an atomic. Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:208,testability,simpl,simple,208,"> if (gDebug > 0) Info(...) does not have that issue. To be correct, gDebug (and it's replacement) should be an atomic. Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:208,usability,simpl,simple,208,"> if (gDebug > 0) Info(...) does not have that issue. To be correct, gDebug (and it's replacement) should be an atomic. Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:58,energy efficiency,current,current,58,"> Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)? There are verbosity levels (fatal...debug), both global and per ""channel"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:90,testability,simpl,simple,90,"> Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)? There are verbosity levels (fatal...debug), both global and per ""channel"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:90,usability,simpl,simple,90,"> Also (I probably missed something) are we replacing the current multi-level gDebug by a simple bool? (I.e. either nothing or a flood of a data)? There are verbosity levels (fatal...debug), both global and per ""channel"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:68,deployability,Depend,Depending,68,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:68,integrability,Depend,Depending,68,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:68,modifiability,Depend,Depending,68,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:85,performance,perform,performance,85,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:68,safety,Depend,Depending,68,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:68,testability,Depend,Depending,68,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:85,usability,perform,performance,85,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:125,energy efficiency,current,currently,125,"> There are verbosity levels (fatal...debug), both global and per ""channel"". Yes, so that is a decrease in functionality. We currently use both the verbosity level (fatal..debug) and for debug with also have a sub-verbosity level (technically 0 through max int)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:210,integrability,sub,sub-verbosity,210,"> There are verbosity levels (fatal...debug), both global and per ""channel"". Yes, so that is a decrease in functionality. We currently use both the verbosity level (fatal..debug) and for debug with also have a sub-verbosity level (technically 0 through max int)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:163,deployability,log,logging,163,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:219,deployability,log,logging,219,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:163,safety,log,logging,163,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:219,safety,log,logging,219,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:163,security,log,logging,163,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:219,security,log,logging,219,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:163,testability,log,logging,163,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:219,testability,log,logging,219,"Yes but in reality at `gDebug > 0` you get already _so much_ stuff printed out in an application that read/writes data, that I would gladly take the new per-group logging functionality over the old per-gDebug-threshold logging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:184,safety,safe,safety,184,"> so that is a decrease in functionality. Yeah that's something that can be fixed. I'm waiting for your brilliant solution to the issue described by Enrico: how do we deal with thread safety (esp of the channel map) vs speed? A global, thread-racy ""nobody wants more verbosity than this""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:95,integrability,messag,message,95,"It is just debug mode, the consequence of a race condition on gDebug would ""only"" be that some message may or may not be printed when intended. So it is likely fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:95,interoperability,messag,message,95,"It is just debug mode, the consequence of a race condition on gDebug would ""only"" be that some message may or may not be printed when intended. So it is likely fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,deployability,log,log,86,"For @osschar @linev @bellenot : what I want to hear from you is whether the change in log channel name is okay for you:. - ""webeve"" => ""Eve"". - ""WebDisplay"", ""webgui"", ""CanvasPainter"" => ""WebGUI"". - ""gpadv7"", ""Gpadv7"", ""drawable"", ""Gpad"", ""rstyle"", => ""GPad"". - ""Browser7"", ""rbrowser"" => ""Browser""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:220,energy efficiency,draw,drawable,220,"For @osschar @linev @bellenot : what I want to hear from you is whether the change in log channel name is okay for you:. - ""webeve"" => ""Eve"". - ""WebDisplay"", ""webgui"", ""CanvasPainter"" => ""WebGUI"". - ""gpadv7"", ""Gpadv7"", ""drawable"", ""Gpad"", ""rstyle"", => ""GPad"". - ""Browser7"", ""rbrowser"" => ""Browser""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,safety,log,log,86,"For @osschar @linev @bellenot : what I want to hear from you is whether the change in log channel name is okay for you:. - ""webeve"" => ""Eve"". - ""WebDisplay"", ""webgui"", ""CanvasPainter"" => ""WebGUI"". - ""gpadv7"", ""Gpadv7"", ""drawable"", ""Gpad"", ""rstyle"", => ""GPad"". - ""Browser7"", ""rbrowser"" => ""Browser""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,security,log,log,86,"For @osschar @linev @bellenot : what I want to hear from you is whether the change in log channel name is okay for you:. - ""webeve"" => ""Eve"". - ""WebDisplay"", ""webgui"", ""CanvasPainter"" => ""WebGUI"". - ""gpadv7"", ""Gpadv7"", ""drawable"", ""Gpad"", ""rstyle"", => ""GPad"". - ""Browser7"", ""rbrowser"" => ""Browser""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,testability,log,log,86,"For @osschar @linev @bellenot : what I want to hear from you is whether the change in log channel name is okay for you:. - ""webeve"" => ""Eve"". - ""WebDisplay"", ""webgui"", ""CanvasPainter"" => ""WebGUI"". - ""gpadv7"", ""Gpadv7"", ""drawable"", ""Gpad"", ""rstyle"", => ""GPad"". - ""Browser7"", ""rbrowser"" => ""Browser""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:161,availability,error,error,161,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,deployability,log,log,56,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:167,integrability,messag,messages,167,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:167,interoperability,messag,messages,167,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:161,performance,error,error,161,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,safety,log,log,56,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:161,safety,error,error,161,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,security,log,log,56,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,testability,log,log,56,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:161,usability,error,error,161,"> what I want to hear from you is whether the change in log channel name is okay for you:. Yes, one can change names as you propose. Up to now they was used for error messages, where source of problem can be seen anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,deployability,log,log,56,> what I want to hear from you is whether the change in log channel name is okay for you:. Fine with me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,safety,log,log,56,> what I want to hear from you is whether the change in log channel name is okay for you:. Fine with me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,security,log,log,56,> what I want to hear from you is whether the change in log channel name is okay for you:. Fine with me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:56,testability,log,log,56,> what I want to hear from you is whether the change in log channel name is okay for you:. Fine with me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:156,performance,lock,locks,156,"I believe I have addressed all your comments:. ```cpp. R__DEBUG_HERE(gRDFLog) << ""This foo has "" << TakesAWhileToCompute() << "" bars."";. ```. does not take locks and does not call `TakesAWhileToCompute()` if the verbosity (either global or `gRDFLog`'s) are less than `kDebug`. The verbosity comparisons are racy but that's what we want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:142,reliability,doe,does,142,"I believe I have addressed all your comments:. ```cpp. R__DEBUG_HERE(gRDFLog) << ""This foo has "" << TakesAWhileToCompute() << "" bars."";. ```. does not take locks and does not call `TakesAWhileToCompute()` if the verbosity (either global or `gRDFLog`'s) are less than `kDebug`. The verbosity comparisons are racy but that's what we want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:166,reliability,doe,does,166,"I believe I have addressed all your comments:. ```cpp. R__DEBUG_HERE(gRDFLog) << ""This foo has "" << TakesAWhileToCompute() << "" bars."";. ```. does not take locks and does not call `TakesAWhileToCompute()` if the verbosity (either global or `gRDFLog`'s) are less than `kDebug`. The verbosity comparisons are racy but that's what we want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:156,security,lock,locks,156,"I believe I have addressed all your comments:. ```cpp. R__DEBUG_HERE(gRDFLog) << ""This foo has "" << TakesAWhileToCompute() << "" bars."";. ```. does not take locks and does not call `TakesAWhileToCompute()` if the verbosity (either global or `gRDFLog`'s) are less than `kDebug`. The verbosity comparisons are racy but that's what we want.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,safety,review,reviews,86,"No worries, thanks for doing that, IMO the code is actually improving by each of your reviews :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:86,testability,review,reviews,86,"No worries, thanks for doing that, IMO the code is actually improving by each of your reviews :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:292,energy efficiency,reduc,reduce,292,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:311,energy efficiency,load,load,311,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:468,integrability,sub,subsequent,468,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:129,modifiability,variab,variables,129,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:311,performance,load,load,311,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6875:411,usability,usab,usable,411,"Needs some more work as suggested by Philippe:. - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);. - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";. - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6875
https://github.com/root-project/root/pull/6877:80,availability,error,error,80,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:80,performance,error,error,80,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:80,safety,error,error,80,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6877:80,usability,error,error,80,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6877
https://github.com/root-project/root/pull/6880:0,availability,Failur,Failures,0,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/pull/6880:0,deployability,Fail,Failures,0,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/pull/6880:0,performance,Failur,Failures,0,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/pull/6880:0,reliability,Fail,Failures,0,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/pull/6880:53,safety,review,review,53,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/pull/6880:53,testability,review,review,53,Failures are pre-existing. @pcanal this is ready for review,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6880
https://github.com/root-project/root/issues/6881:423,energy efficiency,Draw,Draw,423,"@pcanal @Axel-Naumann the problem seems to be at this line: https://github.com/root-project/root/blob/3657e7cf40e69061b67c19465c609e31cd901e63/tree/treeplayer/src/TTreeReaderValue.cxx#L747. When we have a branch with a naming scheme such as this (as in the `TTree::Print` output above: `*Br 0 :NUD_total_ADC : nud_total_adc/D`, i.e. `TTreeReader` assumes that the leaf name must always be equal to the branch name. `TTree::Draw` tries harder, and if the branch has a single leaf it picks it even if the leaf name is different. Can TTreeReader also try harder?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6881
https://github.com/root-project/root/issues/6881:0,deployability,Updat,Update,0,Update: what `TTreeFormula` does is: . https://github.com/root-project/root/blob/964b647c378f36c146291c9a060521c3c42322f7/tree/treeplayer/src/TTreeFormula.cxx#L2601-L2603. I.e. it just picks the first leaf in the branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6881
https://github.com/root-project/root/issues/6881:28,reliability,doe,does,28,Update: what `TTreeFormula` does is: . https://github.com/root-project/root/blob/964b647c378f36c146291c9a060521c3c42322f7/tree/treeplayer/src/TTreeFormula.cxx#L2601-L2603. I.e. it just picks the first leaf in the branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6881
https://github.com/root-project/root/issues/6881:0,safety,Updat,Update,0,Update: what `TTreeFormula` does is: . https://github.com/root-project/root/blob/964b647c378f36c146291c9a060521c3c42322f7/tree/treeplayer/src/TTreeFormula.cxx#L2601-L2603. I.e. it just picks the first leaf in the branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6881
https://github.com/root-project/root/issues/6881:0,security,Updat,Update,0,Update: what `TTreeFormula` does is: . https://github.com/root-project/root/blob/964b647c378f36c146291c9a060521c3c42322f7/tree/treeplayer/src/TTreeFormula.cxx#L2601-L2603. I.e. it just picks the first leaf in the branch.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6881
https://github.com/root-project/root/issues/6882:10,reliability,doe,doesn,10,"The issue doesn't have any description, I will close it or ask you to reopen after adjusting it if it was a mistake. Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6882
https://github.com/root-project/root/issues/6882:47,usability,close,close,47,"The issue doesn't have any description, I will close it or ask you to reopen after adjusting it if it was a mistake. Thank you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6882
https://github.com/root-project/root/pull/6883:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6883
https://github.com/root-project/root/issues/6884:216,deployability,version,versions,216,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/issues/6884:100,energy efficiency,model,model,100,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/issues/6884:216,integrability,version,versions,216,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/issues/6884:216,modifiability,version,versions,216,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/issues/6884:100,security,model,model,100,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/issues/6884:26,usability,close,closed,26,"I think this issue can be closed, because as I said on the forum there is a division by zero in the model. In this case where the pdf is not well defined, it's not a problem that ROOT gives different results between versions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6884
https://github.com/root-project/root/pull/6887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6887
https://github.com/root-project/root/pull/6887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6887
https://github.com/root-project/root/pull/6887:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6887
https://github.com/root-project/root/pull/6887:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6887
https://github.com/root-project/root/issues/6889:118,energy efficiency,current,current,118,"Hi Christian,. `TBufferJSON` class of ROOT uses https://github.com/nlohmann/json parser for reading of JSON files. In current ROOT master one can just include ""hlohmann/json.hpp"" and use all its features directly - also directly from **cling**. I guess, your TJSON class will have very similar functionality, or I missing something?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:189,availability,slo,sloccount,189,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:680,availability,avail,available,680,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,deployability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:653,deployability,build,build,653,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:690,deployability,instal,installation,690,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:781,deployability,version,versions,781,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,integrability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:781,integrability,version,versions,781,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:273,interoperability,standard,standard,273,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,interoperability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,modifiability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:781,modifiability,version,versions,781,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:189,reliability,slo,sloccount,189,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,reliability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:680,reliability,availab,available,680,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:78,safety,except,except,78,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:680,safety,avail,available,680,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,security,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:680,security,availab,available,680,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:312,testability,simpl,simple,312,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:380,testability,integr,integration,380,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:512,testability,simpl,simple,512,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:312,usability,simpl,simple,312,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:512,usability,simpl,simple,512,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:594,usability,prefer,preference,594,"Hi Sergey, . The class `TJSON` is indeed similar to the library of _nlohmann_ except a whole lot more lean (_nlohmann_ is 14,748 lines of code, while `TJSON` is 962 lines of code - as per `sloccount`). _nhlohmann_ tries to be very general and in fact expands upon the JSON standard, while `TJSON` tries to be as simple as possible. . Also, for `TJSON` I tried to do a bit of ROOT integration. For example, one can get arrays as `TArrayD` or `TArrayI` if possible, or one can assign from `TParameter<T>`. This is simple to make life a little easier for people. . That said, I have no particular preference for either. However, you should consider in the build system to use system available installation of _nlohmann_ instead of using built-in copy. You really don't want different versions of the same code floating around on a given machine. . Yours,. Christian",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:65,availability,avail,available,65,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:38,deployability,build,build,38,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:75,deployability,instal,installation,75,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:168,deployability,version,versions,168,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:345,deployability,build,build,345,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,deployability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:629,deployability,contain,containers,629,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:761,deployability,contain,containers,761,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:168,integrability,version,versions,168,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,integrability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,interoperability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:752,interoperability,standard,standard,752,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:168,modifiability,version,versions,168,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,modifiability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:643,modifiability,Concern,Concerning,643,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:65,reliability,availab,available,65,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,reliability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:65,safety,avail,available,65,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:65,security,availab,available,65,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,security,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:458,testability,integr,integration,458,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:643,testability,Concern,Concerning,643,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:538,usability,Support,Support,538,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:609,usability,support,support,609,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/issues/6889:802,usability,support,supported,802,"> However, you should consider in the build system to use system available installation of nlohmann instead of using built-in copy. . > You really don't want different versions of the same code floating around on a given machine. It is already possible now, but disable by default. . Use of external `nlohmann/json.hpp` has some side effects on build system, therefore should only be enabled when really needed. > Also, for TJSON I tried to do a bit of ROOT integration. For example, one can get arrays as TArrayD or TArrayI if possible. Support of special ROOT classes provided with `TBufferJSON`, including support of all ROOT containers. . Concerning `TArrayD` or `TArrayI` - these are old-fashion ROOT arrays; for new classes one should better use standard containers like `std::vector`, which are supported by `nlohmann/json.hpp` anyway. Size is important, but nlohmann already parsed by cling and can be used from interpreter without extra costs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6889
https://github.com/root-project/root/pull/6890:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6890
https://github.com/root-project/root/pull/6890:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6890
https://github.com/root-project/root/pull/6892:0,security,Expir,Expired,0,"Expired, replaced by other PRs in the meantime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6892
https://github.com/root-project/root/issues/6894:183,integrability,sub,sub-likelihood,183,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,. https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:219,integrability,compon,component,219,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,. https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:219,interoperability,compon,component,219,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,. https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:219,modifiability,compon,component,219,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,. https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:254,modifiability,exten,extend,254,"A related problem is also in RooNLLVar::create that is called by RooAbsTestStatistic::initSimMode,. https://root.cern/doc/master/RooAbsTestStatistic_8cxx_source.html#l00500. When the sub-likelihood is created using the component pdf, one should pass the extend flag only if the pdf canBeExtended()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:686,availability,Error,Error,686,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:659,deployability,contain,contain,659,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:620,integrability,event,events,620,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:129,modifiability,exten,extendable,129,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:156,modifiability,exten,extendable,156,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:281,modifiability,exten,extendable,281,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:670,modifiability,exten,extended,670,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:777,modifiability,exten,extended,777,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:686,performance,Error,Error,686,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:650,reliability,doe,does,650,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:686,safety,Error,Error,686,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/issues/6894:686,usability,Error,Error,686,"Hello,. In root-6.24, I have the impression that this fix unfortunately seems to imply a crash in evaluate : when there is a non-extendable category and an extendable one in the RooSimultaneous, canBeExtended() will be true, and then expectedEvents will be called also for the non extendable category, and this will make the code crashes, I think. . Running the macro posted here https://root-forum.cern.ch/t/use-of-roosimultaneous-pdf-with-mustbeextended-and-cannotbeextended-pdfs/42462 within 6.24, I get. RooSimultaneous::fsbBA[ indexCat=catBA A=fsbA B=fsbB ] = [#0] FATAL:Generation -- Requesting expected number of events from a RooProdPdf that does not contain an extended p.d.f. Error in <TRint::HandleTermInput()>: std::logic_error caught: RooProdPdf fsbA could not be extended. Best,. Jean-Baptiste",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6894
https://github.com/root-project/root/pull/6896:23,deployability,updat,updated,23,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6896:7,reliability,doe,doesn,7,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6896:54,reliability,doe,does,54,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6896:23,safety,updat,updated,23,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6896:23,security,updat,updated,23,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6896:84,usability,Close,Close,84,"Hmm GH doesn't see the updated branch, even though it does see it in my fork. Argh. Close & re-open?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6896
https://github.com/root-project/root/pull/6897:54,integrability,messag,message,54,"> LGTM, although the commit does more than the commit message suggests, maybe amend mentioning the unveto-ing of `datasource_csv`, `dataframe_display` and `tmva/tmva003_RReader`. Done. Thanks @eguiraud !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:54,interoperability,messag,message,54,"> LGTM, although the commit does more than the commit message suggests, maybe amend mentioning the unveto-ing of `datasource_csv`, `dataframe_display` and `tmva/tmva003_RReader`. Done. Thanks @eguiraud !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:28,reliability,doe,does,28,"> LGTM, although the commit does more than the commit message suggests, maybe amend mentioning the unveto-ing of `datasource_csv`, `dataframe_display` and `tmva/tmva003_RReader`. Done. Thanks @eguiraud !",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:0,availability,Error,Errors,0,Errors are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:0,performance,Error,Errors,0,Errors are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:0,safety,Error,Errors,0,Errors are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6897:0,usability,Error,Errors,0,Errors are unrelated. Merging.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6897
https://github.com/root-project/root/pull/6898:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6898
https://github.com/root-project/root/issues/6900:71,integrability,rout,routine,71,"Hi, . Thank you for reporting this bug ! It looks to be a problem in a routine developed by HEP people, but it never came to GSL, it is copied inside Mathmore, . see https://root.cern/doc/master/complex__quartic_8h_source.html. If I change the code in ROOT::Math::Polynomial::FindRoots to use the generic GSL function, gsl_poly_complex_solve, it . works fine. This uses an iterative procedure instead of the analytical solution. GSL does not provide a function to solve analytically quartic equations. . Probably we should change the code in Polynomial and forget about that quartic implementation until somebody fixes it. . I am not sure if it is used somewhere else (e.g. CLHEP). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:433,reliability,doe,does,433,"Hi, . Thank you for reporting this bug ! It looks to be a problem in a routine developed by HEP people, but it never came to GSL, it is copied inside Mathmore, . see https://root.cern/doc/master/complex__quartic_8h_source.html. If I change the code in ROOT::Math::Polynomial::FindRoots to use the generic GSL function, gsl_poly_complex_solve, it . works fine. This uses an iterative procedure instead of the analytical solution. GSL does not provide a function to solve analytically quartic equations. . Probably we should change the code in Polynomial and forget about that quartic implementation until somebody fixes it. . I am not sure if it is used somewhere else (e.g. CLHEP). Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:258,deployability,build,building,258,"hi Lorenzo,. I stumbled on this when implementing my own GPL-free polynomial roots-finding algorithm from first principles. I don't know the specifics of ROOT/GSL code, but in my code https://github.com/go-hep/exp/pull/15 (BSD-3 licensed) I first go through building the cubic resolvent and then follow the wikipedia litterature. note that for this particular case, what my code gives isn't completely satisfactory, though. reading a bit more litterature, it would seem going through solving 2 quadratics would lead to better results. I haven't got to try it out, though. hth,. -s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:141,interoperability,specif,specifics,141,"hi Lorenzo,. I stumbled on this when implementing my own GPL-free polynomial roots-finding algorithm from first principles. I don't know the specifics of ROOT/GSL code, but in my code https://github.com/go-hep/exp/pull/15 (BSD-3 licensed) I first go through building the cubic resolvent and then follow the wikipedia litterature. note that for this particular case, what my code gives isn't completely satisfactory, though. reading a bit more litterature, it would seem going through solving 2 quadratics would lead to better results. I haven't got to try it out, though. hth,. -s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:391,safety,compl,completely,391,"hi Lorenzo,. I stumbled on this when implementing my own GPL-free polynomial roots-finding algorithm from first principles. I don't know the specifics of ROOT/GSL code, but in my code https://github.com/go-hep/exp/pull/15 (BSD-3 licensed) I first go through building the cubic resolvent and then follow the wikipedia litterature. note that for this particular case, what my code gives isn't completely satisfactory, though. reading a bit more litterature, it would seem going through solving 2 quadratics would lead to better results. I haven't got to try it out, though. hth,. -s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:391,security,compl,completely,391,"hi Lorenzo,. I stumbled on this when implementing my own GPL-free polynomial roots-finding algorithm from first principles. I don't know the specifics of ROOT/GSL code, but in my code https://github.com/go-hep/exp/pull/15 (BSD-3 licensed) I first go through building the cubic resolvent and then follow the wikipedia litterature. note that for this particular case, what my code gives isn't completely satisfactory, though. reading a bit more litterature, it would seem going through solving 2 quadratics would lead to better results. I haven't got to try it out, though. hth,. -s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:402,usability,satisfa,satisfactory,402,"hi Lorenzo,. I stumbled on this when implementing my own GPL-free polynomial roots-finding algorithm from first principles. I don't know the specifics of ROOT/GSL code, but in my code https://github.com/go-hep/exp/pull/15 (BSD-3 licensed) I first go through building the cubic resolvent and then follow the wikipedia litterature. note that for this particular case, what my code gives isn't completely satisfactory, though. reading a bit more litterature, it would seem going through solving 2 quadratics would lead to better results. I haven't got to try it out, though. hth,. -s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:44,integrability,rout,routine,44,"Looking back at my emails, I found that the routine comes from the LHCb RICH code and it was proposed to GSL, but it was never merged there at the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:444,safety,test,test,444,The problem seems to be in the calculation of disc at line 151. https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines. ```. // more numerical problems with this calculation of disc. // double CR2 = 729 * rcub * rcub;. // double CQ3 = 2916 * qcub * qcub * qcub;. // disc = (CR2 - CQ3) / 2125764.0;. ```. it seems top provide the correct result in your example. . It would be nice to have more test points to validate the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:459,safety,valid,validate,459,The problem seems to be in the calculation of disc at line 151. https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines. ```. // more numerical problems with this calculation of disc. // double CR2 = 729 * rcub * rcub;. // double CQ3 = 2916 * qcub * qcub * qcub;. // disc = (CR2 - CQ3) / 2125764.0;. ```. it seems top provide the correct result in your example. . It would be nice to have more test points to validate the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:459,security,validat,validate,459,The problem seems to be in the calculation of disc at line 151. https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines. ```. // more numerical problems with this calculation of disc. // double CR2 = 729 * rcub * rcub;. // double CQ3 = 2916 * qcub * qcub * qcub;. // disc = (CR2 - CQ3) / 2125764.0;. ```. it seems top provide the correct result in your example. . It would be nice to have more test points to validate the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:444,testability,test,test,444,The problem seems to be in the calculation of disc at line 151. https://root.cern/doc/master/complex__quartic_8h_source.html#l00151. If I uncomment these following lines. ```. // more numerical problems with this calculation of disc. // double CR2 = 729 * rcub * rcub;. // double CQ3 = 2916 * qcub * qcub * qcub;. // disc = (CR2 - CQ3) / 2125764.0;. ```. it seems top provide the correct result in your example. . It would be nice to have more test points to validate the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:31,safety,test,test,31,"I had found this polynomial to test the branch of my code where `R==0`. (brute force, by using the equivalent of MINUIT to minimize `R`). (I am explicitly not looking at GPL-licensed code not to ""taint"" my BSD-licensed code)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:31,testability,test,test,31,"I had found this polynomial to test the branch of my code where `R==0`. (brute force, by using the equivalent of MINUIT to minimize `R`). (I am explicitly not looking at GPL-licensed code not to ""taint"" my BSD-licensed code)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6900:123,usability,minim,minimize,123,"I had found this polynomial to test the branch of my code where `R==0`. (brute force, by using the equivalent of MINUIT to minimize `R`). (I am explicitly not looking at GPL-licensed code not to ""taint"" my BSD-licensed code)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6900
https://github.com/root-project/root/issues/6903:266,availability,error,error,266,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:374,availability,Error,Error,374,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:402,availability,Error,Error,402,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:96,deployability,build,build-err,96,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:106,deployability,log,log,106,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:118,deployability,build,build,118,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:288,deployability,fail,failed,288,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:266,performance,error,error,266,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:374,performance,Error,Error,374,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:402,performance,Error,Error,402,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:13,reliability,doe,does,13,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:288,reliability,fail,failed,288,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:106,safety,log,log,106,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:266,safety,error,error,266,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:374,safety,Error,Error,374,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:402,safety,Error,Error,402,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:106,security,log,log,106,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:106,testability,log,log,106,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:266,usability,error,error,266,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:280,usability,command,command,280,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:374,usability,Error,Error,374,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6903:402,usability,Error,Error,402,6.22/06 also does not work macOS BigSur with `intel64`. ```. $ cat TBB-prefix/src/TBB-stamp/TBB-build-err.log . ../../build/Makefile.tbb:28: CONFIG: cfg=debug arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os11.0.1. ld: library not found for -ldl. clang: error: linker command failed with exit code 1 (use -v to see invocation). make[4]: *** [libtbb_debug.dylib] Error 1. make[3]: *** [tbb] Error 2. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6903
https://github.com/root-project/root/issues/6904:64,deployability,configurat,configuration,64,"Hi, . I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. . I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. . Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? . What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:155,deployability,build,build,155,"Hi, . I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. . I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. . Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? . What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:64,integrability,configur,configuration,64,"Hi, . I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. . I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. . Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? . What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:64,modifiability,configur,configuration,64,"Hi, . I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. . I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. . Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? . What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:64,security,configur,configuration,64,"Hi, . I am not sure this is a bug in ROOT, but it could be some configuration problems on your system or a problem in root-config. . I see you are using a build done with the Intel compiler. If I am not mistaken libguide is a library needed when using the Intel compiler. . Are you sure you have set up correctly the environment (e.g. LD_LIBRARY_PATH) to use the Intel compiler ? . What is the output of `root-config --cxx` ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:51,availability,error,error,51,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1016,availability,Error,Error,1016,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:51,performance,error,error,51,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1016,performance,Error,Error,1016,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:51,safety,error,error,51,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1016,safety,Error,Error,1016,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1213,security,auth,authored,1213,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1429,security,auth,auth,1429,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:51,usability,error,error,51,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:1016,usability,Error,Error,1016,"If I use -lCore instead of -lCling, I got one more error:. icpc generate.C -D__ROOTSHAREDLIBRARY__ -I/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/include -I./ -o. generate.exe -L/cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib. -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTDataFrame. -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics. -lMathCore -lThread -lMultiProc -pthread -limf -lm -ldl -L/cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib -lGui -lRFIO -lMinuit. -lNetx -lGeom -lEG -lXMLIO -lTreePlayer -lMLP -lTMVA -DUSEGENFIT -lifcore. -static-libgcc -static-libstdc++ -std=c++11 -lMathMore -lCore. ld: warning: libguide.so, needed by /cvmfs/. ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found. (try using -rpath or -rpath-link). /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libCore.so:. undefined reference to `TCling::TCling(char const*, char const*, char. const* const*)'. make: *** [generate] Error 1. On Sat, Dec 5, 2020 at 10:04 PM Axel Naumann <notifications@github.com>. wrote:. > And do *not* link against -lCling please! -lCore is enough. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-739415922>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UTQSDBUYL626F3O7NDSTKN7HANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:209,deployability,configurat,configuration,209,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:303,deployability,build,build,303,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:209,integrability,configur,configuration,209,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:209,modifiability,configur,configuration,209,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:209,security,configur,configuration,209,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:636,security,auth,authored,636,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:852,security,auth,auth,852,"The output is as the following:. $ root-config --cxx. icpc. On Fri, Dec 4, 2020 at 2:49 PM Lorenzo Moneta <notifications@github.com>. wrote:. > Hi,. > I am not sure this is a bug in ROOT, but it could be some configuration. > problems on your system or a problem in root-config. > I see you are using a build done with the Intel compiler. If I am not. > mistaken libguide is a library needed when using the Intel compiler. > Are you sure you have set up correctly the environment (e.g. > LD_LIBRARY_PATH) to use the Intel compiler ? > What is the output of root-config --cxx ? >. > Lorenzo. >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/6904#issuecomment-738793840>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/ADT55UVFF7CTDVAZJH2SBLLSTDSGTANCNFSM4UKQAUNQ>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:15,integrability,coupl,couple,15,"So there are a couple of issues:. - please use `root-config --libs` and its flags instead of hard-coding lags and libraries. This fixes the issue of `libCore` which should be allowed to have unresolved symbols into `libCling`. - according to https://community.intel.com/t5/Intel-C-Compiler/libguide-so/m-p/769697/highlight/true#M512 `icpc` needs libguide.so, i.e. you likely did not set up your compiler correctly. Please let us know whether there's something else we can do. In the future, please post questions like these at https://root-forum.cern.ch instead of opening a bug report unless you're really sure it's our bug ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:15,modifiability,coupl,couple,15,"So there are a couple of issues:. - please use `root-config --libs` and its flags instead of hard-coding lags and libraries. This fixes the issue of `libCore` which should be allowed to have unresolved symbols into `libCling`. - according to https://community.intel.com/t5/Intel-C-Compiler/libguide-so/m-p/769697/highlight/true#M512 `icpc` needs libguide.so, i.e. you likely did not set up your compiler correctly. Please let us know whether there's something else we can do. In the future, please post questions like these at https://root-forum.cern.ch instead of opening a bug report unless you're really sure it's our bug ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/issues/6904:15,testability,coupl,couple,15,"So there are a couple of issues:. - please use `root-config --libs` and its flags instead of hard-coding lags and libraries. This fixes the issue of `libCore` which should be allowed to have unresolved symbols into `libCling`. - according to https://community.intel.com/t5/Intel-C-Compiler/libguide-so/m-p/769697/highlight/true#M512 `icpc` needs libguide.so, i.e. you likely did not set up your compiler correctly. Please let us know whether there's something else we can do. In the future, please post questions like these at https://root-forum.cern.ch instead of opening a bug report unless you're really sure it's our bug ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6904
https://github.com/root-project/root/pull/6905:80,deployability,depend,dependent,80,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:80,integrability,depend,dependent,80,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:71,interoperability,platform,platform-dependent,71,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:80,modifiability,depend,dependent,80,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:95,reliability,doe,does,95,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:80,safety,depend,dependent,80,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:80,testability,depend,dependent,80,"@pcanal what's your thought about mentioning `size_t` here? It remains platform-dependent, but does that matter, actually?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6905:8,availability,ping,ping,8,@pcanal ping on this one...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6905
https://github.com/root-project/root/pull/6907:65,availability,failur,failure,65,"> LGTM, if JupyROOT works... Good point, I just checked and find failure. I will submit small commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6907
https://github.com/root-project/root/pull/6907:65,deployability,fail,failure,65,"> LGTM, if JupyROOT works... Good point, I just checked and find failure. I will submit small commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6907
https://github.com/root-project/root/pull/6907:81,integrability,sub,submit,81,"> LGTM, if JupyROOT works... Good point, I just checked and find failure. I will submit small commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6907
https://github.com/root-project/root/pull/6907:65,performance,failur,failure,65,"> LGTM, if JupyROOT works... Good point, I just checked and find failure. I will submit small commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6907
https://github.com/root-project/root/pull/6907:65,reliability,fail,failure,65,"> LGTM, if JupyROOT works... Good point, I just checked and find failure. I will submit small commit soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6907
https://github.com/root-project/root/pull/6908:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/cxx14 with flags -Dmathmore=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:11,deployability,build,build,11,@phsft-bot build with flags -Dmathmore=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:137,deployability,build,builds,137,"@guitargeek @lmoneta before merging such old PR, it would have been in order to rebase and run this through the new CI: It broke Windows builds (fixed by @bellenot in https://github.com/root-project/root/pull/14274) and causes a CMake warning (to be addressed by https://github.com/root-project/root/pull/14280)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:27,deployability,fail,fail,27,"The new test also seems to fail on mac14arm in the new CI, can you please have a look asap? @guitargeek @lmoneta (*edit:* fix proposed in https://github.com/root-project/root/pull/14291)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:27,reliability,fail,fail,27,"The new test also seems to fail on mac14arm in the new CI, can you please have a look asap? @guitargeek @lmoneta (*edit:* fix proposed in https://github.com/root-project/root/pull/14291)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:8,safety,test,test,8,"The new test also seems to fail on mac14arm in the new CI, can you please have a look asap? @guitargeek @lmoneta (*edit:* fix proposed in https://github.com/root-project/root/pull/14291)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/pull/6908:8,testability,test,test,8,"The new test also seems to fail on mac14arm in the new CI, can you please have a look asap? @guitargeek @lmoneta (*edit:* fix proposed in https://github.com/root-project/root/pull/14291)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6908
https://github.com/root-project/root/issues/6911:19,performance,time,time,19,Fixed already some time ago by Bertrand.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6911
https://github.com/root-project/root/pull/6917:178,deployability,patch,patch,178,"@lmoneta This is a follow-up on the discussion in #6705, to apply clang-format to the Minuit2 code. This will probably trigger quite a few warnings from clang-tidy, although the patch should not change any code meaning. I would be interested in a follow up PR to fix the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:72,interoperability,format,format,72,"@lmoneta This is a follow-up on the discussion in #6705, to apply clang-format to the Minuit2 code. This will probably trigger quite a few warnings from clang-tidy, although the patch should not change any code meaning. I would be interested in a follow up PR to fix the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:178,safety,patch,patch,178,"@lmoneta This is a follow-up on the discussion in #6705, to apply clang-format to the Minuit2 code. This will probably trigger quite a few warnings from clang-tidy, although the patch should not change any code meaning. I would be interested in a follow up PR to fix the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:178,security,patch,patch,178,"@lmoneta This is a follow-up on the discussion in #6705, to apply clang-format to the Minuit2 code. This will probably trigger quite a few warnings from clang-tidy, although the patch should not change any code meaning. I would be interested in a follow up PR to fix the clang-tidy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:183,deployability,patch,patch,183,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:18,interoperability,format,format,18,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:52,interoperability,format,formatting,52,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:25,safety,test,test,25,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:183,safety,patch,patch,183,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:204,safety,compl,complaints,204,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:183,security,patch,patch,183,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:204,security,compl,complaints,204,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:25,testability,test,test,25,"Whoops, the clang-format test is rejecting my clang-formatting https://travis-ci.org/github/root-project/root/jobs/747788436, I will fix that (passing that is the whole point of this patch...). The other complaints by clang-tidy and clang-tidy-modernize should be addressed in another PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:360,availability,operat,operator,360,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:563,deployability,build,build,563,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:652,deployability,updat,updated,652,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:641,integrability,event,eventually,641,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:46,interoperability,format,format,46,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:126,interoperability,format,format-,126,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:161,interoperability,format,format-,161,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:194,interoperability,format,format-,194,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:400,interoperability,format,format-,400,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:466,interoperability,format,format-,466,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:520,interoperability,format,format-,520,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:581,interoperability,format,formatting,581,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:631,interoperability,format,format,631,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:652,safety,updat,updated,652,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:652,security,updat,updated,652,"I investigated the Travis output of the clang-format job and I think the differences come from the fact that I am using clang-format-10, while Travis uses clang-format-7. The changes that clang-format-7 wants are fairly awkward, see e.g. https://travis-ci.org/github/root-project/root/jobs/747788436#L1313. where it inserts a line break between the class and `operator()`. I would say that the clang-format-10 syntax looks much more reasonable. Should we keep clang-format-10 or should I try to make it conform to clang-format-7? If I do the latter, it fixes the build now but the formatting will become a problem again once clang-format is eventually updated on Travis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:117,deployability,patch,patches,117,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:139,deployability,depend,depend,139,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:139,integrability,depend,depend,139,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:16,interoperability,format,format-,16,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:139,modifiability,depend,depend,139,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:117,safety,patch,patches,117,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:139,safety,depend,depend,139,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:117,security,patch,patches,117,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:139,testability,depend,depend,139,"I applied clang-format-7, now it should be good. It would be great to merge this quickly, because I have a few other patches prepared that depend on this change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:89,deployability,fail,failing,89,I would side with using clang-format 10 (more future proof). This will lead to *this* PR failing but will only affect negatively the PR that touches the lines of code where v7 and v10 disagree.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:30,interoperability,format,format,30,I would side with using clang-format 10 (more future proof). This will lead to *this* PR failing but will only affect negatively the PR that touches the lines of code where v7 and v10 disagree.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:89,reliability,fail,failing,89,I would side with using clang-format 10 (more future proof). This will lead to *this* PR failing but will only affect negatively the PR that touches the lines of code where v7 and v10 disagree.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:26,interoperability,format,format,26,"Hi Hans, . Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:71,security,modif,modifications,71,"Hi Hans, . Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:11,deployability,build,build,11,@phsft-bot build with flags -Dminuit2=On.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:40,availability,failur,failures,40,"clang-format is ok, but there are still failures in clang-tidy. . Since some of them are related also to the previous ref pointer, I think those can be fixed by a separate PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:40,deployability,fail,failures,40,"clang-format is ok, but there are still failures in clang-tidy. . Since some of them are related also to the previous ref pointer, I think those can be fixed by a separate PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:6,interoperability,format,format,6,"clang-format is ok, but there are still failures in clang-tidy. . Since some of them are related also to the previous ref pointer, I think those can be fixed by a separate PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:40,performance,failur,failures,40,"clang-format is ok, but there are still failures in clang-tidy. . Since some of them are related also to the previous ref pointer, I think those can be fixed by a separate PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:40,reliability,fail,failures,40,"clang-format is ok, but there are still failures in clang-tidy. . Since some of them are related also to the previous ref pointer, I think those can be fixed by a separate PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:142,deployability,automat,automatic,142,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:199,integrability,sub,submitted,199,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:29,interoperability,format,format,29,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:152,interoperability,format,formatting,152,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:188,interoperability,format,format,188,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:405,interoperability,format,format,405,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:420,interoperability,format,format,420,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:450,reliability,pra,pragma,450,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:74,security,modif,modifications,74,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6917:142,testability,automat,automatic,142,"> Hi Hans,. > Are these only format changes ? Or there are some real code modifications, e.g. for fixing clang-tidy ? @lmoneta There are only automatic formatting changes. I applied clang-format and submitted the output. The only thing I touched by hand is the LinkDef https://github.com/root-project/root/pull/6917/files#diff-11aff2250058e06f01c03bd90530e5299443707f6b06ba7c7c1939c1906bd33e, which clang-format did not format properly. It broke the pragma link C++, so I fixed that manually. That is the only change I did by hand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6917
https://github.com/root-project/root/pull/6918:11,deployability,build,build,11,@phsft-bot build with flags -Dminuit2=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6918
https://github.com/root-project/root/pull/6918:128,deployability,automat,automatically,128,"I rebased the change onto the latest clang-formatted master so that we get shown a clean diff here (I assumed that would happen automatically, but I was mistaken).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6918
https://github.com/root-project/root/pull/6918:43,interoperability,format,formatted,43,"I rebased the change onto the latest clang-formatted master so that we get shown a clean diff here (I assumed that would happen automatically, but I was mistaken).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6918
https://github.com/root-project/root/pull/6918:128,testability,automat,automatically,128,"I rebased the change onto the latest clang-formatted master so that we get shown a clean diff here (I assumed that would happen automatically, but I was mistaken).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6918
https://github.com/root-project/root/pull/6918:11,deployability,build,build,11,@phsft-bot build with flags -Dminuit2=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6918
https://github.com/root-project/root/pull/6919:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:147,interoperability,share,shared,147,"Given the discussion about deadlocks using ``static thread_local``` I pushed an alternate solution to avoid exclusive locks in ReadLock() based on shared mutexes, which is only used for C++14 or higher in this case. The indentation should also be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:27,performance,deadlock,deadlocks,27,"Given the discussion about deadlocks using ``static thread_local``` I pushed an alternate solution to avoid exclusive locks in ReadLock() based on shared mutexes, which is only used for C++14 or higher in this case. The indentation should also be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:118,performance,lock,locks,118,"Given the discussion about deadlocks using ``static thread_local``` I pushed an alternate solution to avoid exclusive locks in ReadLock() based on shared mutexes, which is only used for C++14 or higher in this case. The indentation should also be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,safety,avoid,avoid,102,"Given the discussion about deadlocks using ``static thread_local``` I pushed an alternate solution to avoid exclusive locks in ReadLock() based on shared mutexes, which is only used for C++14 or higher in this case. The indentation should also be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:118,security,lock,locks,118,"Given the discussion about deadlocks using ``static thread_local``` I pushed an alternate solution to avoid exclusive locks in ReadLock() based on shared mutexes, which is only used for C++14 or higher in this case. The indentation should also be fixed now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10,deployability,updat,updated,10,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:18,deployability,stack,stack,18,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:144,performance,lock,lock,144,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:149,performance,content,contention,149,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10,safety,updat,updated,10,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10,security,updat,updated,10,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:144,security,lock,lock,144,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:24,testability,trace,trace,24,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:186,usability,close,closed,186,"Here's an updated stack trace with full debug info in case it's useful in the meantime, taken again during one of the remaining periods of high lock contention when many files are being closed and opened. [pstackdebug.txt](https://github.com/root-project/root/files/5656173/pstackdebug.txt).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:170,availability,slo,slower,170,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:307,availability,slo,slower,307,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12049,availability,down,down,12049,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:588,deployability,Updat,UpdateCTestConfiguration,588,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:650,deployability,build,build,650,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:728,deployability,build,build,728,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:850,deployability,Updat,UpdateCTestConfiguration,850,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:912,deployability,build,build,912,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:990,deployability,build,build,990,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1063,deployability,build,build,1063,"n uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1182,deployability,Updat,Updating,1182," locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1273,deployability,depend,dependency,1273,"ite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1307,deployability,depend,dependency,1307,"r write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.Bal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1462,deployability,build,build,1462,"ts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1543,deployability,build,build,1543,"-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserRea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1605,deployability,build,build,1605,"tion from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWrit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1660,deployability,modul,modules,1660,"iguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLoc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1831,deployability,build,build,1831,"/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12329,deployability,fail,failed,12329,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:547,energy efficiency,core,core-thread-test-corethreadtestUnit,547,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1354,energy efficiency,core,core-thread-test-corethreadtestUnit,1354,"ated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.Bala",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1468,energy efficiency,core,core,1468,"ut maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1485,energy efficiency,core,corethreadtestUnit,1485,"ent for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1549,energy efficiency,core,core,1549,"-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12171,energy efficiency,core,core-thread-test-corethreadtestUnit,12171,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12265,energy efficiency,core,core-thread-test-corethreadtestUnit,12265,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1273,integrability,depend,dependency,1273,"ite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1307,integrability,depend,dependency,1307,"r write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.Bal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:82,modifiability,variab,variable,82,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1273,modifiability,depend,dependency,1273,"ite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1307,modifiability,depend,dependency,1307,"r write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.Bal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1660,modifiability,modul,modules,1660,"iguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLoc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1707,modifiability,variab,variables,1707,"ndavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from Interpr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:25,performance,deadlock,deadlocks,25,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:187,performance,lock,locks,187,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:210,performance,lock,locks,210,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:320,performance,lock,locking,320,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1746,performance,time,timeout,1746,"n.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [--",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2079,performance,Concurren,ConcurrentCalc,2079,"ist of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLoc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2122,performance,Concurren,ConcurrentCalc,2122,"arsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (577 ms). 76: [ RUN ] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7468,performance,concurren,concurrentResetRestore,7468,rantStd14. 76: [ OK ] RWLock.ReentrantStd14 (0 ms). 76: [ RUN ] RWLock.ReentrantStd17. 76: [ OK ] RWLock.ReentrantStd17 (0 ms). 76: [ RUN ] RWLock.ReentrantSpin. 76: [ OK ] RWLock.ReentrantSpin (0 ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7510,performance,concurren,concurrentResetRestore,7510,4 (0 ms). 76: [ RUN ] RWLock.ReentrantStd17. 76: [ OK ] RWLock.ReentrantStd17 (0 ms). 76: [ RUN ] RWLock.ReentrantSpin. 76: [ OK ] RWLock.ReentrantSpin (0 ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7561,performance,concurren,concurrentResetRestoreSpin,7561, ] RWLock.ReentrantStd17 (0 ms). 76: [ RUN ] RWLock.ReentrantSpin. 76: [ OK ] RWLock.ReentrantSpin (0 ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7607,performance,concurren,concurrentResetRestoreSpin,7607,WLock.ReentrantSpin. 76: [ OK ] RWLock.ReentrantSpin (0 ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7662,performance,concurren,concurrentResetRestoreStd,7662, ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:7707,performance,concurren,concurrentResetRestoreStd,7707,] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8072,performance,concurren,concurrentResetRestoreTL,8072,reStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8116,performance,concurren,concurrentResetRestoreTL,8116, (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8278,performance,concurren,concurrentReadsAndWrites,8278,6: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8322,performance,concurren,concurrentReadsAndWrites,8322,OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.Largeconcurr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8377,performance,concurren,concurrentReadsAndWritesSpin,8377,.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (310 ms). 76: [ RUN ] RWLock.VeryLa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8425,performance,concurren,concurrentReadsAndWritesSpin,8425,L (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (310 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.V,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8484,performance,concurren,concurrentReadsAndWritesStd,8484,OK ] RWLock.concurrentResetRestore (88 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (310 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWrites (16427 ms). 76: [ RUN ] RW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8531,performance,concurren,concurrentReadsAndWritesStd,8531, [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (310 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWrites (16427 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd. 76: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10534,performance,concurren,concurrentReadsAndWritesTL,10534,OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd (17458 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd14 (9737 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd17 (9956 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4470 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10580,performance,concurren,concurrentReadsAndWritesTL,10580,td (17458 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd14 (9737 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd17 (9956 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4470 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12357,performance,time,time,12357,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:170,reliability,slo,slower,170,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:307,reliability,slo,slower,307,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12329,reliability,fail,failed,12329,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:52,safety,test,tests,52,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:108,safety,test,tests,108,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,safety,test,tests,282,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:559,safety,test,test-corethreadtestUnit,559,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:588,safety,Updat,UpdateCTestConfiguration,588,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:850,safety,Updat,UpdateCTestConfiguration,850,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1019,safety,Test,Test,1019,"ome deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1093,safety,test,tests,1093,"d now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1107,safety,test,test,1107,"ests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1175,safety,test,tests,1175,"or write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.Rea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1182,safety,Updat,Updating,1182," locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1191,safety,test,test,1191," faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1223,safety,test,tests,1223,"ficantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1268,safety,test,test,1268,"eadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1273,safety,depend,dependency,1273,"ite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1302,safety,test,test,1302,"he slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1307,safety,depend,dependency,1307,"r write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.Bal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1329,safety,test,test,1329,"ld probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1366,safety,test,test-corethreadtestUnit,1366,"``shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1395,safety,Test,Test,1395,"nside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1480,safety,test,test,1480,"s is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1561,safety,test,test,1561,"-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1660,safety,modul,modules,1660,"iguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLoc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1741,safety,Test,Test,1741,"guration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1746,safety,timeout,timeout,1746,"n.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [--",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1929,safety,test,tests,1929,"ion.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1942,safety,test,test,1942,"se Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1979,safety,test,test,1979,"rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2023,safety,test,tests,2023,"oject /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2694,safety,test,tests,2694,vironment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (577 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2758 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (275 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (2993 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (553 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2826 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (276 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (2953 ms). 76: [ RUN ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2763,safety,test,tests,2763,be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (577 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2758 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (275 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (2993 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (553 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2826 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (276 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (2953 ms). 76: [ RUN ] RWLock.WriteStdDirectUnLock. 76: [ OK ] RWLock.WriteStdDirectUnLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10975,safety,test,tests,10975,470 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:11038,safety,test,tests,11038,] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:11954,safety,test,tests,11954,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12027,safety,test,test,12027,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12076,safety,test,tests,12076,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12089,safety,test,test,12089,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12144,safety,test,tests,12144,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12155,safety,Test,Test,12155,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12183,safety,test,test-corethreadtestUnit,12183,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12244,safety,test,tests,12244,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12277,safety,test,test-corethreadtestUnit,12277,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12307,safety,test,tests,12307,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12323,safety,test,tests,12323,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12352,safety,Test,Test,12352,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:187,security,lock,locks,187,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:210,security,lock,locks,210,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:221,security,sign,significantly,221,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:320,security,lock,locking,320,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:588,security,Updat,UpdateCTestConfiguration,588,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:850,security,Updat,UpdateCTestConfiguration,850,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1182,security,Updat,Updating,1182," locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:52,testability,test,tests,52,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:108,testability,test,tests,108,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,testability,test,tests,282,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:559,testability,test,test-corethreadtestUnit,559,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:761,testability,coverag,coverage,761,"There were actually some deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1019,testability,Test,Test,1019,"ome deadlocks when running the tests due to an uninitialized variable (fixed now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1093,testability,test,tests,1093,"d now). The tests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1107,testability,test,test,1107,"ests now look as below. The new implementations are somewhat slower for write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1175,testability,test,tests,1175,"or write locks, faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.Rea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1191,testability,test,test,1191," faster for read locks, but significantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1223,testability,test,tests,1223,"ficantly faster for the VeryLargeconcurrentReadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1268,testability,test,test,1268,"eadAndWrite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1273,testability,depend,dependency,1273,"ite tests which I added. The slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1302,testability,test,test,1302,"he slower write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] Interpreter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1307,testability,depend,dependency,1307,"r write locking could probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.Bal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1329,testability,test,test,1329,"ld probably be mitigated by using a dedicated ```shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1366,testability,test,test-corethreadtestUnit,1366,"``shared_mutex``` inside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1395,testability,Test,Test,1395,"nside ```RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1480,testability,test,test,1480,"s is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1561,testability,test,test,1561,"-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1741,testability,Test,Test,1741,"guration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1929,testability,test,tests,1929,"ion.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1942,testability,test,test,1942,"se Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1979,testability,test,test,1979,"rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2023,testability,test,tests,2023,"oject /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2694,testability,test,tests,2694,vironment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (577 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2758 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (275 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (2993 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (553 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2826 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (276 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (2953 ms). 76: [ RUN ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2763,testability,test,tests,2763,be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (198 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (146 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (96 ms). 76: [----------] 6 tests from InterpreterLock (857 ms total). 76: . 76: [----------] 88 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (59 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (62 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3029 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (577 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2758 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (275 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (2993 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (553 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2826 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (276 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (2953 ms). 76: [ RUN ] RWLock.WriteStdDirectUnLock. 76: [ OK ] RWLock.WriteStdDirectUnLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10975,testability,test,tests,10975,470 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:11038,testability,test,tests,11038,] RWLock.VeryLargeconcurrentReads (1074 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:11954,testability,test,tests,11954,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12027,testability,test,test,12027,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12076,testability,test,tests,12076,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12089,testability,test,test,12089,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12144,testability,test,tests,12144,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12155,testability,Test,Test,12155,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12183,testability,test,test-corethreadtestUnit,12183,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12244,testability,test,tests,12244,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12277,testability,test,test-corethreadtestUnit,12277,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12307,testability,test,tests,12307,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12323,testability,test,tests,12323,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12352,testability,Test,Test,12352,"tReadsStd17 (1073 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms). 76: [----------] 88 tests from RWLock (169985 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (8 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (128 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (0 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (1 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (139 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 104 tests from 3 test suites ran. (170981 ms total). 76: [ PASSED ] 104 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 171.21 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 172.05 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1400,usability,command,command,1400,"``RecurseCountsShared``` only to protect the map of read counts, but maybe this is sufficient for the moment. ```. Singularity> ctest -R gtest-core-thread-test-corethreadtestUnit -V . UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Add coverage exclude regular expressions. SetCTestConfiguration:CMakeCommand:/usr/bin/cmake. UpdateCTestConfiguration from :/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Parse Config file:/scratchnvme/bendavid/rootdev2/build/DartConfiguration.tcl. Test project /scratchnvme/bendavid/rootdev2/build. Constructing a list of tests. Ignore test: roottest-cling-parsing-semicolon. Done constructing a list of tests. Updating test list for fixtures. Added 0 tests to meet fixture requirements. Checking test dependency graph... Checking test dependency graph end. test 76. Start 76: gtest-core-thread-test-corethreadtestUnit. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 104 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (112 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (95 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (210 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] In",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:36,energy efficiency,current,currently,36,It looks like (surprisingly :() the currently used implementation (RecurseCounts) is not yet in the test. Could you add it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:100,safety,test,test,100,It looks like (surprisingly :() the currently used implementation (RecurseCounts) is not yet in the test. Could you add it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:100,testability,test,test,100,It looks like (surprisingly :() the currently used implementation (RecurseCounts) is not yet in the test. Could you add it?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,availability,avail,available,282,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:224,deployability,build,build,224,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,reliability,availab,available,282,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:250,safety,test,test,250,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,safety,avail,available,282,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:282,security,availab,available,282,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:250,testability,test,test,250,RecurseCounts is the default second template argument for TReentrantRWLock and TRWMutexImp so it's definitely already there. The most relevant comparisons here are Std vs Std14 vs Std17. (Even if this was all run in a C++17 build I set it up to just test all the variants which are available.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:296,availability,slo,slower,296,"> faster for read locks,. I don't seem to be seeing that:. ```. 76: [ OK ] RWLock.ReadLockStdDirect (2225 ms). 76: [ OK ] RWLock.ReadLockStd14Direct (2645 ms). 76: [ OK ] RWLock.ReadLockStd17Direct (2762 ms). ```. what am I missing. Also do we understand why the Std17 results seems to be higher/slower than Std14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:18,performance,lock,locks,18,"> faster for read locks,. I don't seem to be seeing that:. ```. 76: [ OK ] RWLock.ReadLockStdDirect (2225 ms). 76: [ OK ] RWLock.ReadLockStd14Direct (2645 ms). 76: [ OK ] RWLock.ReadLockStd17Direct (2762 ms). ```. what am I missing. Also do we understand why the Std17 results seems to be higher/slower than Std14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:296,reliability,slo,slower,296,"> faster for read locks,. I don't seem to be seeing that:. ```. 76: [ OK ] RWLock.ReadLockStdDirect (2225 ms). 76: [ OK ] RWLock.ReadLockStd14Direct (2645 ms). 76: [ OK ] RWLock.ReadLockStd17Direct (2762 ms). ```. what am I missing. Also do we understand why the Std17 results seems to be higher/slower than Std14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:18,security,lock,locks,18,"> faster for read locks,. I don't seem to be seeing that:. ```. 76: [ OK ] RWLock.ReadLockStdDirect (2225 ms). 76: [ OK ] RWLock.ReadLockStd14Direct (2645 ms). 76: [ OK ] RWLock.ReadLockStd17Direct (2762 ms). ```. what am I missing. Also do we understand why the Std17 results seems to be higher/slower than Std14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:244,testability,understand,understand,244,"> faster for read locks,. I don't seem to be seeing that:. ```. 76: [ OK ] RWLock.ReadLockStdDirect (2225 ms). 76: [ OK ] RWLock.ReadLockStd14Direct (2645 ms). 76: [ OK ] RWLock.ReadLockStd17Direct (2762 ms). ```. what am I missing. Also do we understand why the Std17 results seems to be higher/slower than Std14?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14164,availability,down,down,14164,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:326,deployability,build,building-blocks-developer-reference,326,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:571,deployability,version,version,571,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1044,deployability,depend,dependency,1044,"nLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1131,deployability,version,versions,1131,"so have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1218,deployability,build,build,1218,"https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] Inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1299,deployability,build,build,1299,"ion/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserRead",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1361,deployability,build,build,1361,"read-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWrite",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1416,deployability,modul,modules,1416,"ss.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1587,deployability,build,build,1587,"think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14444,deployability,fail,failed,14444,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1059,energy efficiency,core,core,1059,"ifferences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1224,energy efficiency,core,core,1224,"://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] Interpret",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1241,energy efficiency,core,corethreadtestUnit,1241,"ntent/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserRea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1305,energy efficiency,core,core,1305,"op/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14286,energy efficiency,core,core-thread-test-corethreadtestUnit,14286,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14380,energy efficiency,core,core-thread-test-corethreadtestUnit,14380,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:571,integrability,version,version,571,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1044,integrability,depend,dependency,1044,"nLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1131,integrability,version,versions,1131,"so have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:571,modifiability,version,version,571,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1044,modifiability,depend,dependency,1044,"nLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1131,modifiability,version,versions,1131,"so have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1416,modifiability,modul,modules,1416,"ss.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1463,modifiability,variab,variables,1463,"derneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from Interpre",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:248,performance,content,content,248,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:635,performance,deadlock,deadlocks,635,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1502,performance,time,timeout,1502,"``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [---",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1835,performance,Concurren,ConcurrentCalc,1835,"s, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLoc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1878,performance,Concurren,ConcurrentCalc,1878,">, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (470 ms). 76: [ RUN ] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8366,performance,concurren,concurrentResetRestore,8366,ReentrantSpin (0 ms). 76: [ RUN ] RWLock.Reentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8408,performance,concurren,concurrentResetRestore,8408,eentrant. 76: [ OK ] RWLock.Reentrant (0 ms). 76: [ RUN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8459,performance,concurren,concurrentResetRestoreSpin,8459,UN ] RWLock.ReentrantTLSpin. 76: [ OK ] RWLock.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8505,performance,concurren,concurrentResetRestoreSpin,8505,.ReentrantTLSpin (0 ms). 76: [ RUN ] RWLock.ReentrantTL. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8560,performance,concurren,concurrentResetRestoreStd,8560,. 76: [ OK ] RWLock.ReentrantTL (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8605,performance,concurren,concurrentResetRestoreStd,8605, RUN ] RWLock.ResetRestoreStd. 76: [ OK ] RWLock.ResetRestoreStd (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd14. 76: [ OK ] RWLock.ResetRestoreStd14 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStd17. 76: [ OK ] RWLock.ResetRestoreStd17 (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentRead,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8865,performance,concurren,concurrentResetRestoreStdTBB,8865,RestoreStdTBB. 76: [ OK ] RWLock.ResetRestoreStdTBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentRe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8913,performance,concurren,concurrentResetRestoreStdTBB,8913,TBB (0 ms). 76: [ RUN ] RWLock.ResetRestoreStdTBBUnique. 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:8970,performance,concurren,concurrentResetRestoreStdTBBUnique,8970, [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms). 76: [ RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrent,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9024,performance,concurren,concurrentResetRestoreStdTBBUnique,9024,RUN ] RWLock.ResetRestoreSpin. 76: [ OK ] RWLock.ResetRestoreSpin (0 ms). 76: [ RUN ] RWLock.ResetRestore. 76: [ OK ] RWLock.ResetRestore (0 ms). 76: [ RUN ] RWLock.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9192,performance,concurren,concurrentResetRestoreTL,9192,k.ResetRestoreTLSpin. 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9236,performance,concurren,concurrentResetRestoreTL,9236,tRestoreTLSpin (0 ms). 76: [ RUN ] RWLock.ResetRestoreTL. 76: [ OK ] RWLock.ResetRestoreTL (0 ms). 76: [ RUN ] RWLock.concurrentResetRestore. 76: [ OK ] RWLock.concurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9398,performance,concurren,concurrentReadsAndWrites,9398,ncurrentResetRestore (61 ms). 76: [ RUN ] RWLock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9442,performance,concurren,concurrentReadsAndWrites,9442,Lock.concurrentResetRestoreSpin. 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.Largeconcurrent,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9497,performance,concurren,concurrentReadsAndWritesSpin,9497,rentResetRestoreSpin (40 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.Largeco,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9545,performance,concurren,concurrentReadsAndWritesSpin,9545,.concurrentResetRestoreStd. 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.L,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9604,performance,concurren,concurrentReadsAndWritesStd,9604,etRestoreStd (53 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9651,performance,concurren,concurrentReadsAndWritesStd,9651,rentResetRestoreStd14. 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStd17. 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB. 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB. 76: [,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9927,performance,concurren,concurrentReadsAndWritesStdTBB,9927,(45 ms). 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.Largeconcurr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:9977,performance,concurren,concurrentReadsAndWritesStdTBB,9977,StdTBBUnique. 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (315 ms). 76: [ RUN ] RWLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10038,performance,concurren,concurrentReadsAndWritesStdTBBUnique,10038,ue (33 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestore. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (315 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.VeryLargec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:10094,performance,concurren,concurrentReadsAndWritesStdTBBUnique,10094,re. 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms). 76: [ RUN ] RWLock.concurrentResetRestoreTL. 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms). 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL. 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms). 76: [ RUN ] RWLock.concurrentReadsAndWrites. 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin. 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd. 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14. 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17. 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (315 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWrites (22562 ms). 76: [ RUN ] RWLock.V,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12647,performance,concurren,concurrentReadsAndWritesTL,12647,ique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStdTBBUnique (6940 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4261 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1077 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12693,performance,concurren,concurrentReadsAndWritesTL,12693,dsAndWritesStdTBBUnique (6940 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4261 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReads. 76: [ OK ] RWLock.VeryLargeconcurrentReads (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1077 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14472,performance,time,time,14472,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14444,reliability,fail,failed,14444,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:625,safety,safe,safe,625,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:688,safety,test,test,688,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1044,safety,depend,dependency,1044,"nLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1151,safety,Test,Test,1151,"ntation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1236,safety,test,test,1236,"intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1317,safety,test,test,1317,"eading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1416,safety,modul,modules,1416,"ss.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1497,safety,Test,Test,1497,"t from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1502,safety,timeout,timeout,1502,"``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [---",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1685,safety,test,tests,1685,"test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1698,safety,test,test,1698,"below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1735,safety,test,test,1735,"le_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1779,safety,test,tests,1779,"ique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2449,safety,test,tests,2449,nvironment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (470 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2736 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (269 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (3116 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (476 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2780 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (268 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (3164 ms). 76: [ RUN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2519,safety,test,tests,2519,be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (470 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2736 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (269 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (3116 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (476 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2780 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (268 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (3164 ms). 76: [ RUN ] RWLock.WriteStdDirectUnLock. 76: [ OK ] RWLock.WriteStdDirectUnLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13089,safety,test,tests,13089,yLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13152,safety,test,tests,13152,ntReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14069,safety,test,tests,14069,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14142,safety,test,test,14142,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14191,safety,test,tests,14191,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14204,safety,test,test,14204,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14259,safety,test,tests,14259,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14270,safety,Test,Test,14270,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14298,safety,test,test-corethreadtestUnit,14298,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14359,safety,test,tests,14359,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14392,safety,test,test-corethreadtestUnit,14392,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14422,safety,test,tests,14422,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14438,safety,test,tests,14438,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14467,safety,Test,Test,14467,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:688,testability,test,test,688,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1044,testability,depend,dependency,1044,"nLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1151,testability,Test,Test,1151,"ntation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1236,testability,test,test,1236,"intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBal",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1317,testability,test,test,1317,"eading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1497,testability,Test,Test,1497,"t from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1685,testability,test,tests,1685,"test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockV",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1698,testability,test,test,1698,"below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1735,testability,test,test,1735,"le_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1779,testability,test,tests,1779,"ique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2449,testability,test,tests,2449,nvironment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (470 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2736 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (269 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (3116 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (476 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2780 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (268 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (3164 ms). 76: [ RUN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2519,testability,test,tests,2519,be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] InterpreterLock.BalancedUserWriteLock (178 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserReadLock. 76: [ OK ] InterpreterLock.UnBalancedUserReadLock (124 ms). 76: [ RUN ] InterpreterLock.UnBalancedUserWriteLock. 76: [ OK ] InterpreterLock.UnBalancedUserWriteLock (89 ms). 76: [----------] 6 tests from InterpreterLock (725 ms total). 76: . 76: [----------] 110 tests from RWLock. 76: [ RUN ] RWLock.MutexLockVirtual. 76: [ OK ] RWLock.MutexLockVirtual (62 ms). 76: [ RUN ] RWLock.MutexUnLockVirtual. 76: [ OK ] RWLock.MutexUnLockVirtual (65 ms). 76: [ RUN ] RWLock.WriteLockVirtual. 76: [ OK ] RWLock.WriteLockVirtual (3110 ms). 76: [ RUN ] RWLock.WriteUnLockVirtual. 76: [ OK ] RWLock.WriteUnLockVirtual (470 ms). 76: [ RUN ] RWLock.WriteSpinLockVirtual. 76: [ OK ] RWLock.WriteSpinLockVirtual (2736 ms). 76: [ RUN ] RWLock.WriteSpinUnLockVirtual. 76: [ OK ] RWLock.WriteSpinUnLockVirtual (269 ms). 76: [ RUN ] RWLock.WriteLock. 76: [ OK ] RWLock.WriteLock (3116 ms). 76: [ RUN ] RWLock.WriteUnLock. 76: [ OK ] RWLock.WriteUnLock (476 ms). 76: [ RUN ] RWLock.WriteSpinLock. 76: [ OK ] RWLock.WriteSpinLock (2780 ms). 76: [ RUN ] RWLock.WriteSpinUnLock. 76: [ OK ] RWLock.WriteSpinUnLock (268 ms). 76: [ RUN ] RWLock.WriteStdDirectLock. 76: [ OK ] RWLock.WriteStdDirectLock (3164 ms). 76: [ RUN ] RWLock.WriteStdDirectUnLock. 76: [ OK ] RWLock.WriteStdDirectUnLock,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13089,testability,test,tests,13089,yLargeconcurrentReadsStd14. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13152,testability,test,tests,13152,ntReadsStd14 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique. 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14069,testability,test,tests,14069,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14142,testability,test,test,14142,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14191,testability,test,tests,14191,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14204,testability,test,test,14204,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14259,testability,test,tests,14259,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14270,testability,Test,Test,14270,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14298,testability,test,test-corethreadtestUnit,14298,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14359,testability,test,tests,14359,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14392,testability,test,test-corethreadtestUnit,14392,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14422,testability,test,tests,14422,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14438,testability,test,tests,14438,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14467,testability,Test,Test,14467,"TBBUnique (1070 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin. 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms). 76: [ RUN ] RWLock.concurrentReadsAndWritesTL. 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms). 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms). 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL. 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms). 76: [----------] 110 tests from RWLock (213032 ms total). 76: . 76: [----------] 10 tests from TThreadedObject. 76: [ RUN ] TThreadedObject.CreateAndDestroy. 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms). 76: [ RUN ] TThreadedObject.Get. 76: [ OK ] TThreadedObject.Get (10 ms). 76: [ RUN ] TThreadedObject.GetAtSlot. 76: [ OK ] TThreadedObject.GetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked. 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms). 76: [ RUN ] TThreadedObject.GetAtSlotRaw. 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms). 76: [ RUN ] TThreadedObject.SetAtSlot. 76: [ OK ] TThreadedObject.SetAtSlot (0 ms). 76: [ RUN ] TThreadedObject.Merge. 76: [ OK ] TThreadedObject.Merge (159 ms). 76: [ RUN ] TThreadedObject.SnapshotMerge. 76: [ OK ] TThreadedObject.SnapshotMerge (1 ms). 76: [ RUN ] TThreadedObject.GrowSlots. 76: [ OK ] TThreadedObject.GrowSlots (0 ms). 76: [ RUN ] TThreadedObject.GetNSlots. 76: [ OK ] TThreadedObject.GetNSlots (1 ms). 76: [----------] 10 tests from TThreadedObject (172 ms total). 76: . 76: [----------] Global test environment tear-down. 76: [==========] 126 tests from 3 test suites ran. (213929 ms total). 76: [ PASSED ] 126 tests. 1/1 Test #76: gtest-core-thread-test-corethreadtestUnit ... Passed 214.25 sec. The following tests passed:. gtest-core-thread-test-corethreadtestUnit. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 215.09 sec. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:274,usability,document,documentation,274,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:292,usability,document,documentation,292,"Ah, sorry, I was looking at the numbers for ReadUnLock. The differences between Std14 and Std17 are at least partly noise I think. I also have an implementation working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1156,usability,command,command,1156," working now based on ```tbb::enumerable_thread_specific``` (https://software.intel.com/content/www/us/en/develop/documentation/tbb-documentation/top/intel-threading-building-blocks-developer-reference/thread-local-storage/enumerablethreadspecific-template-class.html) . Now in principle what tbb is doing underneath should not so different from ``` TTHREAD_TLS_DECL```, at least for the explicit pthread-based version, so we can think about whether this is really safe from deadlocks, but the numbers looks pretty good. In the test output below ""TBB"" is using ```tbb::enumerable_thread_specific<LocalCounts>``` and ""TBBUnique"" is using ```tbb::enumerable_thread_specific<LocalCounts, tbb::cache_aligned_allocator<LocalCounts>, tbb::ets_key_per_instance>``` which is limited to a small number of instances per process (but not strictly to 1). If you would be willing to have tbb as a dependency for core/thread then I can add this (and maybe even remove the shared_mutex versions). ```. 76: Test command: /usr/bin/cmake ""-DCMD=/scratchnvme/bendavid/rootdev2/build/core/thread/test/corethreadtestUnit"" ""-DCWD=/scratchnvme/bendavid/rootdev2/build/core/thread/test"" ""-DSYS=/scratchnvme/bendavid/rootdev2/build"" ""-P"" ""/scratchnvme/bendavid/rootdev2/root/cmake/modules/RootTestDriver.cmake"". 76: Environment variables: . 76: ROOT_HIST=0. 76: Test timeout computed to be: 1500. 76: Running main() from /scratchnvme/bendavid/rootdev2/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 76: [==========] Running 126 tests from 3 test suites. 76: [----------] Global test environment set-up. 76: [----------] 6 tests from InterpreterLock. 76: [ RUN ] InterpreterLock.ConcurrentCalc. 76: [ OK ] InterpreterLock.ConcurrentCalc (87 ms). 76: [ RUN ] InterpreterLock.ReadLocks. 76: [ OK ] InterpreterLock.ReadLocks (78 ms). 76: [ RUN ] InterpreterLock.BalancedUserReadLock. 76: [ OK ] InterpreterLock.BalancedUserReadLock (169 ms). 76: [ RUN ] InterpreterLock.BalancedUserWriteLock. 76: [ OK ] Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:67,availability,avail,availability,67,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13,deployability,depend,dependency,13,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:108,deployability,build,build,108,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:374,deployability,log,log,374,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:27,energy efficiency,core,core,27,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:254,energy efficiency,Current,Current,254,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13,integrability,depend,dependency,13,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13,modifiability,depend,dependency,13,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:211,modifiability,scal,scaling,211,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:195,performance,perform,performance,195,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:67,reliability,availab,availability,67,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13,safety,depend,dependency,13,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:67,safety,avail,availability,67,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:374,safety,log,log,374,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:67,security,availab,availability,67,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:374,security,log,log,374,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:13,testability,depend,dependency,13,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:374,testability,log,log,374,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:195,usability,perform,performance,195,"Having a TBB dependency in core should be a ""big"" move (making the availability of TBB a pre-requirement to build ROOT). On your original (RDataFrame if I recall correctly) use case, what is the performance and scaling differences between the 3 cases. * Current. * std::shared_mutex. * ""TBBUnique"". ? (Some form of those results should also probably make it into the commit log before merging).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,deployability,depend,dependency,102,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:196,deployability,build,building,196,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,integrability,depend,dependency,102,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,modifiability,depend,dependency,102,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14,safety,test,tests,14,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,safety,depend,dependency,102,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:14,testability,test,tests,14,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:102,testability,depend,dependency,102,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:174,usability,efficien,efficiency,174,"I'll send the tests results which have been requested soon, and likely arrange things so that the TBB dependency here is optional. (Probably anyone who cares about threading efficiency is anyways building with implicit multithreading enabled.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1384,deployability,depend,dependencies,1384,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1461,deployability,depend,dependency,1461,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:70,energy efficiency,current,current,70,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:187,energy efficiency,CPU,CPU,187,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:227,energy efficiency,clock,clock,227,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:415,energy efficiency,CPU,CPU,415,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:455,energy efficiency,clock,clock,455,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:614,energy efficiency,CPU,CPU,614,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:654,energy efficiency,clock,clock,654,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:801,energy efficiency,CPU,CPU,801,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:841,energy efficiency,clock,clock,841,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1000,energy efficiency,CPU,CPU,1000,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1040,energy efficiency,clock,clock,1040,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1221,energy efficiency,optim,optimized,1221,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1434,energy efficiency,core,core,1434,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1475,energy efficiency,core,core,1475,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:275,integrability,sub,subject,275,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1384,integrability,depend,dependencies,1384,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1461,integrability,depend,dependency,1461,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1384,modifiability,depend,dependencies,1384,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1461,modifiability,depend,dependency,1461,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:187,performance,CPU,CPU,187,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:234,performance,time,time,234,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:286,performance,deadlock,deadlocks,286,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:415,performance,CPU,CPU,415,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:462,performance,time,time,462,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:614,performance,CPU,CPU,614,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:661,performance,time,time,661,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:801,performance,CPU,CPU,801,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:848,performance,time,time,848,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1000,performance,CPU,CPU,1000,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1047,performance,time,time,1047,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1179,performance,lock,lock,1179,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1221,performance,optimiz,optimized,1221,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1156,safety,avoid,avoiding,1156,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1384,safety,depend,dependencies,1384,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1461,safety,depend,dependency,1461,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1179,security,lock,lock,1179,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1384,testability,depend,dependencies,1384,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1461,testability,depend,dependency,1461,"Benchmarks for my RDF use-case with 256 threads look like:. ```. Std (current default). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously). ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%. Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique. ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24. ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:30,deployability,depend,dependencies,30,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:107,deployability,depend,dependency,107,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:80,energy efficiency,core,core,80,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:121,energy efficiency,core,core,121,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:30,integrability,depend,dependencies,30,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:107,integrability,depend,dependency,107,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:30,modifiability,depend,dependencies,30,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:107,modifiability,depend,dependency,107,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:30,safety,depend,dependencies,30,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:107,safety,depend,dependency,107,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:30,testability,depend,dependencies,30,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:107,testability,depend,dependency,107,"> In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions). I agree that it is a possible solution. @Axel-Naumann opinion?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:253,performance,time,time,253,> Benchmarks for my RDF use-case with 256 threads look like:. I might be confused (i.e. I am probably looking at the wrong numbers). This last set of numbers says that the total improvements on the 256 threads use case is around 7% of the 3 minutes run-time. Is that correct?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:0,deployability,Depend,Dependency,0,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:94,deployability,depend,dependencies,94,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:115,energy efficiency,core,core,115,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:0,integrability,Depend,Dependency,0,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:94,integrability,depend,dependencies,94,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:0,modifiability,Depend,Dependency,0,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:94,modifiability,depend,dependencies,94,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:0,safety,Depend,Dependency,0,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:94,safety,depend,dependencies,94,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:0,testability,Depend,Dependency,0,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:94,testability,depend,dependencies,94,Dependency: I don't have a strong opinion or technical argument. I'm a bit afraid of circular dependencies between core and imt.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:555,energy efficiency,CPU,CPU,555,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:593,energy efficiency,clock,clock,593,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:701,energy efficiency,CPU,CPU,701,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:740,energy efficiency,clock,clock,740,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:819,energy efficiency,CPU,CPU,819,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:858,energy efficiency,clock,clock,858,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:357,integrability,event,events,357,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:399,integrability,event,events,399,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:133,performance,lock,locks,133,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:163,performance,lock,locks,163,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:555,performance,CPU,CPU,555,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:600,performance,time,time,600,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:651,performance,lock,locks,651,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:701,performance,CPU,CPU,701,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:747,performance,time,time,747,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:819,performance,CPU,CPU,819,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:865,performance,time,time,865,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:920,performance,lock,locks,920,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:337,safety,test,test,337,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:370,safety,input,input,370,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:414,safety,input,input,414,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:133,security,lock,locks,133,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:163,security,lock,locks,163,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:651,security,lock,locks,651,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:920,security,lock,locks,920,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:337,testability,test,test,337,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:370,usability,input,input,370,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:414,usability,input,input,414,"@pcanal, yes the improvement from using TBB with TReentrantRWLock for gCoreMutex is only 7% in this case, but actually the use of RW locks instead of always write locks in ```TBufferFile::ReadClassBuffer``` is a much bigger improvement (and the comparisons I was showing for the RWLock variants was always on top of this). For a smaller test with only 9.7M events in 19 input files (instead of 513M events in 1000 input files), using. 256 threads and ```ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1)``` the numbers are:. ```. Baseline:. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. + Use read-write locks in TBufferFile::ReadClassBuffer. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. + TBBUnique for gCoreMutex. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. ```. So the use of RW locks in ```TBufferFile::ReadClassBuffer``` is a factor 80 improvement and the improvement of the RWLock with TBB is another 10%.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:54,deployability,scale,scale,54,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:54,energy efficiency,scale,scale,54,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:346,energy efficiency,CPU,CPU,346,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:384,energy efficiency,clock,clock,384,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:449,energy efficiency,CPU,CPU,449,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:487,energy efficiency,clock,clock,487,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:550,energy efficiency,CPU,CPU,550,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:588,energy efficiency,clock,clock,588,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:651,energy efficiency,CPU,CPU,651,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:690,energy efficiency,clock,clock,690,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:753,energy efficiency,CPU,CPU,753,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:792,energy efficiency,clock,clock,792,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:854,energy efficiency,CPU,CPU,854,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:892,energy efficiency,clock,clock,892,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:954,energy efficiency,CPU,CPU,954,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:992,energy efficiency,clock,clock,992,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1054,energy efficiency,CPU,CPU,1054,"ale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1092,energy efficiency,clock,clock,1092,scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1170,energy efficiency,CPU,CPU,1170,is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1207,energy efficiency,clock,clock,1207,ad counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1327,energy efficiency,CPU,CPU,1327,eads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1366,energy efficiency,clock,clock,1366, Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1430,energy efficiency,CPU,CPU,1430,eads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1469,energy efficiency,clock,clock,1469, Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1533,energy efficiency,CPU,CPU,1533,ds. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1572,energy efficiency,clock,clock,1572,lapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1635,energy efficiency,CPU,CPU,1635,s. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1674,energy efficiency,clock,clock,1674,lapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1737,energy efficiency,CPU,CPU,1737,s. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1776,energy efficiency,clock,clock,1776,lapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1839,energy efficiency,CPU,CPU,1839,. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1878,energy efficiency,clock,clock,1878,psed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 thre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1940,energy efficiency,CPU,CPU,1940, Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1978,energy efficiency,clock,clock,1978,psed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 thr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2040,energy efficiency,CPU,CPU,2040, Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2078,energy efficiency,clock,clock,2078,psed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 thr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2140,energy efficiency,CPU,CPU,2140,no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2178,energy efficiency,clock,clock,2178,b got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 thr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2256,energy efficiency,CPU,CPU,2256,write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2293,energy efficiency,clock,clock,2293,uffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implici,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2385,energy efficiency,CPU,CPU,2385,or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2424,energy efficiency,clock,clock,2424,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2488,energy efficiency,CPU,CPU,2488,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2527,energy efficiency,clock,clock,2527,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2591,energy efficiency,CPU,CPU,2591,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2630,energy efficiency,clock,clock,2630,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2693,energy efficiency,CPU,CPU,2693,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2732,energy efficiency,clock,clock,2732,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2795,energy efficiency,CPU,CPU,2795,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2834,energy efficiency,clock,clock,2834,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2897,energy efficiency,CPU,CPU,2897,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2936,energy efficiency,clock,clock,2936,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2998,energy efficiency,CPU,CPU,2998,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3036,energy efficiency,clock,clock,3036,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3098,energy efficiency,CPU,CPU,3098,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3136,energy efficiency,clock,clock,3136,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3198,energy efficiency,CPU,CPU,3198,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3236,energy efficiency,clock,clock,3236,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3314,energy efficiency,CPU,CPU,3314,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3351,energy efficiency,clock,clock,3351,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:232,integrability,event,events,232,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:54,modifiability,scal,scale,54,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:95,modifiability,scal,scaling,95,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:54,performance,scale,scale,54,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:346,performance,CPU,CPU,346,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:391,performance,time,time,391,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:449,performance,CPU,CPU,449,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:494,performance,time,time,494,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:550,performance,CPU,CPU,550,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:595,performance,time,time,595,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:651,performance,CPU,CPU,651,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:697,performance,time,time,697,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:753,performance,CPU,CPU,753,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:799,performance,time,time,799,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:854,performance,CPU,CPU,854,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:899,performance,time,time,899,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:954,performance,CPU,CPU,954,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:999,performance,time,time,999,"hough this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1054,performance,CPU,CPU,1054,"ale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1099,performance,time,time,1099,g comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1170,performance,CPU,CPU,1170,is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1214,performance,time,time,1214,nts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1264,performance,lock,locks,1264,eProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this jo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1327,performance,CPU,CPU,1327,eads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1373,performance,time,time,1373,ed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1430,performance,CPU,CPU,1430,eads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1476,performance,time,time,1476,ed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1533,performance,CPU,CPU,1533,ds. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1579,performance,time,time,1579, (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1635,performance,CPU,CPU,1635,s. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1681,performance,time,time,1681, (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1737,performance,CPU,CPU,1737,s. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1783,performance,time,time,1783, (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1839,performance,CPU,CPU,1839,. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1885,performance,time,time,1885,wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1940,performance,CPU,CPU,1940, Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:1985,performance,time,time,1985,wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2040,performance,CPU,CPU,2040, Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2085,performance,time,time,2085,wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2140,performance,CPU,CPU,2140,no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2185,performance,time,time,2185, 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2256,performance,CPU,CPU,2256,write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2300,performance,time,time,2300, 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2385,performance,CPU,CPU,2385,or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2431,performance,time,time,2431,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2488,performance,CPU,CPU,2488,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2534,performance,time,time,2534,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2591,performance,CPU,CPU,2591,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2637,performance,time,time,2637,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2693,performance,CPU,CPU,2693,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2739,performance,time,time,2739,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2795,performance,CPU,CPU,2795,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2841,performance,time,time,2841,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2897,performance,CPU,CPU,2897,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2943,performance,time,time,2943,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:2998,performance,CPU,CPU,2998,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3043,performance,time,time,3043,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3098,performance,CPU,CPU,3098,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3143,performance,time,time,3143,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3198,performance,CPU,CPU,3198,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3243,performance,time,time,3243,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3314,performance,CPU,CPU,3314,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:3358,performance,time,time,3358,): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.25. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.97. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:35.59. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:11.11. + TBBUnique for gCoreMutex. 256 threads. Percent of CPU this job got: 4765%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:16.00. 192 threads. Percent of CPU this job got: 4644%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:14.62. 128 threads. Percent of CPU this job got: 4551%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.46. 64 threads. Percent of CPU this job got: 3782%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.05. 32 threads. Percent of CPU this job got: 2383%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.43. 16 threads. Percent of CPU this job got: 1374%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:25.43. 8 threads. Percent of CPU this job got: 742%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.26. 4 threads. Percent of CPU this job got: 385%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:26.85. 2 threads. Percent of CPU this job got: 197%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:32.81. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.98. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:12,safety,test,test,12,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
https://github.com/root-project/root/pull/6919:245,safety,input,input,245,"Though this test is probably too short to effectively scale to higher thread counts, I add the scaling comparison here which is anyways interesting (obviously the baseline is much better behaved at smaller thread counts). ```. 9.7M events in 19 input files. ROOT.TTreeProcessorMT.SetMaxTasksPerFilePerWorker(1). Baseline. 256 threads. Percent of CPU this job got: 397%. Elapsed (wall clock) time (h:mm:ss or m:ss): 24:56.08. 128 threads. Percent of CPU this job got: 816%. Elapsed (wall clock) time (h:mm:ss or m:ss): 7:46.83. 64 threads. Percent of CPU this job got: 770%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.09. 32 threads. Percent of CPU this job got: 1209%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:35.40. 16 threads. Percent of CPU this job got: 1142%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:33.39. 8 threads. Percent of CPU this job got: 743%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.61. 4 threads. Percent of CPU this job got: 386%. Elapsed (wall clock) time (h:mm:ss or m:ss): 1:27.77. 2 threads. Percent of CPU this job got: 198%. Elapsed (wall clock) time (h:mm:ss or m:ss): 2:41.98. 1 thread (no implicit MT). Percent of CPU this job got: 99%. Elapsed (wall clock) time (h:mm:ss or m:ss): 4:10.06. + Use read-write locks in TBufferFile::ReadClassBuffer. 256 threads. Percent of CPU this job got: 3971%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:18.81. 192 threads. Percent of CPU this job got: 4578%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.87. 128 threads. Percent of CPU this job got: 4908%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:13.90. 64 threads. Percent of CPU this job got: 3897%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:11.40. 32 threads. Percent of CPU this job got: 2403%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:15.90. 16 threads. Percent of CPU this job got: 1384%. Elapsed (wall clock) time (h:mm:ss or m:ss): 0:26.35. 8 threads. Percent of CPU this job got: 739%. Elapsed (wall clock) time (h:mm:ss o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6919
